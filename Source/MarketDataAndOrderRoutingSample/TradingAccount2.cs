// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WebAPI/trading_account_2.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TradingAccount2 {

  /// <summary>Holder for reflection information generated from WebAPI/trading_account_2.proto</summary>
  public static partial class TradingAccount2Reflection {

    #region Descriptor
    /// <summary>File descriptor for WebAPI/trading_account_2.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TradingAccount2Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5XZWJBUEkvdHJhZGluZ19hY2NvdW50XzIucHJvdG8SEXRyYWRpbmdfYWNj",
            "b3VudF8yGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvIhEKD0Fj",
            "Y291bnRzUmVxdWVzdCJCCg5BY2NvdW50c1JlcG9ydBIwCgpicm9rZXJhZ2Vz",
            "GAEgAygLMhwudHJhZGluZ19hY2NvdW50XzIuQnJva2VyYWdlIscBCglCcm9r",
            "ZXJhZ2USCgoCaWQYASACKA0SDAoEbmFtZRgCIAIoCRIMCgR0eXBlGAQgASgN",
            "EjQKDHNhbGVzX3NlcmllcxgDIAMoCzIeLnRyYWRpbmdfYWNjb3VudF8yLlNh",
            "bGVzU2VyaWVzIlwKDUJyb2tlcmFnZVR5cGUSGgoWQlJPS0VSQUdFX1RZUEVf",
            "UkVHVUxBUhABEhYKEkJST0tFUkFHRV9UWVBFX1NJTRACEhcKE0JST0tFUkFH",
            "RV9UWVBFX0RFTU8QAyJZCgtTYWxlc1NlcmllcxIOCgZudW1iZXIYASACKAkS",
            "DAoEbmFtZRgCIAIoCRIsCghhY2NvdW50cxgDIAMoCzIaLnRyYWRpbmdfYWNj",
            "b3VudF8yLkFjY291bnQiwAQKB0FjY291bnQSEgoKYWNjb3VudF9pZBgBIAIo",
            "ERIcChRicm9rZXJhZ2VfYWNjb3VudF9pZBgCIAIoCRIMCgRuYW1lGAMgAigJ",
            "EhsKE2xhc3Rfc3RhdGVtZW50X2RhdGUYBCACKBISFAoMaXNfdmlld19vbmx5",
            "GAUgASgIEhcKD2lzX3VuYXV0aG9yaXplZBgGIAEoCBIRCglyZXNlcnZlZDEY",
            "ByABKBISIQoZYWNjb3VudF9jb25uZWN0aW9uX3N0YXR1cxgIIAEoDRJLCidh",
            "Y2NvdW50X2Nvbm5lY3Rpb25fc3RhdHVzX3V0Y190aW1lc3RhbXAYCSABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhcKD2NvbnRyaWJ1dG9yX2lk",
            "cxgKIAMoCRIqCiJwcmVfdHJhZGVfbWlkX21hcmtldF9tYXJrX3JlcXVpcmVk",
            "GAsgASgIEh8KF2FsbG93X2V4dGVybmFsX2FjY291bnRzGAwgASgIIr8BChdB",
            "Y2NvdW50Q29ubmVjdGlvblN0YXR1cxIlCiFBQ0NPVU5UX0NPTk5FQ1RJT05f",
            "U1RBVFVTX09GRkxJTkUQARIqCiZBQ0NPVU5UX0NPTk5FQ1RJT05fU1RBVFVT",
            "X0RJU0NPTk5FQ1RFRBACEigKJEFDQ09VTlRfQ09OTkVDVElPTl9TVEFUVVNf",
            "Q09OTkVDVElORxADEicKI0FDQ09VTlRfQ09OTkVDVElPTl9TVEFUVVNfQ09O",
            "TkVDVEVEEAQiHgocTGFzdFN0YXRlbWVudEJhbGFuY2VzUmVxdWVzdCJLChtM",
            "YXN0U3RhdGVtZW50QmFsYW5jZXNSZXBvcnQSLAoIYmFsYW5jZXMYASADKAsy",
            "Gi50cmFkaW5nX2FjY291bnRfMi5CYWxhbmNlIvIBCgdCYWxhbmNlEgoKAmlk",
            "GAEgAigREhIKCmFjY291bnRfaWQYAiACKBESFgoOc3RhdGVtZW50X2RhdGUY",
            "AyACKBISEAoIY3VycmVuY3kYBCACKAkSDwoHYmFsYW5jZRgFIAIoARITCgt0",
            "b3RhbF92YWx1ZRgGIAIoARILCgNvdGUYByACKAESCwoDdXBsGAggAigBEgsK",
            "A212bxgJIAIoARITCgtjYXNoX2V4Y2VzcxgKIAIoARISCgpjb2xsYXRlcmFs",
            "GAsgAigBEhYKDmluaXRpYWxfbWFyZ2luGAwgAigBEg8KB2RlbGV0ZWQYDSAB",
            "KAgiFgoUQ3VycmVuY3lSYXRlc1JlcXVlc3QiYgoTQ3VycmVuY3lSYXRlc1Jl",
            "cG9ydBJLChhicm9rZXJhZ2VfY3VycmVuY3lfcmF0ZXMYASADKAsyKS50cmFk",
            "aW5nX2FjY291bnRfMi5Ccm9rZXJhZ2VDdXJyZW5jeVJhdGVzIpgBChZCcm9r",
            "ZXJhZ2VDdXJyZW5jeVJhdGVzEhQKDGJyb2tlcmFnZV9pZBgBIAIoDRIXCg9t",
            "YXN0ZXJfY3VycmVuY3kYAiACKAkSFgoOc3RhdGVtZW50X2RhdGUYAyACKBIS",
            "NwoOY3VycmVuY3lfcmF0ZXMYBCADKAsyHy50cmFkaW5nX2FjY291bnRfMi5D",
            "dXJyZW5jeVJhdGUiRgoMQ3VycmVuY3lSYXRlEhAKCGN1cnJlbmN5GAIgAigJ",
            "EgwKBHJhdGUYAyACKAESFgoOZGVjaW1hbF9wbGFjZXMYBCABKA0="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TradingAccount2.AccountsRequest), global::TradingAccount2.AccountsRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TradingAccount2.AccountsReport), global::TradingAccount2.AccountsReport.Parser, new[]{ "Brokerages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TradingAccount2.Brokerage), global::TradingAccount2.Brokerage.Parser, new[]{ "Id", "Name", "Type", "SalesSeries" }, null, new[]{ typeof(global::TradingAccount2.Brokerage.Types.BrokerageType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TradingAccount2.SalesSeries), global::TradingAccount2.SalesSeries.Parser, new[]{ "Number", "Name", "Accounts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TradingAccount2.Account), global::TradingAccount2.Account.Parser, new[]{ "AccountId", "BrokerageAccountId", "Name", "LastStatementDate", "IsViewOnly", "IsUnauthorized", "Reserved1", "AccountConnectionStatus", "AccountConnectionStatusUtcTimestamp", "ContributorIds", "PreTradeMidMarketMarkRequired", "AllowExternalAccounts" }, null, new[]{ typeof(global::TradingAccount2.Account.Types.AccountConnectionStatus) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TradingAccount2.LastStatementBalancesRequest), global::TradingAccount2.LastStatementBalancesRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TradingAccount2.LastStatementBalancesReport), global::TradingAccount2.LastStatementBalancesReport.Parser, new[]{ "Balances" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TradingAccount2.Balance), global::TradingAccount2.Balance.Parser, new[]{ "Id", "AccountId", "StatementDate", "Currency", "Balance_", "TotalValue", "Ote", "Upl", "Mvo", "CashExcess", "Collateral", "InitialMargin", "Deleted" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TradingAccount2.CurrencyRatesRequest), global::TradingAccount2.CurrencyRatesRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TradingAccount2.CurrencyRatesReport), global::TradingAccount2.CurrencyRatesReport.Parser, new[]{ "BrokerageCurrencyRates" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TradingAccount2.BrokerageCurrencyRates), global::TradingAccount2.BrokerageCurrencyRates.Parser, new[]{ "BrokerageId", "MasterCurrency", "StatementDate", "CurrencyRates" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TradingAccount2.CurrencyRate), global::TradingAccount2.CurrencyRate.Parser, new[]{ "Currency", "Rate", "DecimalPlaces" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Request for a list of accounts this user is authorized to use and/ or monitor, empty message.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AccountsRequest : pb::IMessage<AccountsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountsRequest> _parser = new pb::MessageParser<AccountsRequest>(() => new AccountsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AccountsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TradingAccount2.TradingAccount2Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountsRequest(AccountsRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountsRequest Clone() {
      return new AccountsRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AccountsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AccountsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AccountsRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response with a list of authorized accounts grouped by brokerage firms and internal sales series (account groups),
  /// the same account can not belong to more than one account group.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AccountsReport : pb::IMessage<AccountsReport>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AccountsReport> _parser = new pb::MessageParser<AccountsReport>(() => new AccountsReport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AccountsReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TradingAccount2.TradingAccount2Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountsReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountsReport(AccountsReport other) : this() {
      brokerages_ = other.brokerages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AccountsReport Clone() {
      return new AccountsReport(this);
    }

    /// <summary>Field number for the "brokerages" field.</summary>
    public const int BrokeragesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TradingAccount2.Brokerage> _repeated_brokerages_codec
        = pb::FieldCodec.ForMessage(10, global::TradingAccount2.Brokerage.Parser);
    private readonly pbc::RepeatedField<global::TradingAccount2.Brokerage> brokerages_ = new pbc::RepeatedField<global::TradingAccount2.Brokerage>();
    /// <summary>
    /// List or brokerages with accounts the user works with.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TradingAccount2.Brokerage> Brokerages {
      get { return brokerages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AccountsReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AccountsReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!brokerages_.Equals(other.brokerages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= brokerages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      brokerages_.WriteTo(output, _repeated_brokerages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      brokerages_.WriteTo(ref output, _repeated_brokerages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += brokerages_.CalculateSize(_repeated_brokerages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AccountsReport other) {
      if (other == null) {
        return;
      }
      brokerages_.Add(other.brokerages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            brokerages_.AddEntriesFrom(input, _repeated_brokerages_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            brokerages_.AddEntriesFrom(ref input, _repeated_brokerages_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List of brokerage accounts.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Brokerage : pb::IMessage<Brokerage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Brokerage> _parser = new pb::MessageParser<Brokerage>(() => new Brokerage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Brokerage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TradingAccount2.TradingAccount2Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Brokerage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Brokerage(Brokerage other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      name_ = other.name_;
      type_ = other.type_;
      salesSeries_ = other.salesSeries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Brokerage Clone() {
      return new Brokerage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    /// <summary>
    /// Brokerage firm ID in CQG trade routing system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// Brokerage firm name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private readonly static uint TypeDefaultValue = 0;

    private uint type_;
    /// <summary>
    /// This field is associated with BrokerageType enum type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Type {
      get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "sales_series" field.</summary>
    public const int SalesSeriesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TradingAccount2.SalesSeries> _repeated_salesSeries_codec
        = pb::FieldCodec.ForMessage(26, global::TradingAccount2.SalesSeries.Parser);
    private readonly pbc::RepeatedField<global::TradingAccount2.SalesSeries> salesSeries_ = new pbc::RepeatedField<global::TradingAccount2.SalesSeries>();
    /// <summary>
    /// List of sales series.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TradingAccount2.SalesSeries> SalesSeries {
      get { return salesSeries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Brokerage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Brokerage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if(!salesSeries_.Equals(other.salesSeries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      hash ^= salesSeries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      salesSeries_.WriteTo(output, _repeated_salesSeries_codec);
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteUInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      salesSeries_.WriteTo(ref output, _repeated_salesSeries_codec);
      if (HasType) {
        output.WriteRawTag(32);
        output.WriteUInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      size += salesSeries_.CalculateSize(_repeated_salesSeries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Brokerage other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      salesSeries_.Add(other.salesSeries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            salesSeries_.AddEntriesFrom(input, _repeated_salesSeries_codec);
            break;
          }
          case 32: {
            Type = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            salesSeries_.AddEntriesFrom(ref input, _repeated_salesSeries_codec);
            break;
          }
          case 32: {
            Type = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Brokerage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Brokerage type.
      /// </summary>
      public enum BrokerageType {
        /// <summary>
        /// Regular.
        /// </summary>
        [pbr::OriginalName("BROKERAGE_TYPE_REGULAR")] Regular = 1,
        /// <summary>
        /// Simulation.
        /// </summary>
        [pbr::OriginalName("BROKERAGE_TYPE_SIM")] Sim = 2,
        /// <summary>
        /// Demo.
        /// </summary>
        [pbr::OriginalName("BROKERAGE_TYPE_DEMO")] Demo = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// List of accounts in a sales series group.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SalesSeries : pb::IMessage<SalesSeries>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SalesSeries> _parser = new pb::MessageParser<SalesSeries>(() => new SalesSeries());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SalesSeries> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TradingAccount2.TradingAccount2Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SalesSeries() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SalesSeries(SalesSeries other) : this() {
      number_ = other.number_;
      name_ = other.name_;
      accounts_ = other.accounts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SalesSeries Clone() {
      return new SalesSeries(this);
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 1;
    private readonly static string NumberDefaultValue = "";

    private string number_;
    /// <summary>
    /// Sales series number in CQG trade routing system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Number {
      get { return number_ ?? NumberDefaultValue; }
      set {
        number_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNumber {
      get { return number_ != null; }
    }
    /// <summary>Clears the value of the "number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNumber() {
      number_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// Sales series name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "accounts" field.</summary>
    public const int AccountsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TradingAccount2.Account> _repeated_accounts_codec
        = pb::FieldCodec.ForMessage(26, global::TradingAccount2.Account.Parser);
    private readonly pbc::RepeatedField<global::TradingAccount2.Account> accounts_ = new pbc::RepeatedField<global::TradingAccount2.Account>();
    /// <summary>
    /// List of accounts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TradingAccount2.Account> Accounts {
      get { return accounts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SalesSeries);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SalesSeries other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Number != other.Number) return false;
      if (Name != other.Name) return false;
      if(!accounts_.Equals(other.accounts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasNumber) hash ^= Number.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      hash ^= accounts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasNumber) {
        output.WriteRawTag(10);
        output.WriteString(Number);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      accounts_.WriteTo(output, _repeated_accounts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasNumber) {
        output.WriteRawTag(10);
        output.WriteString(Number);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      accounts_.WriteTo(ref output, _repeated_accounts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasNumber) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Number);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += accounts_.CalculateSize(_repeated_accounts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SalesSeries other) {
      if (other == null) {
        return;
      }
      if (other.HasNumber) {
        Number = other.Number;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      accounts_.Add(other.accounts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Number = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            accounts_.AddEntriesFrom(input, _repeated_accounts_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Number = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            accounts_.AddEntriesFrom(ref input, _repeated_accounts_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Trade routing account data.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Account : pb::IMessage<Account>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Account> _parser = new pb::MessageParser<Account>(() => new Account());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Account> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TradingAccount2.TradingAccount2Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Account() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Account(Account other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      brokerageAccountId_ = other.brokerageAccountId_;
      name_ = other.name_;
      lastStatementDate_ = other.lastStatementDate_;
      isViewOnly_ = other.isViewOnly_;
      isUnauthorized_ = other.isUnauthorized_;
      reserved1_ = other.reserved1_;
      accountConnectionStatus_ = other.accountConnectionStatus_;
      accountConnectionStatusUtcTimestamp_ = other.accountConnectionStatusUtcTimestamp_ != null ? other.accountConnectionStatusUtcTimestamp_.Clone() : null;
      contributorIds_ = other.contributorIds_.Clone();
      preTradeMidMarketMarkRequired_ = other.preTradeMidMarketMarkRequired_;
      allowExternalAccounts_ = other.allowExternalAccounts_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Account Clone() {
      return new Account(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static int AccountIdDefaultValue = 0;

    private int accountId_;
    /// <summary>
    /// Account ID in CQG trade routing system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "brokerage_account_id" field.</summary>
    public const int BrokerageAccountIdFieldNumber = 2;
    private readonly static string BrokerageAccountIdDefaultValue = "";

    private string brokerageAccountId_;
    /// <summary>
    /// Account ID in Brokerage Firm.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BrokerageAccountId {
      get { return brokerageAccountId_ ?? BrokerageAccountIdDefaultValue; }
      set {
        brokerageAccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "brokerage_account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrokerageAccountId {
      get { return brokerageAccountId_ != null; }
    }
    /// <summary>Clears the value of the "brokerage_account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrokerageAccountId() {
      brokerageAccountId_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// Account name in CQG trade routing system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "last_statement_date" field.</summary>
    public const int LastStatementDateFieldNumber = 4;
    private readonly static long LastStatementDateDefaultValue = 0L;

    private long lastStatementDate_;
    /// <summary>
    /// Last statement date for this account
    /// (brokerage local date in time format, use date part only).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LastStatementDate {
      get { if ((_hasBits0 & 2) != 0) { return lastStatementDate_; } else { return LastStatementDateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        lastStatementDate_ = value;
      }
    }
    /// <summary>Gets whether the "last_statement_date" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastStatementDate {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "last_statement_date" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastStatementDate() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "is_view_only" field.</summary>
    public const int IsViewOnlyFieldNumber = 5;
    private readonly static bool IsViewOnlyDefaultValue = false;

    private bool isViewOnly_;
    /// <summary>
    /// True if user can only monitor this account without trading.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsViewOnly {
      get { if ((_hasBits0 & 4) != 0) { return isViewOnly_; } else { return IsViewOnlyDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isViewOnly_ = value;
      }
    }
    /// <summary>Gets whether the "is_view_only" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsViewOnly {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_view_only" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsViewOnly() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "is_unauthorized" field.</summary>
    public const int IsUnauthorizedFieldNumber = 6;
    private readonly static bool IsUnauthorizedDefaultValue = false;

    private bool isUnauthorized_;
    /// <summary>
    /// True if user was unauthorized and is not able to use/ see this account anymore.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsUnauthorized {
      get { if ((_hasBits0 & 8) != 0) { return isUnauthorized_; } else { return IsUnauthorizedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        isUnauthorized_ = value;
      }
    }
    /// <summary>Gets whether the "is_unauthorized" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsUnauthorized {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "is_unauthorized" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsUnauthorized() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "reserved1" field.</summary>
    public const int Reserved1FieldNumber = 7;
    private readonly static long Reserved1DefaultValue = 0L;

    private long reserved1_;
    /// <summary>
    /// Reserved field number (do not reuse).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Reserved1 {
      get { if ((_hasBits0 & 16) != 0) { return reserved1_; } else { return Reserved1DefaultValue; } }
      set {
        _hasBits0 |= 16;
        reserved1_ = value;
      }
    }
    /// <summary>Gets whether the "reserved1" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReserved1 {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "reserved1" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReserved1() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "account_connection_status" field.</summary>
    public const int AccountConnectionStatusFieldNumber = 8;
    private readonly static uint AccountConnectionStatusDefaultValue = 0;

    private uint accountConnectionStatus_;
    /// <summary>
    /// Current account connection status.
    /// It is set for only accounts that require authorization.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AccountConnectionStatus {
      get { if ((_hasBits0 & 32) != 0) { return accountConnectionStatus_; } else { return AccountConnectionStatusDefaultValue; } }
      set {
        _hasBits0 |= 32;
        accountConnectionStatus_ = value;
      }
    }
    /// <summary>Gets whether the "account_connection_status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccountConnectionStatus {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "account_connection_status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccountConnectionStatus() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "account_connection_status_utc_timestamp" field.</summary>
    public const int AccountConnectionStatusUtcTimestampFieldNumber = 9;
    private global::Google.Protobuf.Timestamp accountConnectionStatusUtcTimestamp_;
    /// <summary>
    /// Account status last update time.
    /// It is set for only accounts that require authorization.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.Timestamp AccountConnectionStatusUtcTimestamp {
      get { return accountConnectionStatusUtcTimestamp_; }
      set {
        accountConnectionStatusUtcTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "contributor_ids" field.</summary>
    public const int ContributorIdsFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_contributorIds_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> contributorIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional list of authorized OTC contributors.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ContributorIds {
      get { return contributorIds_; }
    }

    /// <summary>Field number for the "pre_trade_mid_market_mark_required" field.</summary>
    public const int PreTradeMidMarketMarkRequiredFieldNumber = 11;
    private readonly static bool PreTradeMidMarketMarkRequiredDefaultValue = false;

    private bool preTradeMidMarketMarkRequired_;
    /// <summary>
    /// This flag shows if pre trade mid market mark should be calculated by client
    /// and provided via order extra attribute "PreTradeMidMarketMark" during order placement or modification.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PreTradeMidMarketMarkRequired {
      get { if ((_hasBits0 & 64) != 0) { return preTradeMidMarketMarkRequired_; } else { return PreTradeMidMarketMarkRequiredDefaultValue; } }
      set {
        _hasBits0 |= 64;
        preTradeMidMarketMarkRequired_ = value;
      }
    }
    /// <summary>Gets whether the "pre_trade_mid_market_mark_required" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPreTradeMidMarketMarkRequired {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "pre_trade_mid_market_mark_required" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPreTradeMidMarketMarkRequired() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "allow_external_accounts" field.</summary>
    public const int AllowExternalAccountsFieldNumber = 12;
    private readonly static bool AllowExternalAccountsDefaultValue = false;

    private bool allowExternalAccounts_;
    /// <summary>
    /// This flag shows if current account can be used to place orders into external accounts.
    /// See order_2.Order.external_account_number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AllowExternalAccounts {
      get { if ((_hasBits0 & 128) != 0) { return allowExternalAccounts_; } else { return AllowExternalAccountsDefaultValue; } }
      set {
        _hasBits0 |= 128;
        allowExternalAccounts_ = value;
      }
    }
    /// <summary>Gets whether the "allow_external_accounts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAllowExternalAccounts {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "allow_external_accounts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAllowExternalAccounts() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Account);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Account other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (BrokerageAccountId != other.BrokerageAccountId) return false;
      if (Name != other.Name) return false;
      if (LastStatementDate != other.LastStatementDate) return false;
      if (IsViewOnly != other.IsViewOnly) return false;
      if (IsUnauthorized != other.IsUnauthorized) return false;
      if (Reserved1 != other.Reserved1) return false;
      if (AccountConnectionStatus != other.AccountConnectionStatus) return false;
      if (!object.Equals(AccountConnectionStatusUtcTimestamp, other.AccountConnectionStatusUtcTimestamp)) return false;
      if(!contributorIds_.Equals(other.contributorIds_)) return false;
      if (PreTradeMidMarketMarkRequired != other.PreTradeMidMarketMarkRequired) return false;
      if (AllowExternalAccounts != other.AllowExternalAccounts) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasBrokerageAccountId) hash ^= BrokerageAccountId.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasLastStatementDate) hash ^= LastStatementDate.GetHashCode();
      if (HasIsViewOnly) hash ^= IsViewOnly.GetHashCode();
      if (HasIsUnauthorized) hash ^= IsUnauthorized.GetHashCode();
      if (HasReserved1) hash ^= Reserved1.GetHashCode();
      if (HasAccountConnectionStatus) hash ^= AccountConnectionStatus.GetHashCode();
      if (accountConnectionStatusUtcTimestamp_ != null) hash ^= AccountConnectionStatusUtcTimestamp.GetHashCode();
      hash ^= contributorIds_.GetHashCode();
      if (HasPreTradeMidMarketMarkRequired) hash ^= PreTradeMidMarketMarkRequired.GetHashCode();
      if (HasAllowExternalAccounts) hash ^= AllowExternalAccounts.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteSInt32(AccountId);
      }
      if (HasBrokerageAccountId) {
        output.WriteRawTag(18);
        output.WriteString(BrokerageAccountId);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasLastStatementDate) {
        output.WriteRawTag(32);
        output.WriteSInt64(LastStatementDate);
      }
      if (HasIsViewOnly) {
        output.WriteRawTag(40);
        output.WriteBool(IsViewOnly);
      }
      if (HasIsUnauthorized) {
        output.WriteRawTag(48);
        output.WriteBool(IsUnauthorized);
      }
      if (HasReserved1) {
        output.WriteRawTag(56);
        output.WriteSInt64(Reserved1);
      }
      if (HasAccountConnectionStatus) {
        output.WriteRawTag(64);
        output.WriteUInt32(AccountConnectionStatus);
      }
      if (accountConnectionStatusUtcTimestamp_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(AccountConnectionStatusUtcTimestamp);
      }
      contributorIds_.WriteTo(output, _repeated_contributorIds_codec);
      if (HasPreTradeMidMarketMarkRequired) {
        output.WriteRawTag(88);
        output.WriteBool(PreTradeMidMarketMarkRequired);
      }
      if (HasAllowExternalAccounts) {
        output.WriteRawTag(96);
        output.WriteBool(AllowExternalAccounts);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteSInt32(AccountId);
      }
      if (HasBrokerageAccountId) {
        output.WriteRawTag(18);
        output.WriteString(BrokerageAccountId);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasLastStatementDate) {
        output.WriteRawTag(32);
        output.WriteSInt64(LastStatementDate);
      }
      if (HasIsViewOnly) {
        output.WriteRawTag(40);
        output.WriteBool(IsViewOnly);
      }
      if (HasIsUnauthorized) {
        output.WriteRawTag(48);
        output.WriteBool(IsUnauthorized);
      }
      if (HasReserved1) {
        output.WriteRawTag(56);
        output.WriteSInt64(Reserved1);
      }
      if (HasAccountConnectionStatus) {
        output.WriteRawTag(64);
        output.WriteUInt32(AccountConnectionStatus);
      }
      if (accountConnectionStatusUtcTimestamp_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(AccountConnectionStatusUtcTimestamp);
      }
      contributorIds_.WriteTo(ref output, _repeated_contributorIds_codec);
      if (HasPreTradeMidMarketMarkRequired) {
        output.WriteRawTag(88);
        output.WriteBool(PreTradeMidMarketMarkRequired);
      }
      if (HasAllowExternalAccounts) {
        output.WriteRawTag(96);
        output.WriteBool(AllowExternalAccounts);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(AccountId);
      }
      if (HasBrokerageAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BrokerageAccountId);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasLastStatementDate) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(LastStatementDate);
      }
      if (HasIsViewOnly) {
        size += 1 + 1;
      }
      if (HasIsUnauthorized) {
        size += 1 + 1;
      }
      if (HasReserved1) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Reserved1);
      }
      if (HasAccountConnectionStatus) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountConnectionStatus);
      }
      if (accountConnectionStatusUtcTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountConnectionStatusUtcTimestamp);
      }
      size += contributorIds_.CalculateSize(_repeated_contributorIds_codec);
      if (HasPreTradeMidMarketMarkRequired) {
        size += 1 + 1;
      }
      if (HasAllowExternalAccounts) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Account other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasBrokerageAccountId) {
        BrokerageAccountId = other.BrokerageAccountId;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasLastStatementDate) {
        LastStatementDate = other.LastStatementDate;
      }
      if (other.HasIsViewOnly) {
        IsViewOnly = other.IsViewOnly;
      }
      if (other.HasIsUnauthorized) {
        IsUnauthorized = other.IsUnauthorized;
      }
      if (other.HasReserved1) {
        Reserved1 = other.Reserved1;
      }
      if (other.HasAccountConnectionStatus) {
        AccountConnectionStatus = other.AccountConnectionStatus;
      }
      if (other.accountConnectionStatusUtcTimestamp_ != null) {
        if (accountConnectionStatusUtcTimestamp_ == null) {
          AccountConnectionStatusUtcTimestamp = new global::Google.Protobuf.Timestamp();
        }
        AccountConnectionStatusUtcTimestamp.MergeFrom(other.AccountConnectionStatusUtcTimestamp);
      }
      contributorIds_.Add(other.contributorIds_);
      if (other.HasPreTradeMidMarketMarkRequired) {
        PreTradeMidMarketMarkRequired = other.PreTradeMidMarketMarkRequired;
      }
      if (other.HasAllowExternalAccounts) {
        AllowExternalAccounts = other.AllowExternalAccounts;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadSInt32();
            break;
          }
          case 18: {
            BrokerageAccountId = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            LastStatementDate = input.ReadSInt64();
            break;
          }
          case 40: {
            IsViewOnly = input.ReadBool();
            break;
          }
          case 48: {
            IsUnauthorized = input.ReadBool();
            break;
          }
          case 56: {
            Reserved1 = input.ReadSInt64();
            break;
          }
          case 64: {
            AccountConnectionStatus = input.ReadUInt32();
            break;
          }
          case 74: {
            if (accountConnectionStatusUtcTimestamp_ == null) {
              AccountConnectionStatusUtcTimestamp = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(AccountConnectionStatusUtcTimestamp);
            break;
          }
          case 82: {
            contributorIds_.AddEntriesFrom(input, _repeated_contributorIds_codec);
            break;
          }
          case 88: {
            PreTradeMidMarketMarkRequired = input.ReadBool();
            break;
          }
          case 96: {
            AllowExternalAccounts = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadSInt32();
            break;
          }
          case 18: {
            BrokerageAccountId = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            LastStatementDate = input.ReadSInt64();
            break;
          }
          case 40: {
            IsViewOnly = input.ReadBool();
            break;
          }
          case 48: {
            IsUnauthorized = input.ReadBool();
            break;
          }
          case 56: {
            Reserved1 = input.ReadSInt64();
            break;
          }
          case 64: {
            AccountConnectionStatus = input.ReadUInt32();
            break;
          }
          case 74: {
            if (accountConnectionStatusUtcTimestamp_ == null) {
              AccountConnectionStatusUtcTimestamp = new global::Google.Protobuf.Timestamp();
            }
            input.ReadMessage(AccountConnectionStatusUtcTimestamp);
            break;
          }
          case 82: {
            contributorIds_.AddEntriesFrom(ref input, _repeated_contributorIds_codec);
            break;
          }
          case 88: {
            PreTradeMidMarketMarkRequired = input.ReadBool();
            break;
          }
          case 96: {
            AllowExternalAccounts = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Account message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Account connection status list.
      /// It is used for accounts that require additional authorization.
      /// </summary>
      public enum AccountConnectionStatus {
        /// <summary>
        ///  Route is offline, connection is impossible.
        /// </summary>
        [pbr::OriginalName("ACCOUNT_CONNECTION_STATUS_OFFLINE")] Offline = 1,
        /// <summary>
        /// Connection is not established but can be initiated by a logon message.
        /// </summary>
        [pbr::OriginalName("ACCOUNT_CONNECTION_STATUS_DISCONNECTED")] Disconnected = 2,
        /// <summary>
        /// Connection is initiated but is not fully established.
        /// </summary>
        [pbr::OriginalName("ACCOUNT_CONNECTION_STATUS_CONNECTING")] Connecting = 3,
        /// <summary>
        /// Connection is established, trading is possible.
        /// </summary>
        [pbr::OriginalName("ACCOUNT_CONNECTION_STATUS_CONNECTED")] Connected = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Request for balances from the last statement for all authorized accounts.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LastStatementBalancesRequest : pb::IMessage<LastStatementBalancesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LastStatementBalancesRequest> _parser = new pb::MessageParser<LastStatementBalancesRequest>(() => new LastStatementBalancesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LastStatementBalancesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TradingAccount2.TradingAccount2Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LastStatementBalancesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LastStatementBalancesRequest(LastStatementBalancesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LastStatementBalancesRequest Clone() {
      return new LastStatementBalancesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LastStatementBalancesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LastStatementBalancesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LastStatementBalancesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Report with balances from the last statement for all authorized accounts.
  /// Will be sent as a response to a corresponding request
  /// and after each statement processing (if subscribed).
  /// Each initial report contains a full snapshot of all balances on all accounts.
  /// Each report for an active subscription contains updates only.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LastStatementBalancesReport : pb::IMessage<LastStatementBalancesReport>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LastStatementBalancesReport> _parser = new pb::MessageParser<LastStatementBalancesReport>(() => new LastStatementBalancesReport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LastStatementBalancesReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TradingAccount2.TradingAccount2Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LastStatementBalancesReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LastStatementBalancesReport(LastStatementBalancesReport other) : this() {
      balances_ = other.balances_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LastStatementBalancesReport Clone() {
      return new LastStatementBalancesReport(this);
    }

    /// <summary>Field number for the "balances" field.</summary>
    public const int BalancesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TradingAccount2.Balance> _repeated_balances_codec
        = pb::FieldCodec.ForMessage(10, global::TradingAccount2.Balance.Parser);
    private readonly pbc::RepeatedField<global::TradingAccount2.Balance> balances_ = new pbc::RepeatedField<global::TradingAccount2.Balance>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TradingAccount2.Balance> Balances {
      get { return balances_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LastStatementBalancesReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LastStatementBalancesReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!balances_.Equals(other.balances_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= balances_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      balances_.WriteTo(output, _repeated_balances_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      balances_.WriteTo(ref output, _repeated_balances_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += balances_.CalculateSize(_repeated_balances_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LastStatementBalancesReport other) {
      if (other == null) {
        return;
      }
      balances_.Add(other.balances_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            balances_.AddEntriesFrom(input, _repeated_balances_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            balances_.AddEntriesFrom(ref input, _repeated_balances_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Balance record for one of the accounts and one of the currencies (id is used as a key for updates).
  /// Values like OTE, UPL and MVO are from statements and won't be updated in real time but after each next statement.
  /// Money related values are in the specified currency.
  /// NOTE: Not all values for a balance record are provided by all statements,
  ///       it is up to Brokerage to include such values and only
  ///       currency and ending cash balance are required to be valid.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Balance : pb::IMessage<Balance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Balance> _parser = new pb::MessageParser<Balance>(() => new Balance());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Balance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TradingAccount2.TradingAccount2Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Balance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Balance(Balance other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      accountId_ = other.accountId_;
      statementDate_ = other.statementDate_;
      currency_ = other.currency_;
      balance_ = other.balance_;
      totalValue_ = other.totalValue_;
      ote_ = other.ote_;
      upl_ = other.upl_;
      mvo_ = other.mvo_;
      cashExcess_ = other.cashExcess_;
      collateral_ = other.collateral_;
      initialMargin_ = other.initialMargin_;
      deleted_ = other.deleted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Balance Clone() {
      return new Balance(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    /// <summary>
    /// Surrogate id as a key for updates.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 2;
    private readonly static int AccountIdDefaultValue = 0;

    private int accountId_;
    /// <summary>
    /// Account of this balance record.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AccountId {
      get { if ((_hasBits0 & 2) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccountId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "statement_date" field.</summary>
    public const int StatementDateFieldNumber = 3;
    private readonly static long StatementDateDefaultValue = 0L;

    private long statementDate_;
    /// <summary>
    /// Statement date this positions is related.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StatementDate {
      get { if ((_hasBits0 & 4) != 0) { return statementDate_; } else { return StatementDateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        statementDate_ = value;
      }
    }
    /// <summary>Gets whether the "statement_date" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatementDate {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "statement_date" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatementDate() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 4;
    private readonly static string CurrencyDefaultValue = "";

    private string currency_;
    /// <summary>
    /// Currency code (ISO 4217 based).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Currency {
      get { return currency_ ?? CurrencyDefaultValue; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "currency" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurrency {
      get { return currency_ != null; }
    }
    /// <summary>Clears the value of the "currency" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrency() {
      currency_ = null;
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int Balance_FieldNumber = 5;
    private readonly static double Balance_DefaultValue = 0D;

    private double balance_;
    /// <summary>
    /// Ending Cash Balance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Balance_ {
      get { if ((_hasBits0 & 8) != 0) { return balance_; } else { return Balance_DefaultValue; } }
      set {
        _hasBits0 |= 8;
        balance_ = value;
      }
    }
    /// <summary>Gets whether the "balance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBalance_ {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "balance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBalance_() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "total_value" field.</summary>
    public const int TotalValueFieldNumber = 6;
    private readonly static double TotalValueDefaultValue = 0D;

    private double totalValue_;
    /// <summary>
    /// Total Account Value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TotalValue {
      get { if ((_hasBits0 & 16) != 0) { return totalValue_; } else { return TotalValueDefaultValue; } }
      set {
        _hasBits0 |= 16;
        totalValue_ = value;
      }
    }
    /// <summary>Gets whether the "total_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTotalValue {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "total_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTotalValue() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "ote" field.</summary>
    public const int OteFieldNumber = 7;
    private readonly static double OteDefaultValue = 0D;

    private double ote_;
    /// <summary>
    /// Open Trade Equity for Futures.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Ote {
      get { if ((_hasBits0 & 32) != 0) { return ote_; } else { return OteDefaultValue; } }
      set {
        _hasBits0 |= 32;
        ote_ = value;
      }
    }
    /// <summary>Gets whether the "ote" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOte {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "ote" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOte() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "upl" field.</summary>
    public const int UplFieldNumber = 8;
    private readonly static double UplDefaultValue = 0D;

    private double upl_;
    /// <summary>
    /// Unrealized profit-loss.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Upl {
      get { if ((_hasBits0 & 64) != 0) { return upl_; } else { return UplDefaultValue; } }
      set {
        _hasBits0 |= 64;
        upl_ = value;
      }
    }
    /// <summary>Gets whether the "upl" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUpl {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "upl" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUpl() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "mvo" field.</summary>
    public const int MvoFieldNumber = 9;
    private readonly static double MvoDefaultValue = 0D;

    private double mvo_;
    /// <summary>
    /// Market Value of options.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Mvo {
      get { if ((_hasBits0 & 128) != 0) { return mvo_; } else { return MvoDefaultValue; } }
      set {
        _hasBits0 |= 128;
        mvo_ = value;
      }
    }
    /// <summary>Gets whether the "mvo" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMvo {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "mvo" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMvo() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "cash_excess" field.</summary>
    public const int CashExcessFieldNumber = 10;
    private readonly static double CashExcessDefaultValue = 0D;

    private double cashExcess_;
    /// <summary>
    /// Cash Excess.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CashExcess {
      get { if ((_hasBits0 & 256) != 0) { return cashExcess_; } else { return CashExcessDefaultValue; } }
      set {
        _hasBits0 |= 256;
        cashExcess_ = value;
      }
    }
    /// <summary>Gets whether the "cash_excess" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCashExcess {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "cash_excess" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCashExcess() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "collateral" field.</summary>
    public const int CollateralFieldNumber = 11;
    private readonly static double CollateralDefaultValue = 0D;

    private double collateral_;
    /// <summary>
    /// Collateral on Deposit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Collateral {
      get { if ((_hasBits0 & 512) != 0) { return collateral_; } else { return CollateralDefaultValue; } }
      set {
        _hasBits0 |= 512;
        collateral_ = value;
      }
    }
    /// <summary>Gets whether the "collateral" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCollateral {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "collateral" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCollateral() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "initial_margin" field.</summary>
    public const int InitialMarginFieldNumber = 12;
    private readonly static double InitialMarginDefaultValue = 0D;

    private double initialMargin_;
    /// <summary>
    /// Initial Margin Requirements.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double InitialMargin {
      get { if ((_hasBits0 & 1024) != 0) { return initialMargin_; } else { return InitialMarginDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        initialMargin_ = value;
      }
    }
    /// <summary>Gets whether the "initial_margin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInitialMargin {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "initial_margin" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInitialMargin() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "deleted" field.</summary>
    public const int DeletedFieldNumber = 13;
    private readonly static bool DeletedDefaultValue = false;

    private bool deleted_;
    /// <summary>
    /// If true the balance should be removed from the balances snapshot.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Deleted {
      get { if ((_hasBits0 & 2048) != 0) { return deleted_; } else { return DeletedDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        deleted_ = value;
      }
    }
    /// <summary>Gets whether the "deleted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeleted {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "deleted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeleted() {
      _hasBits0 &= ~2048;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Balance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Balance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (AccountId != other.AccountId) return false;
      if (StatementDate != other.StatementDate) return false;
      if (Currency != other.Currency) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Balance_, other.Balance_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalValue, other.TotalValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Ote, other.Ote)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Upl, other.Upl)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Mvo, other.Mvo)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CashExcess, other.CashExcess)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Collateral, other.Collateral)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InitialMargin, other.InitialMargin)) return false;
      if (Deleted != other.Deleted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasStatementDate) hash ^= StatementDate.GetHashCode();
      if (HasCurrency) hash ^= Currency.GetHashCode();
      if (HasBalance_) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Balance_);
      if (HasTotalValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalValue);
      if (HasOte) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Ote);
      if (HasUpl) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Upl);
      if (HasMvo) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Mvo);
      if (HasCashExcess) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CashExcess);
      if (HasCollateral) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Collateral);
      if (HasInitialMargin) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InitialMargin);
      if (HasDeleted) hash ^= Deleted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteSInt32(Id);
      }
      if (HasAccountId) {
        output.WriteRawTag(16);
        output.WriteSInt32(AccountId);
      }
      if (HasStatementDate) {
        output.WriteRawTag(24);
        output.WriteSInt64(StatementDate);
      }
      if (HasCurrency) {
        output.WriteRawTag(34);
        output.WriteString(Currency);
      }
      if (HasBalance_) {
        output.WriteRawTag(41);
        output.WriteDouble(Balance_);
      }
      if (HasTotalValue) {
        output.WriteRawTag(49);
        output.WriteDouble(TotalValue);
      }
      if (HasOte) {
        output.WriteRawTag(57);
        output.WriteDouble(Ote);
      }
      if (HasUpl) {
        output.WriteRawTag(65);
        output.WriteDouble(Upl);
      }
      if (HasMvo) {
        output.WriteRawTag(73);
        output.WriteDouble(Mvo);
      }
      if (HasCashExcess) {
        output.WriteRawTag(81);
        output.WriteDouble(CashExcess);
      }
      if (HasCollateral) {
        output.WriteRawTag(89);
        output.WriteDouble(Collateral);
      }
      if (HasInitialMargin) {
        output.WriteRawTag(97);
        output.WriteDouble(InitialMargin);
      }
      if (HasDeleted) {
        output.WriteRawTag(104);
        output.WriteBool(Deleted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteSInt32(Id);
      }
      if (HasAccountId) {
        output.WriteRawTag(16);
        output.WriteSInt32(AccountId);
      }
      if (HasStatementDate) {
        output.WriteRawTag(24);
        output.WriteSInt64(StatementDate);
      }
      if (HasCurrency) {
        output.WriteRawTag(34);
        output.WriteString(Currency);
      }
      if (HasBalance_) {
        output.WriteRawTag(41);
        output.WriteDouble(Balance_);
      }
      if (HasTotalValue) {
        output.WriteRawTag(49);
        output.WriteDouble(TotalValue);
      }
      if (HasOte) {
        output.WriteRawTag(57);
        output.WriteDouble(Ote);
      }
      if (HasUpl) {
        output.WriteRawTag(65);
        output.WriteDouble(Upl);
      }
      if (HasMvo) {
        output.WriteRawTag(73);
        output.WriteDouble(Mvo);
      }
      if (HasCashExcess) {
        output.WriteRawTag(81);
        output.WriteDouble(CashExcess);
      }
      if (HasCollateral) {
        output.WriteRawTag(89);
        output.WriteDouble(Collateral);
      }
      if (HasInitialMargin) {
        output.WriteRawTag(97);
        output.WriteDouble(InitialMargin);
      }
      if (HasDeleted) {
        output.WriteRawTag(104);
        output.WriteBool(Deleted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Id);
      }
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(AccountId);
      }
      if (HasStatementDate) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(StatementDate);
      }
      if (HasCurrency) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (HasBalance_) {
        size += 1 + 8;
      }
      if (HasTotalValue) {
        size += 1 + 8;
      }
      if (HasOte) {
        size += 1 + 8;
      }
      if (HasUpl) {
        size += 1 + 8;
      }
      if (HasMvo) {
        size += 1 + 8;
      }
      if (HasCashExcess) {
        size += 1 + 8;
      }
      if (HasCollateral) {
        size += 1 + 8;
      }
      if (HasInitialMargin) {
        size += 1 + 8;
      }
      if (HasDeleted) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Balance other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasStatementDate) {
        StatementDate = other.StatementDate;
      }
      if (other.HasCurrency) {
        Currency = other.Currency;
      }
      if (other.HasBalance_) {
        Balance_ = other.Balance_;
      }
      if (other.HasTotalValue) {
        TotalValue = other.TotalValue;
      }
      if (other.HasOte) {
        Ote = other.Ote;
      }
      if (other.HasUpl) {
        Upl = other.Upl;
      }
      if (other.HasMvo) {
        Mvo = other.Mvo;
      }
      if (other.HasCashExcess) {
        CashExcess = other.CashExcess;
      }
      if (other.HasCollateral) {
        Collateral = other.Collateral;
      }
      if (other.HasInitialMargin) {
        InitialMargin = other.InitialMargin;
      }
      if (other.HasDeleted) {
        Deleted = other.Deleted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadSInt32();
            break;
          }
          case 16: {
            AccountId = input.ReadSInt32();
            break;
          }
          case 24: {
            StatementDate = input.ReadSInt64();
            break;
          }
          case 34: {
            Currency = input.ReadString();
            break;
          }
          case 41: {
            Balance_ = input.ReadDouble();
            break;
          }
          case 49: {
            TotalValue = input.ReadDouble();
            break;
          }
          case 57: {
            Ote = input.ReadDouble();
            break;
          }
          case 65: {
            Upl = input.ReadDouble();
            break;
          }
          case 73: {
            Mvo = input.ReadDouble();
            break;
          }
          case 81: {
            CashExcess = input.ReadDouble();
            break;
          }
          case 89: {
            Collateral = input.ReadDouble();
            break;
          }
          case 97: {
            InitialMargin = input.ReadDouble();
            break;
          }
          case 104: {
            Deleted = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadSInt32();
            break;
          }
          case 16: {
            AccountId = input.ReadSInt32();
            break;
          }
          case 24: {
            StatementDate = input.ReadSInt64();
            break;
          }
          case 34: {
            Currency = input.ReadString();
            break;
          }
          case 41: {
            Balance_ = input.ReadDouble();
            break;
          }
          case 49: {
            TotalValue = input.ReadDouble();
            break;
          }
          case 57: {
            Ote = input.ReadDouble();
            break;
          }
          case 65: {
            Upl = input.ReadDouble();
            break;
          }
          case 73: {
            Mvo = input.ReadDouble();
            break;
          }
          case 81: {
            CashExcess = input.ReadDouble();
            break;
          }
          case 89: {
            Collateral = input.ReadDouble();
            break;
          }
          case 97: {
            InitialMargin = input.ReadDouble();
            break;
          }
          case 104: {
            Deleted = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request for currency rates for all brokerages user's accounts belong to.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CurrencyRatesRequest : pb::IMessage<CurrencyRatesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CurrencyRatesRequest> _parser = new pb::MessageParser<CurrencyRatesRequest>(() => new CurrencyRatesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CurrencyRatesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TradingAccount2.TradingAccount2Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrencyRatesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrencyRatesRequest(CurrencyRatesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrencyRatesRequest Clone() {
      return new CurrencyRatesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CurrencyRatesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CurrencyRatesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CurrencyRatesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Report with currency rates per brokerage.
  /// It will be sent as a response to a corresponding request
  /// and after each statement processing (if subscribed).
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CurrencyRatesReport : pb::IMessage<CurrencyRatesReport>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CurrencyRatesReport> _parser = new pb::MessageParser<CurrencyRatesReport>(() => new CurrencyRatesReport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CurrencyRatesReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TradingAccount2.TradingAccount2Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrencyRatesReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrencyRatesReport(CurrencyRatesReport other) : this() {
      brokerageCurrencyRates_ = other.brokerageCurrencyRates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrencyRatesReport Clone() {
      return new CurrencyRatesReport(this);
    }

    /// <summary>Field number for the "brokerage_currency_rates" field.</summary>
    public const int BrokerageCurrencyRatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TradingAccount2.BrokerageCurrencyRates> _repeated_brokerageCurrencyRates_codec
        = pb::FieldCodec.ForMessage(10, global::TradingAccount2.BrokerageCurrencyRates.Parser);
    private readonly pbc::RepeatedField<global::TradingAccount2.BrokerageCurrencyRates> brokerageCurrencyRates_ = new pbc::RepeatedField<global::TradingAccount2.BrokerageCurrencyRates>();
    /// <summary>
    /// List of rates per brokerage the user is authorized to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TradingAccount2.BrokerageCurrencyRates> BrokerageCurrencyRates {
      get { return brokerageCurrencyRates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CurrencyRatesReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CurrencyRatesReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!brokerageCurrencyRates_.Equals(other.brokerageCurrencyRates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= brokerageCurrencyRates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      brokerageCurrencyRates_.WriteTo(output, _repeated_brokerageCurrencyRates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      brokerageCurrencyRates_.WriteTo(ref output, _repeated_brokerageCurrencyRates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += brokerageCurrencyRates_.CalculateSize(_repeated_brokerageCurrencyRates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CurrencyRatesReport other) {
      if (other == null) {
        return;
      }
      brokerageCurrencyRates_.Add(other.brokerageCurrencyRates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            brokerageCurrencyRates_.AddEntriesFrom(input, _repeated_brokerageCurrencyRates_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            brokerageCurrencyRates_.AddEntriesFrom(ref input, _repeated_brokerageCurrencyRates_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Currency rates of one brokerage.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BrokerageCurrencyRates : pb::IMessage<BrokerageCurrencyRates>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BrokerageCurrencyRates> _parser = new pb::MessageParser<BrokerageCurrencyRates>(() => new BrokerageCurrencyRates());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BrokerageCurrencyRates> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TradingAccount2.TradingAccount2Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BrokerageCurrencyRates() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BrokerageCurrencyRates(BrokerageCurrencyRates other) : this() {
      _hasBits0 = other._hasBits0;
      brokerageId_ = other.brokerageId_;
      masterCurrency_ = other.masterCurrency_;
      statementDate_ = other.statementDate_;
      currencyRates_ = other.currencyRates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BrokerageCurrencyRates Clone() {
      return new BrokerageCurrencyRates(this);
    }

    /// <summary>Field number for the "brokerage_id" field.</summary>
    public const int BrokerageIdFieldNumber = 1;
    private readonly static uint BrokerageIdDefaultValue = 0;

    private uint brokerageId_;
    /// <summary>
    /// Brokerage ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BrokerageId {
      get { if ((_hasBits0 & 1) != 0) { return brokerageId_; } else { return BrokerageIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        brokerageId_ = value;
      }
    }
    /// <summary>Gets whether the "brokerage_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrokerageId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "brokerage_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrokerageId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "master_currency" field.</summary>
    public const int MasterCurrencyFieldNumber = 2;
    private readonly static string MasterCurrencyDefaultValue = "";

    private string masterCurrency_;
    /// <summary>
    /// Master currency code to which rates are provided (ISO 4217 based).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MasterCurrency {
      get { return masterCurrency_ ?? MasterCurrencyDefaultValue; }
      set {
        masterCurrency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "master_currency" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMasterCurrency {
      get { return masterCurrency_ != null; }
    }
    /// <summary>Clears the value of the "master_currency" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMasterCurrency() {
      masterCurrency_ = null;
    }

    /// <summary>Field number for the "statement_date" field.</summary>
    public const int StatementDateFieldNumber = 3;
    private readonly static long StatementDateDefaultValue = 0L;

    private long statementDate_;
    /// <summary>
    /// Statement date.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StatementDate {
      get { if ((_hasBits0 & 2) != 0) { return statementDate_; } else { return StatementDateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        statementDate_ = value;
      }
    }
    /// <summary>Gets whether the "statement_date" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatementDate {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "statement_date" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatementDate() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "currency_rates" field.</summary>
    public const int CurrencyRatesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::TradingAccount2.CurrencyRate> _repeated_currencyRates_codec
        = pb::FieldCodec.ForMessage(34, global::TradingAccount2.CurrencyRate.Parser);
    private readonly pbc::RepeatedField<global::TradingAccount2.CurrencyRate> currencyRates_ = new pbc::RepeatedField<global::TradingAccount2.CurrencyRate>();
    /// <summary>
    /// List of brokerage rates.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TradingAccount2.CurrencyRate> CurrencyRates {
      get { return currencyRates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BrokerageCurrencyRates);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BrokerageCurrencyRates other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BrokerageId != other.BrokerageId) return false;
      if (MasterCurrency != other.MasterCurrency) return false;
      if (StatementDate != other.StatementDate) return false;
      if(!currencyRates_.Equals(other.currencyRates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBrokerageId) hash ^= BrokerageId.GetHashCode();
      if (HasMasterCurrency) hash ^= MasterCurrency.GetHashCode();
      if (HasStatementDate) hash ^= StatementDate.GetHashCode();
      hash ^= currencyRates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBrokerageId) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrokerageId);
      }
      if (HasMasterCurrency) {
        output.WriteRawTag(18);
        output.WriteString(MasterCurrency);
      }
      if (HasStatementDate) {
        output.WriteRawTag(24);
        output.WriteSInt64(StatementDate);
      }
      currencyRates_.WriteTo(output, _repeated_currencyRates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBrokerageId) {
        output.WriteRawTag(8);
        output.WriteUInt32(BrokerageId);
      }
      if (HasMasterCurrency) {
        output.WriteRawTag(18);
        output.WriteString(MasterCurrency);
      }
      if (HasStatementDate) {
        output.WriteRawTag(24);
        output.WriteSInt64(StatementDate);
      }
      currencyRates_.WriteTo(ref output, _repeated_currencyRates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBrokerageId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BrokerageId);
      }
      if (HasMasterCurrency) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MasterCurrency);
      }
      if (HasStatementDate) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(StatementDate);
      }
      size += currencyRates_.CalculateSize(_repeated_currencyRates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BrokerageCurrencyRates other) {
      if (other == null) {
        return;
      }
      if (other.HasBrokerageId) {
        BrokerageId = other.BrokerageId;
      }
      if (other.HasMasterCurrency) {
        MasterCurrency = other.MasterCurrency;
      }
      if (other.HasStatementDate) {
        StatementDate = other.StatementDate;
      }
      currencyRates_.Add(other.currencyRates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BrokerageId = input.ReadUInt32();
            break;
          }
          case 18: {
            MasterCurrency = input.ReadString();
            break;
          }
          case 24: {
            StatementDate = input.ReadSInt64();
            break;
          }
          case 34: {
            currencyRates_.AddEntriesFrom(input, _repeated_currencyRates_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BrokerageId = input.ReadUInt32();
            break;
          }
          case 18: {
            MasterCurrency = input.ReadString();
            break;
          }
          case 24: {
            StatementDate = input.ReadSInt64();
            break;
          }
          case 34: {
            currencyRates_.AddEntriesFrom(ref input, _repeated_currencyRates_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Rate of one currency to a master currency for the brokerage.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CurrencyRate : pb::IMessage<CurrencyRate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CurrencyRate> _parser = new pb::MessageParser<CurrencyRate>(() => new CurrencyRate());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CurrencyRate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TradingAccount2.TradingAccount2Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrencyRate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrencyRate(CurrencyRate other) : this() {
      _hasBits0 = other._hasBits0;
      currency_ = other.currency_;
      rate_ = other.rate_;
      decimalPlaces_ = other.decimalPlaces_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CurrencyRate Clone() {
      return new CurrencyRate(this);
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 2;
    private readonly static string CurrencyDefaultValue = "";

    private string currency_;
    /// <summary>
    /// Currency code (ISO 4217 based).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Currency {
      get { return currency_ ?? CurrencyDefaultValue; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "currency" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurrency {
      get { return currency_ != null; }
    }
    /// <summary>Clears the value of the "currency" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurrency() {
      currency_ = null;
    }

    /// <summary>Field number for the "rate" field.</summary>
    public const int RateFieldNumber = 3;
    private readonly static double RateDefaultValue = 0D;

    private double rate_;
    /// <summary>
    /// Exchange rate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Rate {
      get { if ((_hasBits0 & 1) != 0) { return rate_; } else { return RateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        rate_ = value;
      }
    }
    /// <summary>Gets whether the "rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRate {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRate() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "decimal_places" field.</summary>
    public const int DecimalPlacesFieldNumber = 4;
    private readonly static uint DecimalPlacesDefaultValue = 0;

    private uint decimalPlaces_;
    /// <summary>
    /// Number of decimals in 'rate' field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint DecimalPlaces {
      get { if ((_hasBits0 & 2) != 0) { return decimalPlaces_; } else { return DecimalPlacesDefaultValue; } }
      set {
        _hasBits0 |= 2;
        decimalPlaces_ = value;
      }
    }
    /// <summary>Gets whether the "decimal_places" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDecimalPlaces {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "decimal_places" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDecimalPlaces() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CurrencyRate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CurrencyRate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Currency != other.Currency) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Rate, other.Rate)) return false;
      if (DecimalPlaces != other.DecimalPlaces) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCurrency) hash ^= Currency.GetHashCode();
      if (HasRate) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Rate);
      if (HasDecimalPlaces) hash ^= DecimalPlaces.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCurrency) {
        output.WriteRawTag(18);
        output.WriteString(Currency);
      }
      if (HasRate) {
        output.WriteRawTag(25);
        output.WriteDouble(Rate);
      }
      if (HasDecimalPlaces) {
        output.WriteRawTag(32);
        output.WriteUInt32(DecimalPlaces);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCurrency) {
        output.WriteRawTag(18);
        output.WriteString(Currency);
      }
      if (HasRate) {
        output.WriteRawTag(25);
        output.WriteDouble(Rate);
      }
      if (HasDecimalPlaces) {
        output.WriteRawTag(32);
        output.WriteUInt32(DecimalPlaces);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCurrency) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (HasRate) {
        size += 1 + 8;
      }
      if (HasDecimalPlaces) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DecimalPlaces);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CurrencyRate other) {
      if (other == null) {
        return;
      }
      if (other.HasCurrency) {
        Currency = other.Currency;
      }
      if (other.HasRate) {
        Rate = other.Rate;
      }
      if (other.HasDecimalPlaces) {
        DecimalPlaces = other.DecimalPlaces;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Currency = input.ReadString();
            break;
          }
          case 25: {
            Rate = input.ReadDouble();
            break;
          }
          case 32: {
            DecimalPlaces = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            Currency = input.ReadString();
            break;
          }
          case 25: {
            Rate = input.ReadDouble();
            break;
          }
          case 32: {
            DecimalPlaces = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
