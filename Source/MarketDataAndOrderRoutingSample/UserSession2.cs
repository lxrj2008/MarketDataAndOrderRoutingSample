// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WebAPI/user_session_2.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace UserSession2 {

  /// <summary>Holder for reflection information generated from WebAPI/user_session_2.proto</summary>
  public static partial class UserSession2Reflection {

    #region Descriptor
    /// <summary>File descriptor for WebAPI/user_session_2.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UserSession2Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtXZWJBUEkvdXNlcl9zZXNzaW9uXzIucHJvdG8SDnVzZXJfc2Vzc2lvbl8y",
            "GhVjb21tb24vc2hhcmVkXzEucHJvdG8iwQQKBUxvZ29uEhEKCXVzZXJfbmFt",
            "ZRgBIAEoCRIQCghwYXNzd29yZBgCIAEoCRIUCgxhY2Nlc3NfdG9rZW4YDiAB",
            "KAkSFQoNcGFydG5lcl90b2tlbhgTIAEoCRIZChFvbmVfdGltZV9wYXNzd29y",
            "ZBgDIAEoCRIVCg1wcml2YXRlX2xhYmVsGAQgASgJEhUKDWNsaWVudF9hcHBf",
            "aWQYBSABKAkSFgoOY2xpZW50X3ZlcnNpb24YBiACKAkSHwoXZHJvcF9jb25j",
            "dXJyZW50X3Nlc3Npb24YByABKAgSHAoUbWF4X2NvbGxhcHNpbmdfbGV2ZWwY",
            "CCABKA0SHgoWcHJvdG9jb2xfdmVyc2lvbl9taW5vchgJIAEoDRIeChZwcm90",
            "b2NvbF92ZXJzaW9uX21ham9yGAogASgNEhgKEHNlc3Npb25fc2V0dGluZ3MY",
            "CyADKA0SHQoVbWFya2V0X2RhdGFfYmFuZHdpZHRoGAwgASgNEhIKCmRpYWxl",
            "Y3RfaWQYDSABKAkSEwoLZmluZ2VycHJpbnQYDyABKAkSGAoQb3BlcmF0aW5n",
            "X3N5c3RlbRgQIAEoCRIPCgdicm93c2VyGBEgASgJEhQKDGRldmljZV9tb2Rl",
            "bBgSIAEoCSJjCg5TZXNzaW9uU2V0dGluZxIpCiVTRVNTSU9OX1NFVFRJTkdf",
            "QUxMT1dfU0VTU0lPTl9SRVNUT1JFEAESJgoiU0VTU0lPTl9TRVRUSU5HX0FM",
            "TE9XX1NFU1NJT05fSk9JThACIocECgtMb2dvblJlc3VsdBITCgtyZXN1bHRf",
            "Y29kZRgBIAIoDRIRCgliYXNlX3RpbWUYAiACKAkSFQoNc2Vzc2lvbl90b2tl",
            "bhgDIAEoCRIUCgx0ZXh0X21lc3NhZ2UYBCABKAkSFAoMcmVkaXJlY3RfdXJs",
            "GAUgASgJEh4KFnByb3RvY29sX3ZlcnNpb25fbWlub3IYBiACKA0SHgoWcHJv",
            "dG9jb2xfdmVyc2lvbl9tYWpvchgHIAIoDRIPCgd1c2VyX2lkGAggASgREhMK",
            "C3NlcnZlcl90aW1lGAkgAigSEhoKEmluYWN0aXZpdHlfdGltZW91dBgKIAEo",
            "DSKKAgoKUmVzdWx0Q29kZRIXChNSRVNVTFRfQ09ERV9TVUNDRVNTEAASFwoT",
            "UkVTVUxUX0NPREVfRkFJTFVSRRBlEiMKH1JFU1VMVF9DT0RFX05PX09ORVRJ",
            "TUVfUEFTU1dPUkQQZxIgChxSRVNVTFRfQ09ERV9QQVNTV09SRF9FWFBJUkVE",
            "EGgSIgoeUkVTVUxUX0NPREVfQ09OQ1VSUkVOVF9TRVNTSU9OEGkSGgoWUkVT",
            "VUxUX0NPREVfUkVESVJFQ1RFRBBqEh0KGVJFU1VMVF9DT0RFX1JPVVRJTkVf",
            "RVJST1IQaxIkCiBSRVNVTFRfQ09ERV9BQ0NFU1NfVE9LRU5fRVhQSVJFRBBs",
            "ItcBChJMb2dvblJvdXRpbmVDbGllbnQSLQoKbG9nb25faW5pdBgBIAEoCzIZ",
            "LnVzZXJfc2Vzc2lvbl8yLkxvZ29uSW5pdBI8ChJwYXNzd29yZF9yZXNwb25z",
            "ZXMYAiADKAsyIC51c2VyX3Nlc3Npb25fMi5QYXNzd29yZFJlc3BvbnNlEiEK",
            "GXRyYWRlcl9hZ3JlZW1lbnRfYWNjZXB0ZWQYAyABKAgSMQoLYWJvcnRfbG9n",
            "b24YBCABKAsyHC51c2VyX3Nlc3Npb25fMi5BYm9ydFJvdXRpbmUioQEKEkxv",
            "Z29uUm91dGluZVNlcnZlchIxCgxsb2dvbl9yZXN1bHQYASABKAsyGy51c2Vy",
            "X3Nlc3Npb25fMi5Mb2dvblJlc3VsdBI6ChFwYXNzd29yZF9yZXF1ZXN0cxgC",
            "IAMoCzIfLnVzZXJfc2Vzc2lvbl8yLlBhc3N3b3JkUmVxdWVzdBIcChR0cmFk",
            "ZXJfYWdyZWVtZW50X3VybBgDIAEoCSK2AQobUGFzc3dvcmRDaGFuZ2VSb3V0",
            "aW5lQ2xpZW50EhwKFGluaXRfcGFzc3dvcmRfY2hhbmdlGAEgASgIEjwKEnBh",
            "c3N3b3JkX3Jlc3BvbnNlcxgCIAMoCzIgLnVzZXJfc2Vzc2lvbl8yLlBhc3N3",
            "b3JkUmVzcG9uc2USOwoVYWJvcnRfcGFzc3dvcmRfY2hhbmdlGAMgASgLMhwu",
            "dXNlcl9zZXNzaW9uXzIuQWJvcnRSb3V0aW5lIp8BChtQYXNzd29yZENoYW5n",
            "ZVJvdXRpbmVTZXJ2ZXISOgoRcGFzc3dvcmRfcmVxdWVzdHMYASADKAsyHy51",
            "c2VyX3Nlc3Npb25fMi5QYXNzd29yZFJlcXVlc3QSRAoWcGFzc3dvcmRfY2hh",
            "bmdlX3Jlc3VsdBgCIAEoCzIkLnVzZXJfc2Vzc2lvbl8yLlBhc3N3b3JkQ2hh",
            "bmdlUmVzdWx0Ih8KDEFib3J0Um91dGluZRIPCgdjb21tZW50GAEgASgJIoYD",
            "CglMb2dvbkluaXQSEQoJdXNlcl9uYW1lGAEgAigJEhUKDXByaXZhdGVfbGFi",
            "ZWwYAiABKAkSFQoNY2xpZW50X2FwcF9pZBgDIAIoCRIWCg5jbGllbnRfdmVy",
            "c2lvbhgEIAIoCRIfChdkcm9wX2NvbmN1cnJlbnRfc2Vzc2lvbhgFIAEoCBIc",
            "ChRtYXhfY29sbGFwc2luZ19sZXZlbBgGIAEoDRIeChZwcm90b2NvbF92ZXJz",
            "aW9uX21pbm9yGAcgASgNEh4KFnByb3RvY29sX3ZlcnNpb25fbWFqb3IYCCAB",
            "KA0SGAoQc2Vzc2lvbl9zZXR0aW5ncxgJIAMoDRIdChVtYXJrZXRfZGF0YV9i",
            "YW5kd2lkdGgYCiABKA0SEgoKZGlhbGVjdF9pZBgLIAEoCRITCgtmaW5nZXJw",
            "cmludBgMIAEoCRIYChBvcGVyYXRpbmdfc3lzdGVtGA0gASgJEg8KB2Jyb3dz",
            "ZXIYDiABKAkSFAoMZGV2aWNlX21vZGVsGA8gASgJItkCCg9QYXNzd29yZFJl",
            "cXVlc3QSEgoKcmVxdWVzdF9pZBgBIAIoDRIVCg1wYXNzd29yZF90eXBlGAIg",
            "AigNEhgKEHVzZXJfcHJvbXB0X3R5cGUYAyABKAkSHAoUdXNlcl9wcm9tcHRf",
            "dHlwZV9hbHQYBCABKAkSEwoLdXNlcl9wcm9tcHQYBSABKAkSKwoJZW5jb2Rp",
            "bmdzGAYgAygLMhgudXNlcl9zZXNzaW9uXzIuRW5jb2RpbmcioAEKDFBhc3N3",
            "b3JkVHlwZRIYChRQQVNTV09SRF9UWVBFX1NUQVRJQxABEhoKFlBBU1NXT1JE",
            "X1RZUEVfT05FX1RJTUUQAhIcChhQQVNTV09SRF9UWVBFX05FV19TVEFUSUMQ",
            "AxIkCiBQQVNTV09SRF9UWVBFX0NVUl9BTkRfTkVXX1NUQVRJQxAEEhYKElBB",
            "U1NXT1JEX1RZUEVfVEVYVBAFIk8KEFBhc3N3b3JkUmVzcG9uc2USEgoKcmVx",
            "dWVzdF9pZBgBIAIoDRIVCg1lbmNvZGluZ190eXBlGAIgAigJEhAKCHBhc3N3",
            "b3JkGAMgAigJIngKCEVuY29kaW5nEhUKDWVuY29kaW5nX3R5cGUYASACKAkS",
            "FQoNcHJpb3JpdHlfcmFuaxgCIAIoDRI+ChNlbmNvZGluZ19wYXJhbWV0ZXJz",
            "GAMgAygLMiEudXNlcl9zZXNzaW9uXzIuRW5jb2RpbmdQYXJhbWV0ZXIiMAoR",
            "RW5jb2RpbmdQYXJhbWV0ZXISDAoEbmFtZRgBIAIoCRINCgV2YWx1ZRgCIAIo",
            "CSLYAQoUUmVzdG9yZU9ySm9pblNlc3Npb24SFQoNc2Vzc2lvbl90b2tlbhgB",
            "IAIoCRIVCg1wcml2YXRlX2xhYmVsGAIgASgJEhUKDWNsaWVudF9hcHBfaWQY",
            "AyABKAkSHAoUbWF4X2NvbGxhcHNpbmdfbGV2ZWwYBCABKA0SHgoWcHJvdG9j",
            "b2xfdmVyc2lvbl9taW5vchgFIAEoDRIeChZwcm90b2NvbF92ZXJzaW9uX21h",
            "am9yGAYgASgNEh0KFW1hcmtldF9kYXRhX2JhbmR3aWR0aBgHIAEoDSLAAgoa",
            "UmVzdG9yZU9ySm9pblNlc3Npb25SZXN1bHQSEwoLcmVzdWx0X2NvZGUYASAC",
            "KA0SEQoJYmFzZV90aW1lGAIgAigJEhQKDHRleHRfbWVzc2FnZRgDIAEoCRIT",
            "CgtzZXJ2ZXJfdGltZRgEIAIoEhISCgpkaWFsZWN0X2lkGAUgASgJEhoKEmlu",
            "YWN0aXZpdHlfdGltZW91dBgGIAEoDSKeAQoKUmVzdWx0Q29kZRIXChNSRVNV",
            "TFRfQ09ERV9TVUNDRVNTEAASFwoTUkVTVUxUX0NPREVfRkFJTFVSRRBoEh8K",
            "G1JFU1VMVF9DT0RFX1VOS05PV05fU0VTU0lPThBlEh0KGVJFU1VMVF9DT0RF",
            "X0FDQ0VTU19ERU5JRUQQZhIeChpSRVNVTFRfQ09ERV9JTlZBTElEX1BBUkFN",
            "UxBnIjQKGENvbmN1cnJlbnRDb25uZWN0aW9uSm9pbhIYChBpc19zYW1lX2Fw",
            "cF90eXBlGAEgAigIIh4KBkxvZ29mZhIUCgx0ZXh0X21lc3NhZ2UYASABKAki",
            "0wEKCUxvZ2dlZE9mZhIVCg1sb2dvZmZfcmVhc29uGAEgAigNEhQKDHRleHRf",
            "bWVzc2FnZRgCIAEoCRIUCgxyZWRpcmVjdF91cmwYAyABKAkiggEKDExvZ29m",
            "ZlJlYXNvbhIcChhMT0dPRkZfUkVBU09OX0JZX1JFUVVFU1QQARIcChhMT0dP",
            "RkZfUkVBU09OX1JFRElSRUNURUQQAhIYChRMT0dPRkZfUkVBU09OX0ZPUkNF",
            "RBADEhwKGExPR09GRl9SRUFTT05fUkVBU1NJR05FRBAEIjwKDlBhc3N3b3Jk",
            "Q2hhbmdlEhQKDG9sZF9wYXNzd29yZBgBIAIoCRIUCgxuZXdfcGFzc3dvcmQY",
            "AiACKAkioAEKFFBhc3N3b3JkQ2hhbmdlUmVzdWx0EhMKC3Jlc3VsdF9jb2Rl",
            "GAEgAigNEhQKDHRleHRfbWVzc2FnZRgCIAEoCSJdCgpSZXN1bHRDb2RlEhcK",
            "E1JFU1VMVF9DT0RFX1NVQ0NFU1MQABIXChNSRVNVTFRfQ09ERV9GQUlMVVJF",
            "EGUSHQoZUkVTVUxUX0NPREVfUk9VVElORV9FUlJPUhBmIn4KFU9idGFpbkRl",
            "bW9DcmVkZW50aWFscxIVCg1jbGllbnRfYXBwX2lkGAEgAigJEhIKCmZpcnN0",
            "X25hbWUYAiACKAkSEwoLc2Vjb25kX25hbWUYAyACKAkSDgoGZV9tYWlsGAQg",
            "AigJEhUKDXByaXZhdGVfbGFiZWwYBSABKAki1gEKG09idGFpbkRlbW9DcmVk",
            "ZW50aWFsc1Jlc3VsdBITCgtyZXN1bHRfY29kZRgBIAIoDRIRCgl1c2VyX25h",
            "bWUYAiABKAkSEAoIcGFzc3dvcmQYAyABKAkSFAoMdGV4dF9tZXNzYWdlGAQg",
            "ASgJEg8KB3VzZXJfaWQYBSABKBESFgoOZXhwaXJhdGlvbl91dGMYBiABKAki",
            "PgoKUmVzdWx0Q29kZRIXChNSRVNVTFRfQ09ERV9TVUNDRVNTEAASFwoTUkVT",
            "VUxUX0NPREVfRkFJTFVSRRBlIuYBCgtVc2VyTWVzc2FnZRIUCgxtZXNzYWdl",
            "X3R5cGUYASACKA0SDgoGc291cmNlGAIgAigJEg8KB3N1YmplY3QYAyABKAkS",
            "DAoEdGV4dBgEIAIoCRIbChNleHBpcmF0aW9uX3V0Y190aW1lGAUgASgSInUK",
            "C01lc3NhZ2VUeXBlEh8KG01FU1NBR0VfVFlQRV9DUklUSUNBTF9FUlJPUhAB",
            "EhgKFE1FU1NBR0VfVFlQRV9XQVJOSU5HEAISFQoRTUVTU0FHRV9UWVBFX0lO",
            "Rk8QAxIUChBNRVNTQUdFX1RZUEVfTE9HEAQiMAoXVXNlclNlc3Npb25TdGF0",
            "ZVJlcXVlc3QSFQoNc2Vzc2lvbl90b2tlbhgBIAIoCSLnAQoWVXNlclNlc3Np",
            "b25TdGF0ZVJlc3VsdBIVCg1zZXNzaW9uX3Rva2VuGAEgAigJEhMKC3Jlc3Vs",
            "dF9jb2RlGAIgAigNEg8KB3VzZXJfaWQYAyABKBESEAoIdXNlcm5hbWUYBCAB",
            "KAkifgoKUmVzdWx0Q29kZRIXChNSRVNVTFRfQ09ERV9TVUNDRVNTEAASFwoT",
            "UkVTVUxUX0NPREVfRkFJTFVSRRBlEh8KG1JFU1VMVF9DT0RFX1VOS05PV05f",
            "U0VTU0lPThBmEh0KGVJFU1VMVF9DT0RFX0FDQ0VTU19ERU5JRUQQZyIsCgRQ",
            "aW5nEg0KBXRva2VuGAEgASgJEhUKDXBpbmdfdXRjX3RpbWUYAiACKBIiQwoE",
            "UG9uZxINCgV0b2tlbhgBIAEoCRIVCg1waW5nX3V0Y190aW1lGAIgAigSEhUK",
            "DXBvbmdfdXRjX3RpbWUYAyACKBIiOQoZU2V0Q29sbGFwc2luZ0xldmVsUmVx",
            "dWVzdBIcChRtYXhfY29sbGFwc2luZ19sZXZlbBgBIAEoDSLVAQoYU2V0Q29s",
            "bGFwc2luZ0xldmVsUmVzdWx0EhMKC3Jlc3VsdF9jb2RlGAEgAigNEiQKDHRl",
            "eHRfbWVzc2FnZRgCIAEoCzIOLnNoYXJlZF8xLlRleHQSHAoUbWF4X2NvbGxh",
            "cHNpbmdfbGV2ZWwYAyABKA0iYAoKUmVzdWx0Q29kZRIXChNSRVNVTFRfQ09E",
            "RV9TVUNDRVNTEAASFwoTUkVTVUxUX0NPREVfRkFJTFVSRRBlEiAKHFJFU1VM",
            "VF9DT0RFX0JBTkRXSURUSF9JU19TRVQQZiq5AQoXUmVhbFRpbWVDb2xsYXBz",
            "aW5nTGV2ZWwSIwofUkVBTF9USU1FX0NPTExBUFNJTkdfTEVWRUxfTk9ORRAA",
            "EiIKHlJFQUxfVElNRV9DT0xMQVBTSU5HX0xFVkVMX0RPTRABEiYKIlJFQUxf",
            "VElNRV9DT0xMQVBTSU5HX0xFVkVMX0RPTV9CQkEQAhItCilSRUFMX1RJTUVf",
            "Q09MTEFQU0lOR19MRVZFTF9ET01fQkJBX1RSQURFUxAD"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Shared1.Shared1Reflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::UserSession2.RealTimeCollapsingLevel), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.Logon), global::UserSession2.Logon.Parser, new[]{ "UserName", "Password", "AccessToken", "PartnerToken", "OneTimePassword", "PrivateLabel", "ClientAppId", "ClientVersion", "DropConcurrentSession", "MaxCollapsingLevel", "ProtocolVersionMinor", "ProtocolVersionMajor", "SessionSettings", "MarketDataBandwidth", "DialectId", "Fingerprint", "OperatingSystem", "Browser", "DeviceModel" }, null, new[]{ typeof(global::UserSession2.Logon.Types.SessionSetting) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.LogonResult), global::UserSession2.LogonResult.Parser, new[]{ "ResultCode", "BaseTime", "SessionToken", "TextMessage", "RedirectUrl", "ProtocolVersionMinor", "ProtocolVersionMajor", "UserId", "ServerTime", "InactivityTimeout" }, null, new[]{ typeof(global::UserSession2.LogonResult.Types.ResultCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.LogonRoutineClient), global::UserSession2.LogonRoutineClient.Parser, new[]{ "LogonInit", "PasswordResponses", "TraderAgreementAccepted", "AbortLogon" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.LogonRoutineServer), global::UserSession2.LogonRoutineServer.Parser, new[]{ "LogonResult", "PasswordRequests", "TraderAgreementUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.PasswordChangeRoutineClient), global::UserSession2.PasswordChangeRoutineClient.Parser, new[]{ "InitPasswordChange", "PasswordResponses", "AbortPasswordChange" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.PasswordChangeRoutineServer), global::UserSession2.PasswordChangeRoutineServer.Parser, new[]{ "PasswordRequests", "PasswordChangeResult" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.AbortRoutine), global::UserSession2.AbortRoutine.Parser, new[]{ "Comment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.LogonInit), global::UserSession2.LogonInit.Parser, new[]{ "UserName", "PrivateLabel", "ClientAppId", "ClientVersion", "DropConcurrentSession", "MaxCollapsingLevel", "ProtocolVersionMinor", "ProtocolVersionMajor", "SessionSettings", "MarketDataBandwidth", "DialectId", "Fingerprint", "OperatingSystem", "Browser", "DeviceModel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.PasswordRequest), global::UserSession2.PasswordRequest.Parser, new[]{ "RequestId", "PasswordType", "UserPromptType", "UserPromptTypeAlt", "UserPrompt", "Encodings" }, null, new[]{ typeof(global::UserSession2.PasswordRequest.Types.PasswordType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.PasswordResponse), global::UserSession2.PasswordResponse.Parser, new[]{ "RequestId", "EncodingType", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.Encoding), global::UserSession2.Encoding.Parser, new[]{ "EncodingType", "PriorityRank", "EncodingParameters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.EncodingParameter), global::UserSession2.EncodingParameter.Parser, new[]{ "Name", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.RestoreOrJoinSession), global::UserSession2.RestoreOrJoinSession.Parser, new[]{ "SessionToken", "PrivateLabel", "ClientAppId", "MaxCollapsingLevel", "ProtocolVersionMinor", "ProtocolVersionMajor", "MarketDataBandwidth" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.RestoreOrJoinSessionResult), global::UserSession2.RestoreOrJoinSessionResult.Parser, new[]{ "ResultCode", "BaseTime", "TextMessage", "ServerTime", "DialectId", "InactivityTimeout" }, null, new[]{ typeof(global::UserSession2.RestoreOrJoinSessionResult.Types.ResultCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.ConcurrentConnectionJoin), global::UserSession2.ConcurrentConnectionJoin.Parser, new[]{ "IsSameAppType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.Logoff), global::UserSession2.Logoff.Parser, new[]{ "TextMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.LoggedOff), global::UserSession2.LoggedOff.Parser, new[]{ "LogoffReason", "TextMessage", "RedirectUrl" }, null, new[]{ typeof(global::UserSession2.LoggedOff.Types.LogoffReason) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.PasswordChange), global::UserSession2.PasswordChange.Parser, new[]{ "OldPassword", "NewPassword" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.PasswordChangeResult), global::UserSession2.PasswordChangeResult.Parser, new[]{ "ResultCode", "TextMessage" }, null, new[]{ typeof(global::UserSession2.PasswordChangeResult.Types.ResultCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.ObtainDemoCredentials), global::UserSession2.ObtainDemoCredentials.Parser, new[]{ "ClientAppId", "FirstName", "SecondName", "EMail", "PrivateLabel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.ObtainDemoCredentialsResult), global::UserSession2.ObtainDemoCredentialsResult.Parser, new[]{ "ResultCode", "UserName", "Password", "TextMessage", "UserId", "ExpirationUtc" }, null, new[]{ typeof(global::UserSession2.ObtainDemoCredentialsResult.Types.ResultCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.UserMessage), global::UserSession2.UserMessage.Parser, new[]{ "MessageType", "Source", "Subject", "Text", "ExpirationUtcTime" }, null, new[]{ typeof(global::UserSession2.UserMessage.Types.MessageType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.UserSessionStateRequest), global::UserSession2.UserSessionStateRequest.Parser, new[]{ "SessionToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.UserSessionStateResult), global::UserSession2.UserSessionStateResult.Parser, new[]{ "SessionToken", "ResultCode", "UserId", "Username" }, null, new[]{ typeof(global::UserSession2.UserSessionStateResult.Types.ResultCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.Ping), global::UserSession2.Ping.Parser, new[]{ "Token", "PingUtcTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.Pong), global::UserSession2.Pong.Parser, new[]{ "Token", "PingUtcTime", "PongUtcTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.SetCollapsingLevelRequest), global::UserSession2.SetCollapsingLevelRequest.Parser, new[]{ "MaxCollapsingLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::UserSession2.SetCollapsingLevelResult), global::UserSession2.SetCollapsingLevelResult.Parser, new[]{ "ResultCode", "TextMessage", "MaxCollapsingLevel" }, null, new[]{ typeof(global::UserSession2.SetCollapsingLevelResult.Types.ResultCode) }, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Real-time Collapsing level enumeration.
  /// Collapsing is a mechanism of eliminating some intermediate quotes to present more up-to-date market data
  /// instead of falling behind.
  /// It is started dynamically by server if client is not able to consume all requested feed timely
  /// e.g. because of a narrow network channel or client side hardware/ software issues.
  ///
  /// * When real time price data in a session queue becomes >=1 seconds old (configurable) DOM collapsing is applied
  ///   so per contract snapshot is sent at the end of the contract data messages.
  /// * When real time price data in a session queue is >=4 seconds old (configurable) BBA collapsing is done
  ///   so only last per contract BBA quotes are delivered.
  /// * When real time price data in a session queue is >=8 seconds old (configurable) Trade collapsing is done
  ///   so only last per contract Trade quotes are delivered.
  /// * Quote representing Open, High or Low is always sent to the client regardless of current collapsing level.
  /// * Quote representing Settlement is always sent to the client regardless of current collapsing level.
  /// * If the difference between first and last quote in the queue reaches 60 (current setting) seconds 
  /// (configurable with per user overrides for VIP access) the connection is closed with sending a special user message.
  ///
  /// The user can specify maximum allowed collapsing level, 
  /// see Logon/RestoreOrJoinSession message's max_collapsing_level field, or SetCollapsingLevelRequest message.
  /// Server will honor the setting, but still disconnect the user 
  /// if the data in outgoing queue becomes 60 sec(current setting) old.
  ///
  /// CONCLUSION: In case of bad network conditions, the client has a choice:
  ///
  /// a) To receive more complete realtime data but risk being disconnected:
  ///    the lower chosen max_collapsing_level - the higher risk of disconnections.
  ///
  /// b) To receive collapsed but up-to-date realtime data and stay connected:
  ///    it is advised to leave field max_collapsing_level out, or set it to REAL_TIME_COLLAPSING_LEVEL_DOM_BBA_TRADES.
  /// </summary>
  public enum RealTimeCollapsingLevel {
    /// <summary>
    /// Collapsing is not not preferred.
    /// </summary>
    [pbr::OriginalName("REAL_TIME_COLLAPSING_LEVEL_NONE")] None = 0,
    /// <summary>
    /// DOM data is collapsed.
    /// </summary>
    [pbr::OriginalName("REAL_TIME_COLLAPSING_LEVEL_DOM")] Dom = 1,
    /// <summary>
    /// DOM and best bid/ ask quotes are collapsed delivering only last BBA but all trades.
    /// </summary>
    [pbr::OriginalName("REAL_TIME_COLLAPSING_LEVEL_DOM_BBA")] DomBba = 2,
    /// <summary>
    /// DOM, best bid/ ask and trades quotes are collapsed delivering only last values.
    /// </summary>
    [pbr::OriginalName("REAL_TIME_COLLAPSING_LEVEL_DOM_BBA_TRADES")] DomBbaTrades = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Logon into the system and opening a new session.
  /// Clients should either use user_name/password or access_token to enter the system.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Logon : pb::IMessage<Logon>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Logon> _parser = new pb::MessageParser<Logon>(() => new Logon());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Logon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Logon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Logon(Logon other) : this() {
      _hasBits0 = other._hasBits0;
      userName_ = other.userName_;
      password_ = other.password_;
      accessToken_ = other.accessToken_;
      partnerToken_ = other.partnerToken_;
      oneTimePassword_ = other.oneTimePassword_;
      privateLabel_ = other.privateLabel_;
      clientAppId_ = other.clientAppId_;
      clientVersion_ = other.clientVersion_;
      dropConcurrentSession_ = other.dropConcurrentSession_;
      maxCollapsingLevel_ = other.maxCollapsingLevel_;
      protocolVersionMinor_ = other.protocolVersionMinor_;
      protocolVersionMajor_ = other.protocolVersionMajor_;
      sessionSettings_ = other.sessionSettings_.Clone();
      marketDataBandwidth_ = other.marketDataBandwidth_;
      dialectId_ = other.dialectId_;
      fingerprint_ = other.fingerprint_;
      operatingSystem_ = other.operatingSystem_;
      browser_ = other.browser_;
      deviceModel_ = other.deviceModel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Logon Clone() {
      return new Logon(this);
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 1;
    private readonly static string UserNameDefaultValue = "";

    private string userName_;
    /// <summary>
    /// User login name.
    /// It is not used along with access_token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserName {
      get { return userName_ ?? UserNameDefaultValue; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserName {
      get { return userName_ != null; }
    }
    /// <summary>Clears the value of the "user_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserName() {
      userName_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private readonly static string PasswordDefaultValue = "";

    private string password_;
    /// <summary>
    /// User's password.
    /// It is not used along with access_token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Password {
      get { return password_ ?? PasswordDefaultValue; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPassword() {
      password_ = null;
    }

    /// <summary>Field number for the "access_token" field.</summary>
    public const int AccessTokenFieldNumber = 14;
    private readonly static string AccessTokenDefaultValue = "";

    private string accessToken_;
    /// <summary>
    /// Access token.
    /// It is not used along with user_name, password and one_time_password.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AccessToken {
      get { return accessToken_ ?? AccessTokenDefaultValue; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "access_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAccessToken {
      get { return accessToken_ != null; }
    }
    /// <summary>Clears the value of the "access_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAccessToken() {
      accessToken_ = null;
    }

    /// <summary>Field number for the "partner_token" field.</summary>
    public const int PartnerTokenFieldNumber = 19;
    private readonly static string PartnerTokenDefaultValue = "";

    private string partnerToken_;
    /// <summary>
    /// Token of the user externally authenticated by CQG partner.
    /// It is not used along with user_name, password and one_time_password.
    /// Mutually exclusive with access_token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PartnerToken {
      get { return partnerToken_ ?? PartnerTokenDefaultValue; }
      set {
        partnerToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "partner_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPartnerToken {
      get { return partnerToken_ != null; }
    }
    /// <summary>Clears the value of the "partner_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPartnerToken() {
      partnerToken_ = null;
    }

    /// <summary>Field number for the "one_time_password" field.</summary>
    public const int OneTimePasswordFieldNumber = 3;
    private readonly static string OneTimePasswordDefaultValue = "";

    private string oneTimePassword_;
    /// <summary>
    /// User's one time password, might be required according to the user's settings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OneTimePassword {
      get { return oneTimePassword_ ?? OneTimePasswordDefaultValue; }
      set {
        oneTimePassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "one_time_password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOneTimePassword {
      get { return oneTimePassword_ != null; }
    }
    /// <summary>Clears the value of the "one_time_password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOneTimePassword() {
      oneTimePassword_ = null;
    }

    /// <summary>Field number for the "private_label" field.</summary>
    public const int PrivateLabelFieldNumber = 4;
    private readonly static string PrivateLabelDefaultValue = "";

    private string privateLabel_;
    /// <summary>
    /// Private label identifies the Firm or Vendor that connects to the server. The value is ignored and taken from
    /// access_token if it's specified. If neither access_token nor private_label is specified, the private_label is set
    /// equal to client_app_id field value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PrivateLabel {
      get { return privateLabel_ ?? PrivateLabelDefaultValue; }
      set {
        privateLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "private_label" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrivateLabel {
      get { return privateLabel_ != null; }
    }
    /// <summary>Clears the value of the "private_label" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrivateLabel() {
      privateLabel_ = null;
    }

    /// <summary>Field number for the "client_app_id" field.</summary>
    public const int ClientAppIdFieldNumber = 5;
    private readonly static string ClientAppIdDefaultValue = "";

    private string clientAppId_;
    /// <summary>
    /// Identifier of the client application as assigned by CQG. The value is ignored and taken from access_token
    /// if it's specified; otherwise the field value is required to be provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientAppId {
      get { return clientAppId_ ?? ClientAppIdDefaultValue; }
      set {
        clientAppId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "client_app_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientAppId {
      get { return clientAppId_ != null; }
    }
    /// <summary>Clears the value of the "client_app_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientAppId() {
      clientAppId_ = null;
    }

    /// <summary>Field number for the "client_version" field.</summary>
    public const int ClientVersionFieldNumber = 6;
    private readonly static string ClientVersionDefaultValue = "";

    private string clientVersion_;
    /// <summary>
    /// Version of a client application.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientVersion {
      get { return clientVersion_ ?? ClientVersionDefaultValue; }
      set {
        clientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "client_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientVersion {
      get { return clientVersion_ != null; }
    }
    /// <summary>Clears the value of the "client_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientVersion() {
      clientVersion_ = null;
    }

    /// <summary>Field number for the "drop_concurrent_session" field.</summary>
    public const int DropConcurrentSessionFieldNumber = 7;
    private readonly static bool DropConcurrentSessionDefaultValue = false;

    private bool dropConcurrentSession_;
    /// <summary>
    /// Optional field that indicates if possible concurrent sessions for this user should be forcedly dropped.
    /// If it is set to false then Logon may fail with CONCURRENT_SESSION code.
    /// If it is omitted or set to true then concurrent sessions for this user will be dropped.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DropConcurrentSession {
      get { if ((_hasBits0 & 1) != 0) { return dropConcurrentSession_; } else { return DropConcurrentSessionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        dropConcurrentSession_ = value;
      }
    }
    /// <summary>Gets whether the "drop_concurrent_session" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDropConcurrentSession {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "drop_concurrent_session" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDropConcurrentSession() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "max_collapsing_level" field.</summary>
    public const int MaxCollapsingLevelFieldNumber = 8;
    private readonly static uint MaxCollapsingLevelDefaultValue = 0;

    private uint maxCollapsingLevel_;
    /// <summary>
    /// Maximum allowed real-time market data collapsing level.
    /// REAL_TIME_COLLAPSING_LEVEL_DOM_BBA_TRADES is the default allowed collapsing level.
    /// This field is associated with RealTimeCollapsingLevel enum type.
    /// Only one of max_collapsing_level and market_data_bandwidth can be specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxCollapsingLevel {
      get { if ((_hasBits0 & 2) != 0) { return maxCollapsingLevel_; } else { return MaxCollapsingLevelDefaultValue; } }
      set {
        _hasBits0 |= 2;
        maxCollapsingLevel_ = value;
      }
    }
    /// <summary>Gets whether the "max_collapsing_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxCollapsingLevel {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "max_collapsing_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxCollapsingLevel() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "protocol_version_minor" field.</summary>
    public const int ProtocolVersionMinorFieldNumber = 9;
    private readonly static uint ProtocolVersionMinorDefaultValue = 0;

    private uint protocolVersionMinor_;
    /// <summary>
    /// Current protocol version that is used by the client application.
    /// It is strongly recommended for client applications
    /// to put PROTOCOL_VERSION_MAJOR and PROTOCOL_VERSION_MINOR values from a used protocol file.
    /// If version information is not provided then Server assumes client uses 0.x version of the protocol
    /// and may disable some new protocol features.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProtocolVersionMinor {
      get { if ((_hasBits0 & 4) != 0) { return protocolVersionMinor_; } else { return ProtocolVersionMinorDefaultValue; } }
      set {
        _hasBits0 |= 4;
        protocolVersionMinor_ = value;
      }
    }
    /// <summary>Gets whether the "protocol_version_minor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProtocolVersionMinor {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "protocol_version_minor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProtocolVersionMinor() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "protocol_version_major" field.</summary>
    public const int ProtocolVersionMajorFieldNumber = 10;
    private readonly static uint ProtocolVersionMajorDefaultValue = 0;

    private uint protocolVersionMajor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProtocolVersionMajor {
      get { if ((_hasBits0 & 8) != 0) { return protocolVersionMajor_; } else { return ProtocolVersionMajorDefaultValue; } }
      set {
        _hasBits0 |= 8;
        protocolVersionMajor_ = value;
      }
    }
    /// <summary>Gets whether the "protocol_version_major" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProtocolVersionMajor {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "protocol_version_major" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProtocolVersionMajor() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "session_settings" field.</summary>
    public const int SessionSettingsFieldNumber = 11;
    private static readonly pb::FieldCodec<uint> _repeated_sessionSettings_codec
        = pb::FieldCodec.ForUInt32(88);
    private readonly pbc::RepeatedField<uint> sessionSettings_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// List of settings for a new session.
    /// This field is associated with SessionSetting enum type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> SessionSettings {
      get { return sessionSettings_; }
    }

    /// <summary>Field number for the "market_data_bandwidth" field.</summary>
    public const int MarketDataBandwidthFieldNumber = 12;
    private readonly static uint MarketDataBandwidthDefaultValue = 0;

    private uint marketDataBandwidth_;
    /// <summary>
    /// Real-time market data bandwidth limit (in KB per second).
    /// Only one of max_collapsing_level and market_data_bandwidth can be specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MarketDataBandwidth {
      get { if ((_hasBits0 & 16) != 0) { return marketDataBandwidth_; } else { return MarketDataBandwidthDefaultValue; } }
      set {
        _hasBits0 |= 16;
        marketDataBandwidth_ = value;
      }
    }
    /// <summary>Gets whether the "market_data_bandwidth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMarketDataBandwidth {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "market_data_bandwidth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMarketDataBandwidth() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "dialect_id" field.</summary>
    public const int DialectIdFieldNumber = 13;
    private readonly static string DialectIdDefaultValue = "";

    private string dialectId_;
    /// <summary>
    /// Dialect ID for used symbols.
    /// CQG dialect is used if omitted.
    /// Id for CQG dialect is 0.
    /// Please contact CQG to get the list of supported dialects.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DialectId {
      get { return dialectId_ ?? DialectIdDefaultValue; }
      set {
        dialectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dialect_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDialectId {
      get { return dialectId_ != null; }
    }
    /// <summary>Clears the value of the "dialect_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDialectId() {
      dialectId_ = null;
    }

    /// <summary>Field number for the "fingerprint" field.</summary>
    public const int FingerprintFieldNumber = 15;
    private readonly static string FingerprintDefaultValue = "";

    private string fingerprint_;
    /// <summary>
    /// Fingerprint of a client application installation on a particular device.
    /// This is just a string from the server perspective. Clients should make
    /// sure it stays the same across runs of the application installation on
    /// a specific device or Web application in a specific browser on this
    /// device. Possible approaches to get the value on the client side:
    /// http://clientjs.org/
    /// https://developer.android.com/training/articles/user-data-ids.html
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Fingerprint {
      get { return fingerprint_ ?? FingerprintDefaultValue; }
      set {
        fingerprint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fingerprint" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFingerprint {
      get { return fingerprint_ != null; }
    }
    /// <summary>Clears the value of the "fingerprint" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFingerprint() {
      fingerprint_ = null;
    }

    /// <summary>Field number for the "operating_system" field.</summary>
    public const int OperatingSystemFieldNumber = 16;
    private readonly static string OperatingSystemDefaultValue = "";

    private string operatingSystem_;
    /// <summary>
    /// Client's operating system (with version, e.g. "Windows 7" or "Android").
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OperatingSystem {
      get { return operatingSystem_ ?? OperatingSystemDefaultValue; }
      set {
        operatingSystem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "operating_system" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOperatingSystem {
      get { return operatingSystem_ != null; }
    }
    /// <summary>Clears the value of the "operating_system" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOperatingSystem() {
      operatingSystem_ = null;
    }

    /// <summary>Field number for the "browser" field.</summary>
    public const int BrowserFieldNumber = 17;
    private readonly static string BrowserDefaultValue = "";

    private string browser_;
    /// <summary>
    /// Client's browser name (if applicable, without version, e.g. "Chrome" or "Firefox").
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Browser {
      get { return browser_ ?? BrowserDefaultValue; }
      set {
        browser_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "browser" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowser {
      get { return browser_ != null; }
    }
    /// <summary>Clears the value of the "browser" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowser() {
      browser_ = null;
    }

    /// <summary>Field number for the "device_model" field.</summary>
    public const int DeviceModelFieldNumber = 18;
    private readonly static string DeviceModelDefaultValue = "";

    private string deviceModel_;
    /// <summary>
    /// Client's device model (specific names for mobile, like "iPhone 7", or "PC" if not mobile/tablet).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceModel {
      get { return deviceModel_ ?? DeviceModelDefaultValue; }
      set {
        deviceModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "device_model" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceModel {
      get { return deviceModel_ != null; }
    }
    /// <summary>Clears the value of the "device_model" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceModel() {
      deviceModel_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Logon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Logon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (Password != other.Password) return false;
      if (AccessToken != other.AccessToken) return false;
      if (PartnerToken != other.PartnerToken) return false;
      if (OneTimePassword != other.OneTimePassword) return false;
      if (PrivateLabel != other.PrivateLabel) return false;
      if (ClientAppId != other.ClientAppId) return false;
      if (ClientVersion != other.ClientVersion) return false;
      if (DropConcurrentSession != other.DropConcurrentSession) return false;
      if (MaxCollapsingLevel != other.MaxCollapsingLevel) return false;
      if (ProtocolVersionMinor != other.ProtocolVersionMinor) return false;
      if (ProtocolVersionMajor != other.ProtocolVersionMajor) return false;
      if(!sessionSettings_.Equals(other.sessionSettings_)) return false;
      if (MarketDataBandwidth != other.MarketDataBandwidth) return false;
      if (DialectId != other.DialectId) return false;
      if (Fingerprint != other.Fingerprint) return false;
      if (OperatingSystem != other.OperatingSystem) return false;
      if (Browser != other.Browser) return false;
      if (DeviceModel != other.DeviceModel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUserName) hash ^= UserName.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (HasAccessToken) hash ^= AccessToken.GetHashCode();
      if (HasPartnerToken) hash ^= PartnerToken.GetHashCode();
      if (HasOneTimePassword) hash ^= OneTimePassword.GetHashCode();
      if (HasPrivateLabel) hash ^= PrivateLabel.GetHashCode();
      if (HasClientAppId) hash ^= ClientAppId.GetHashCode();
      if (HasClientVersion) hash ^= ClientVersion.GetHashCode();
      if (HasDropConcurrentSession) hash ^= DropConcurrentSession.GetHashCode();
      if (HasMaxCollapsingLevel) hash ^= MaxCollapsingLevel.GetHashCode();
      if (HasProtocolVersionMinor) hash ^= ProtocolVersionMinor.GetHashCode();
      if (HasProtocolVersionMajor) hash ^= ProtocolVersionMajor.GetHashCode();
      hash ^= sessionSettings_.GetHashCode();
      if (HasMarketDataBandwidth) hash ^= MarketDataBandwidth.GetHashCode();
      if (HasDialectId) hash ^= DialectId.GetHashCode();
      if (HasFingerprint) hash ^= Fingerprint.GetHashCode();
      if (HasOperatingSystem) hash ^= OperatingSystem.GetHashCode();
      if (HasBrowser) hash ^= Browser.GetHashCode();
      if (HasDeviceModel) hash ^= DeviceModel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUserName) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (HasPassword) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (HasOneTimePassword) {
        output.WriteRawTag(26);
        output.WriteString(OneTimePassword);
      }
      if (HasPrivateLabel) {
        output.WriteRawTag(34);
        output.WriteString(PrivateLabel);
      }
      if (HasClientAppId) {
        output.WriteRawTag(42);
        output.WriteString(ClientAppId);
      }
      if (HasClientVersion) {
        output.WriteRawTag(50);
        output.WriteString(ClientVersion);
      }
      if (HasDropConcurrentSession) {
        output.WriteRawTag(56);
        output.WriteBool(DropConcurrentSession);
      }
      if (HasMaxCollapsingLevel) {
        output.WriteRawTag(64);
        output.WriteUInt32(MaxCollapsingLevel);
      }
      if (HasProtocolVersionMinor) {
        output.WriteRawTag(72);
        output.WriteUInt32(ProtocolVersionMinor);
      }
      if (HasProtocolVersionMajor) {
        output.WriteRawTag(80);
        output.WriteUInt32(ProtocolVersionMajor);
      }
      sessionSettings_.WriteTo(output, _repeated_sessionSettings_codec);
      if (HasMarketDataBandwidth) {
        output.WriteRawTag(96);
        output.WriteUInt32(MarketDataBandwidth);
      }
      if (HasDialectId) {
        output.WriteRawTag(106);
        output.WriteString(DialectId);
      }
      if (HasAccessToken) {
        output.WriteRawTag(114);
        output.WriteString(AccessToken);
      }
      if (HasFingerprint) {
        output.WriteRawTag(122);
        output.WriteString(Fingerprint);
      }
      if (HasOperatingSystem) {
        output.WriteRawTag(130, 1);
        output.WriteString(OperatingSystem);
      }
      if (HasBrowser) {
        output.WriteRawTag(138, 1);
        output.WriteString(Browser);
      }
      if (HasDeviceModel) {
        output.WriteRawTag(146, 1);
        output.WriteString(DeviceModel);
      }
      if (HasPartnerToken) {
        output.WriteRawTag(154, 1);
        output.WriteString(PartnerToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUserName) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (HasPassword) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (HasOneTimePassword) {
        output.WriteRawTag(26);
        output.WriteString(OneTimePassword);
      }
      if (HasPrivateLabel) {
        output.WriteRawTag(34);
        output.WriteString(PrivateLabel);
      }
      if (HasClientAppId) {
        output.WriteRawTag(42);
        output.WriteString(ClientAppId);
      }
      if (HasClientVersion) {
        output.WriteRawTag(50);
        output.WriteString(ClientVersion);
      }
      if (HasDropConcurrentSession) {
        output.WriteRawTag(56);
        output.WriteBool(DropConcurrentSession);
      }
      if (HasMaxCollapsingLevel) {
        output.WriteRawTag(64);
        output.WriteUInt32(MaxCollapsingLevel);
      }
      if (HasProtocolVersionMinor) {
        output.WriteRawTag(72);
        output.WriteUInt32(ProtocolVersionMinor);
      }
      if (HasProtocolVersionMajor) {
        output.WriteRawTag(80);
        output.WriteUInt32(ProtocolVersionMajor);
      }
      sessionSettings_.WriteTo(ref output, _repeated_sessionSettings_codec);
      if (HasMarketDataBandwidth) {
        output.WriteRawTag(96);
        output.WriteUInt32(MarketDataBandwidth);
      }
      if (HasDialectId) {
        output.WriteRawTag(106);
        output.WriteString(DialectId);
      }
      if (HasAccessToken) {
        output.WriteRawTag(114);
        output.WriteString(AccessToken);
      }
      if (HasFingerprint) {
        output.WriteRawTag(122);
        output.WriteString(Fingerprint);
      }
      if (HasOperatingSystem) {
        output.WriteRawTag(130, 1);
        output.WriteString(OperatingSystem);
      }
      if (HasBrowser) {
        output.WriteRawTag(138, 1);
        output.WriteString(Browser);
      }
      if (HasDeviceModel) {
        output.WriteRawTag(146, 1);
        output.WriteString(DeviceModel);
      }
      if (HasPartnerToken) {
        output.WriteRawTag(154, 1);
        output.WriteString(PartnerToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUserName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (HasAccessToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (HasPartnerToken) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PartnerToken);
      }
      if (HasOneTimePassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OneTimePassword);
      }
      if (HasPrivateLabel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrivateLabel);
      }
      if (HasClientAppId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientAppId);
      }
      if (HasClientVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientVersion);
      }
      if (HasDropConcurrentSession) {
        size += 1 + 1;
      }
      if (HasMaxCollapsingLevel) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxCollapsingLevel);
      }
      if (HasProtocolVersionMinor) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersionMinor);
      }
      if (HasProtocolVersionMajor) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersionMajor);
      }
      size += sessionSettings_.CalculateSize(_repeated_sessionSettings_codec);
      if (HasMarketDataBandwidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MarketDataBandwidth);
      }
      if (HasDialectId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DialectId);
      }
      if (HasFingerprint) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fingerprint);
      }
      if (HasOperatingSystem) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OperatingSystem);
      }
      if (HasBrowser) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Browser);
      }
      if (HasDeviceModel) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DeviceModel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Logon other) {
      if (other == null) {
        return;
      }
      if (other.HasUserName) {
        UserName = other.UserName;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      if (other.HasAccessToken) {
        AccessToken = other.AccessToken;
      }
      if (other.HasPartnerToken) {
        PartnerToken = other.PartnerToken;
      }
      if (other.HasOneTimePassword) {
        OneTimePassword = other.OneTimePassword;
      }
      if (other.HasPrivateLabel) {
        PrivateLabel = other.PrivateLabel;
      }
      if (other.HasClientAppId) {
        ClientAppId = other.ClientAppId;
      }
      if (other.HasClientVersion) {
        ClientVersion = other.ClientVersion;
      }
      if (other.HasDropConcurrentSession) {
        DropConcurrentSession = other.DropConcurrentSession;
      }
      if (other.HasMaxCollapsingLevel) {
        MaxCollapsingLevel = other.MaxCollapsingLevel;
      }
      if (other.HasProtocolVersionMinor) {
        ProtocolVersionMinor = other.ProtocolVersionMinor;
      }
      if (other.HasProtocolVersionMajor) {
        ProtocolVersionMajor = other.ProtocolVersionMajor;
      }
      sessionSettings_.Add(other.sessionSettings_);
      if (other.HasMarketDataBandwidth) {
        MarketDataBandwidth = other.MarketDataBandwidth;
      }
      if (other.HasDialectId) {
        DialectId = other.DialectId;
      }
      if (other.HasFingerprint) {
        Fingerprint = other.Fingerprint;
      }
      if (other.HasOperatingSystem) {
        OperatingSystem = other.OperatingSystem;
      }
      if (other.HasBrowser) {
        Browser = other.Browser;
      }
      if (other.HasDeviceModel) {
        DeviceModel = other.DeviceModel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            OneTimePassword = input.ReadString();
            break;
          }
          case 34: {
            PrivateLabel = input.ReadString();
            break;
          }
          case 42: {
            ClientAppId = input.ReadString();
            break;
          }
          case 50: {
            ClientVersion = input.ReadString();
            break;
          }
          case 56: {
            DropConcurrentSession = input.ReadBool();
            break;
          }
          case 64: {
            MaxCollapsingLevel = input.ReadUInt32();
            break;
          }
          case 72: {
            ProtocolVersionMinor = input.ReadUInt32();
            break;
          }
          case 80: {
            ProtocolVersionMajor = input.ReadUInt32();
            break;
          }
          case 90:
          case 88: {
            sessionSettings_.AddEntriesFrom(input, _repeated_sessionSettings_codec);
            break;
          }
          case 96: {
            MarketDataBandwidth = input.ReadUInt32();
            break;
          }
          case 106: {
            DialectId = input.ReadString();
            break;
          }
          case 114: {
            AccessToken = input.ReadString();
            break;
          }
          case 122: {
            Fingerprint = input.ReadString();
            break;
          }
          case 130: {
            OperatingSystem = input.ReadString();
            break;
          }
          case 138: {
            Browser = input.ReadString();
            break;
          }
          case 146: {
            DeviceModel = input.ReadString();
            break;
          }
          case 154: {
            PartnerToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            OneTimePassword = input.ReadString();
            break;
          }
          case 34: {
            PrivateLabel = input.ReadString();
            break;
          }
          case 42: {
            ClientAppId = input.ReadString();
            break;
          }
          case 50: {
            ClientVersion = input.ReadString();
            break;
          }
          case 56: {
            DropConcurrentSession = input.ReadBool();
            break;
          }
          case 64: {
            MaxCollapsingLevel = input.ReadUInt32();
            break;
          }
          case 72: {
            ProtocolVersionMinor = input.ReadUInt32();
            break;
          }
          case 80: {
            ProtocolVersionMajor = input.ReadUInt32();
            break;
          }
          case 90:
          case 88: {
            sessionSettings_.AddEntriesFrom(ref input, _repeated_sessionSettings_codec);
            break;
          }
          case 96: {
            MarketDataBandwidth = input.ReadUInt32();
            break;
          }
          case 106: {
            DialectId = input.ReadString();
            break;
          }
          case 114: {
            AccessToken = input.ReadString();
            break;
          }
          case 122: {
            Fingerprint = input.ReadString();
            break;
          }
          case 130: {
            OperatingSystem = input.ReadString();
            break;
          }
          case 138: {
            Browser = input.ReadString();
            break;
          }
          case 146: {
            DeviceModel = input.ReadString();
            break;
          }
          case 154: {
            PartnerToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Logon message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum SessionSetting {
        /// <summary>
        /// Allows restoring session in case of an accidental disconnect (see RestoreOrJoinSession message).
        /// If the setting is not specified then termination of the last connection
        /// also terminates the session without ability to restore it.
        /// For security reasons clients should not specify this setting without using the restore session functionality.
        /// </summary>
        [pbr::OriginalName("SESSION_SETTING_ALLOW_SESSION_RESTORE")] AllowSessionRestore = 1,
        /// <summary>
        /// Allows other new connections to join the session (see RestoreOrJoinSession message) and work concurrently.
        /// If the setting is not specified then the session can have only one connection at each moment
        /// and a new connection pushes the old one out (if the session restore is allowed).
        /// For security reasons clients should not specify this setting without using join session functionality.
        /// </summary>
        [pbr::OriginalName("SESSION_SETTING_ALLOW_SESSION_JOIN")] AllowSessionJoin = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Result of the logon operation (for Logon and LogonRoutineClient messages).
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LogonResult : pb::IMessage<LogonResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogonResult> _parser = new pb::MessageParser<LogonResult>(() => new LogonResult());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LogonResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogonResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogonResult(LogonResult other) : this() {
      _hasBits0 = other._hasBits0;
      resultCode_ = other.resultCode_;
      baseTime_ = other.baseTime_;
      sessionToken_ = other.sessionToken_;
      textMessage_ = other.textMessage_;
      redirectUrl_ = other.redirectUrl_;
      protocolVersionMinor_ = other.protocolVersionMinor_;
      protocolVersionMajor_ = other.protocolVersionMajor_;
      userId_ = other.userId_;
      serverTime_ = other.serverTime_;
      inactivityTimeout_ = other.inactivityTimeout_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogonResult Clone() {
      return new LogonResult(this);
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 1;
    private readonly static uint ResultCodeDefaultValue = 0;

    private uint resultCode_;
    /// <summary>
    /// One of the logon result codes.
    /// This field is associated with ResultCode enum type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ResultCode {
      get { if ((_hasBits0 & 1) != 0) { return resultCode_; } else { return ResultCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        resultCode_ = value;
      }
    }
    /// <summary>Gets whether the "result_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResultCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResultCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "base_time" field.</summary>
    public const int BaseTimeFieldNumber = 2;
    private readonly static string BaseTimeDefaultValue = "";

    private string baseTime_;
    /// <summary>
    /// Base time as ISO 8601 string (e.g. '2013-04-03T14:23:20')
    /// all other times are number of milliseconds from this base time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BaseTime {
      get { return baseTime_ ?? BaseTimeDefaultValue; }
      set {
        baseTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "base_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBaseTime {
      get { return baseTime_ != null; }
    }
    /// <summary>Clears the value of the "base_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBaseTime() {
      baseTime_ = null;
    }

    /// <summary>Field number for the "session_token" field.</summary>
    public const int SessionTokenFieldNumber = 3;
    private readonly static string SessionTokenDefaultValue = "";

    private string sessionToken_;
    /// <summary>
    /// Token of a new session if logon succeeded.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SessionToken {
      get { return sessionToken_ ?? SessionTokenDefaultValue; }
      set {
        sessionToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "session_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSessionToken {
      get { return sessionToken_ != null; }
    }
    /// <summary>Clears the value of the "session_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSessionToken() {
      sessionToken_ = null;
    }

    /// <summary>Field number for the "text_message" field.</summary>
    public const int TextMessageFieldNumber = 4;
    private readonly static string TextMessageDefaultValue = "";

    private string textMessage_;
    /// <summary>
    /// Optional logon result message for failure details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TextMessage {
      get { return textMessage_ ?? TextMessageDefaultValue; }
      set {
        textMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextMessage {
      get { return textMessage_ != null; }
    }
    /// <summary>Clears the value of the "text_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextMessage() {
      textMessage_ = null;
    }

    /// <summary>Field number for the "redirect_url" field.</summary>
    public const int RedirectUrlFieldNumber = 5;
    private readonly static string RedirectUrlDefaultValue = "";

    private string redirectUrl_;
    /// <summary>
    /// URL for a client to reconnect in case of redirection.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RedirectUrl {
      get { return redirectUrl_ ?? RedirectUrlDefaultValue; }
      set {
        redirectUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "redirect_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRedirectUrl {
      get { return redirectUrl_ != null; }
    }
    /// <summary>Clears the value of the "redirect_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRedirectUrl() {
      redirectUrl_ = null;
    }

    /// <summary>Field number for the "protocol_version_minor" field.</summary>
    public const int ProtocolVersionMinorFieldNumber = 6;
    private readonly static uint ProtocolVersionMinorDefaultValue = 0;

    private uint protocolVersionMinor_;
    /// <summary>
    /// Current protocol version of server. Normally client application need nothing to do with it.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProtocolVersionMinor {
      get { if ((_hasBits0 & 2) != 0) { return protocolVersionMinor_; } else { return ProtocolVersionMinorDefaultValue; } }
      set {
        _hasBits0 |= 2;
        protocolVersionMinor_ = value;
      }
    }
    /// <summary>Gets whether the "protocol_version_minor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProtocolVersionMinor {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "protocol_version_minor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProtocolVersionMinor() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "protocol_version_major" field.</summary>
    public const int ProtocolVersionMajorFieldNumber = 7;
    private readonly static uint ProtocolVersionMajorDefaultValue = 0;

    private uint protocolVersionMajor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProtocolVersionMajor {
      get { if ((_hasBits0 & 4) != 0) { return protocolVersionMajor_; } else { return ProtocolVersionMajorDefaultValue; } }
      set {
        _hasBits0 |= 4;
        protocolVersionMajor_ = value;
      }
    }
    /// <summary>Gets whether the "protocol_version_major" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProtocolVersionMajor {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "protocol_version_major" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProtocolVersionMajor() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 8;
    private readonly static int UserIdDefaultValue = 0;

    private int userId_;
    /// <summary>
    /// Unique user identification.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserId {
      get { if ((_hasBits0 & 8) != 0) { return userId_; } else { return UserIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        userId_ = value;
      }
    }
    /// <summary>Gets whether the "user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "user_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserId() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "server_time" field.</summary>
    public const int ServerTimeFieldNumber = 9;
    private readonly static long ServerTimeDefaultValue = 0L;

    private long serverTime_;
    /// <summary>
    /// Time when the message was sent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ServerTime {
      get { if ((_hasBits0 & 16) != 0) { return serverTime_; } else { return ServerTimeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        serverTime_ = value;
      }
    }
    /// <summary>Gets whether the "server_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServerTime {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "server_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServerTime() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "inactivity_timeout" field.</summary>
    public const int InactivityTimeoutFieldNumber = 10;
    private readonly static uint InactivityTimeoutDefaultValue = 0;

    private uint inactivityTimeout_;
    /// <summary>
    /// Timeout of session inactivity, number of minutes. This is clients'
    /// responsibility to track activity and disable/close the session after
    /// the timeout.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InactivityTimeout {
      get { if ((_hasBits0 & 32) != 0) { return inactivityTimeout_; } else { return InactivityTimeoutDefaultValue; } }
      set {
        _hasBits0 |= 32;
        inactivityTimeout_ = value;
      }
    }
    /// <summary>Gets whether the "inactivity_timeout" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInactivityTimeout {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "inactivity_timeout" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInactivityTimeout() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LogonResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LogonResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResultCode != other.ResultCode) return false;
      if (BaseTime != other.BaseTime) return false;
      if (SessionToken != other.SessionToken) return false;
      if (TextMessage != other.TextMessage) return false;
      if (RedirectUrl != other.RedirectUrl) return false;
      if (ProtocolVersionMinor != other.ProtocolVersionMinor) return false;
      if (ProtocolVersionMajor != other.ProtocolVersionMajor) return false;
      if (UserId != other.UserId) return false;
      if (ServerTime != other.ServerTime) return false;
      if (InactivityTimeout != other.InactivityTimeout) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResultCode) hash ^= ResultCode.GetHashCode();
      if (HasBaseTime) hash ^= BaseTime.GetHashCode();
      if (HasSessionToken) hash ^= SessionToken.GetHashCode();
      if (HasTextMessage) hash ^= TextMessage.GetHashCode();
      if (HasRedirectUrl) hash ^= RedirectUrl.GetHashCode();
      if (HasProtocolVersionMinor) hash ^= ProtocolVersionMinor.GetHashCode();
      if (HasProtocolVersionMajor) hash ^= ProtocolVersionMajor.GetHashCode();
      if (HasUserId) hash ^= UserId.GetHashCode();
      if (HasServerTime) hash ^= ServerTime.GetHashCode();
      if (HasInactivityTimeout) hash ^= InactivityTimeout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResultCode) {
        output.WriteRawTag(8);
        output.WriteUInt32(ResultCode);
      }
      if (HasBaseTime) {
        output.WriteRawTag(18);
        output.WriteString(BaseTime);
      }
      if (HasSessionToken) {
        output.WriteRawTag(26);
        output.WriteString(SessionToken);
      }
      if (HasTextMessage) {
        output.WriteRawTag(34);
        output.WriteString(TextMessage);
      }
      if (HasRedirectUrl) {
        output.WriteRawTag(42);
        output.WriteString(RedirectUrl);
      }
      if (HasProtocolVersionMinor) {
        output.WriteRawTag(48);
        output.WriteUInt32(ProtocolVersionMinor);
      }
      if (HasProtocolVersionMajor) {
        output.WriteRawTag(56);
        output.WriteUInt32(ProtocolVersionMajor);
      }
      if (HasUserId) {
        output.WriteRawTag(64);
        output.WriteSInt32(UserId);
      }
      if (HasServerTime) {
        output.WriteRawTag(72);
        output.WriteSInt64(ServerTime);
      }
      if (HasInactivityTimeout) {
        output.WriteRawTag(80);
        output.WriteUInt32(InactivityTimeout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResultCode) {
        output.WriteRawTag(8);
        output.WriteUInt32(ResultCode);
      }
      if (HasBaseTime) {
        output.WriteRawTag(18);
        output.WriteString(BaseTime);
      }
      if (HasSessionToken) {
        output.WriteRawTag(26);
        output.WriteString(SessionToken);
      }
      if (HasTextMessage) {
        output.WriteRawTag(34);
        output.WriteString(TextMessage);
      }
      if (HasRedirectUrl) {
        output.WriteRawTag(42);
        output.WriteString(RedirectUrl);
      }
      if (HasProtocolVersionMinor) {
        output.WriteRawTag(48);
        output.WriteUInt32(ProtocolVersionMinor);
      }
      if (HasProtocolVersionMajor) {
        output.WriteRawTag(56);
        output.WriteUInt32(ProtocolVersionMajor);
      }
      if (HasUserId) {
        output.WriteRawTag(64);
        output.WriteSInt32(UserId);
      }
      if (HasServerTime) {
        output.WriteRawTag(72);
        output.WriteSInt64(ServerTime);
      }
      if (HasInactivityTimeout) {
        output.WriteRawTag(80);
        output.WriteUInt32(InactivityTimeout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResultCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResultCode);
      }
      if (HasBaseTime) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseTime);
      }
      if (HasSessionToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionToken);
      }
      if (HasTextMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextMessage);
      }
      if (HasRedirectUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedirectUrl);
      }
      if (HasProtocolVersionMinor) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersionMinor);
      }
      if (HasProtocolVersionMajor) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersionMajor);
      }
      if (HasUserId) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UserId);
      }
      if (HasServerTime) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(ServerTime);
      }
      if (HasInactivityTimeout) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InactivityTimeout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LogonResult other) {
      if (other == null) {
        return;
      }
      if (other.HasResultCode) {
        ResultCode = other.ResultCode;
      }
      if (other.HasBaseTime) {
        BaseTime = other.BaseTime;
      }
      if (other.HasSessionToken) {
        SessionToken = other.SessionToken;
      }
      if (other.HasTextMessage) {
        TextMessage = other.TextMessage;
      }
      if (other.HasRedirectUrl) {
        RedirectUrl = other.RedirectUrl;
      }
      if (other.HasProtocolVersionMinor) {
        ProtocolVersionMinor = other.ProtocolVersionMinor;
      }
      if (other.HasProtocolVersionMajor) {
        ProtocolVersionMajor = other.ProtocolVersionMajor;
      }
      if (other.HasUserId) {
        UserId = other.UserId;
      }
      if (other.HasServerTime) {
        ServerTime = other.ServerTime;
      }
      if (other.HasInactivityTimeout) {
        InactivityTimeout = other.InactivityTimeout;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 18: {
            BaseTime = input.ReadString();
            break;
          }
          case 26: {
            SessionToken = input.ReadString();
            break;
          }
          case 34: {
            TextMessage = input.ReadString();
            break;
          }
          case 42: {
            RedirectUrl = input.ReadString();
            break;
          }
          case 48: {
            ProtocolVersionMinor = input.ReadUInt32();
            break;
          }
          case 56: {
            ProtocolVersionMajor = input.ReadUInt32();
            break;
          }
          case 64: {
            UserId = input.ReadSInt32();
            break;
          }
          case 72: {
            ServerTime = input.ReadSInt64();
            break;
          }
          case 80: {
            InactivityTimeout = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 18: {
            BaseTime = input.ReadString();
            break;
          }
          case 26: {
            SessionToken = input.ReadString();
            break;
          }
          case 34: {
            TextMessage = input.ReadString();
            break;
          }
          case 42: {
            RedirectUrl = input.ReadString();
            break;
          }
          case 48: {
            ProtocolVersionMinor = input.ReadUInt32();
            break;
          }
          case 56: {
            ProtocolVersionMajor = input.ReadUInt32();
            break;
          }
          case 64: {
            UserId = input.ReadSInt32();
            break;
          }
          case 72: {
            ServerTime = input.ReadSInt64();
            break;
          }
          case 80: {
            InactivityTimeout = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LogonResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ResultCode {
        /// <summary>
        ///// success codes
        /// User is logged in to the system.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_SUCCESS")] Success = 0,
        /// <summary>
        ///// failure codes (100+)
        /// General failure.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_FAILURE")] Failure = 101,
        /// <summary>
        /// One-time password is required for this user but it was not sent, repeat logon
        /// with one-time password.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_NO_ONETIME_PASSWORD")] NoOnetimePassword = 103,
        /// <summary>
        /// User password is expired, only change password operation is allowed.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_PASSWORD_EXPIRED")] PasswordExpired = 104,
        /// <summary>
        /// Failed because this user has a concurrent session that is
        /// not allowed for this application and drop was not requested.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_CONCURRENT_SESSION")] ConcurrentSession = 105,
        /// <summary>
        /// Client is redirected to a different server, new server is specified in redirectUrl.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_REDIRECTED")] Redirected = 106,
        /// <summary>
        /// The negotiation rules for LogonRoutineClient have been violated,
        /// e.g. user has specified several fields at once in one message.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_ROUTINE_ERROR")] RoutineError = 107,
        /// <summary>
        /// Access token is expired already.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_ACCESS_TOKEN_EXPIRED")] AccessTokenExpired = 108,
      }

    }
    #endregion

  }

  /// <summary>
  /// Message for multi-step logon which user should use in case if it is required to use encoded password.
  /// Multi-step logon sequence has the following steps:
  ///      1) Client initiates logon negotiation by sending LogonRoutineClient.logon_init message to the server.
  ///      2) Server sends one or more LogonRoutineServer.password_request messages (this step may repeat after step #3).
  ///      3) Client sends list of LogonRoutineClient.password_response back to the server.
  ///      4) Server optionally asks accept trader's agreement (LogonRoutineServer.trader_agreement_url).
  ///      5) Client responds with LogonRoutineClient.trader_agreement_accepted equal to True
  ///         if the user accepts agreement, False or LogonRoutineClient.abort_logon otherwise.
  ///      6) Server sends LogonRoutineServer.logon_result as the final message of the negotiation with the results.
  ///   Client may stop the negotiation by sending LogonRoutineClient.abort_logon message in response to any server
  ///      LogonRoutineServer.password_request or LogonRoutineServer.trader_agreement_url requests.
  /// NOTE: only one of fields has to be specified.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LogonRoutineClient : pb::IMessage<LogonRoutineClient>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogonRoutineClient> _parser = new pb::MessageParser<LogonRoutineClient>(() => new LogonRoutineClient());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LogonRoutineClient> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogonRoutineClient() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogonRoutineClient(LogonRoutineClient other) : this() {
      _hasBits0 = other._hasBits0;
      logonInit_ = other.logonInit_ != null ? other.logonInit_.Clone() : null;
      passwordResponses_ = other.passwordResponses_.Clone();
      traderAgreementAccepted_ = other.traderAgreementAccepted_;
      abortLogon_ = other.abortLogon_ != null ? other.abortLogon_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogonRoutineClient Clone() {
      return new LogonRoutineClient(this);
    }

    /// <summary>Field number for the "logon_init" field.</summary>
    public const int LogonInitFieldNumber = 1;
    private global::UserSession2.LogonInit logonInit_;
    /// <summary>
    /// Initiating of multi-step logon process by client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::UserSession2.LogonInit LogonInit {
      get { return logonInit_; }
      set {
        logonInit_ = value;
      }
    }

    /// <summary>Field number for the "password_responses" field.</summary>
    public const int PasswordResponsesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::UserSession2.PasswordResponse> _repeated_passwordResponses_codec
        = pb::FieldCodec.ForMessage(18, global::UserSession2.PasswordResponse.Parser);
    private readonly pbc::RepeatedField<global::UserSession2.PasswordResponse> passwordResponses_ = new pbc::RepeatedField<global::UserSession2.PasswordResponse>();
    /// <summary>
    /// List of passwords in response to request from server.
    /// The number of passwords in response should be equal to the number of passwords in request from server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::UserSession2.PasswordResponse> PasswordResponses {
      get { return passwordResponses_; }
    }

    /// <summary>Field number for the "trader_agreement_accepted" field.</summary>
    public const int TraderAgreementAcceptedFieldNumber = 3;
    private readonly static bool TraderAgreementAcceptedDefaultValue = false;

    private bool traderAgreementAccepted_;
    /// <summary>
    /// True means user has accepted the trader agreement.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TraderAgreementAccepted {
      get { if ((_hasBits0 & 1) != 0) { return traderAgreementAccepted_; } else { return TraderAgreementAcceptedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        traderAgreementAccepted_ = value;
      }
    }
    /// <summary>Gets whether the "trader_agreement_accepted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTraderAgreementAccepted {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "trader_agreement_accepted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTraderAgreementAccepted() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "abort_logon" field.</summary>
    public const int AbortLogonFieldNumber = 4;
    private global::UserSession2.AbortRoutine abortLogon_;
    /// <summary>
    /// Aborting of multi-step logon process by client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::UserSession2.AbortRoutine AbortLogon {
      get { return abortLogon_; }
      set {
        abortLogon_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LogonRoutineClient);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LogonRoutineClient other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LogonInit, other.LogonInit)) return false;
      if(!passwordResponses_.Equals(other.passwordResponses_)) return false;
      if (TraderAgreementAccepted != other.TraderAgreementAccepted) return false;
      if (!object.Equals(AbortLogon, other.AbortLogon)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (logonInit_ != null) hash ^= LogonInit.GetHashCode();
      hash ^= passwordResponses_.GetHashCode();
      if (HasTraderAgreementAccepted) hash ^= TraderAgreementAccepted.GetHashCode();
      if (abortLogon_ != null) hash ^= AbortLogon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (logonInit_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogonInit);
      }
      passwordResponses_.WriteTo(output, _repeated_passwordResponses_codec);
      if (HasTraderAgreementAccepted) {
        output.WriteRawTag(24);
        output.WriteBool(TraderAgreementAccepted);
      }
      if (abortLogon_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AbortLogon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (logonInit_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogonInit);
      }
      passwordResponses_.WriteTo(ref output, _repeated_passwordResponses_codec);
      if (HasTraderAgreementAccepted) {
        output.WriteRawTag(24);
        output.WriteBool(TraderAgreementAccepted);
      }
      if (abortLogon_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AbortLogon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (logonInit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogonInit);
      }
      size += passwordResponses_.CalculateSize(_repeated_passwordResponses_codec);
      if (HasTraderAgreementAccepted) {
        size += 1 + 1;
      }
      if (abortLogon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AbortLogon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LogonRoutineClient other) {
      if (other == null) {
        return;
      }
      if (other.logonInit_ != null) {
        if (logonInit_ == null) {
          LogonInit = new global::UserSession2.LogonInit();
        }
        LogonInit.MergeFrom(other.LogonInit);
      }
      passwordResponses_.Add(other.passwordResponses_);
      if (other.HasTraderAgreementAccepted) {
        TraderAgreementAccepted = other.TraderAgreementAccepted;
      }
      if (other.abortLogon_ != null) {
        if (abortLogon_ == null) {
          AbortLogon = new global::UserSession2.AbortRoutine();
        }
        AbortLogon.MergeFrom(other.AbortLogon);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (logonInit_ == null) {
              LogonInit = new global::UserSession2.LogonInit();
            }
            input.ReadMessage(LogonInit);
            break;
          }
          case 18: {
            passwordResponses_.AddEntriesFrom(input, _repeated_passwordResponses_codec);
            break;
          }
          case 24: {
            TraderAgreementAccepted = input.ReadBool();
            break;
          }
          case 34: {
            if (abortLogon_ == null) {
              AbortLogon = new global::UserSession2.AbortRoutine();
            }
            input.ReadMessage(AbortLogon);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (logonInit_ == null) {
              LogonInit = new global::UserSession2.LogonInit();
            }
            input.ReadMessage(LogonInit);
            break;
          }
          case 18: {
            passwordResponses_.AddEntriesFrom(ref input, _repeated_passwordResponses_codec);
            break;
          }
          case 24: {
            TraderAgreementAccepted = input.ReadBool();
            break;
          }
          case 34: {
            if (abortLogon_ == null) {
              AbortLogon = new global::UserSession2.AbortRoutine();
            }
            input.ReadMessage(AbortLogon);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response to the LogonRoutineClient message. Only one of fields is specified.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LogonRoutineServer : pb::IMessage<LogonRoutineServer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogonRoutineServer> _parser = new pb::MessageParser<LogonRoutineServer>(() => new LogonRoutineServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LogonRoutineServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogonRoutineServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogonRoutineServer(LogonRoutineServer other) : this() {
      logonResult_ = other.logonResult_ != null ? other.logonResult_.Clone() : null;
      passwordRequests_ = other.passwordRequests_.Clone();
      traderAgreementUrl_ = other.traderAgreementUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogonRoutineServer Clone() {
      return new LogonRoutineServer(this);
    }

    /// <summary>Field number for the "logon_result" field.</summary>
    public const int LogonResultFieldNumber = 1;
    private global::UserSession2.LogonResult logonResult_;
    /// <summary>
    /// Final message of the negotiation with the results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::UserSession2.LogonResult LogonResult {
      get { return logonResult_; }
      set {
        logonResult_ = value;
      }
    }

    /// <summary>Field number for the "password_requests" field.</summary>
    public const int PasswordRequestsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::UserSession2.PasswordRequest> _repeated_passwordRequests_codec
        = pb::FieldCodec.ForMessage(18, global::UserSession2.PasswordRequest.Parser);
    private readonly pbc::RepeatedField<global::UserSession2.PasswordRequest> passwordRequests_ = new pbc::RepeatedField<global::UserSession2.PasswordRequest>();
    /// <summary>
    /// List of requested passwords.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::UserSession2.PasswordRequest> PasswordRequests {
      get { return passwordRequests_; }
    }

    /// <summary>Field number for the "trader_agreement_url" field.</summary>
    public const int TraderAgreementUrlFieldNumber = 3;
    private readonly static string TraderAgreementUrlDefaultValue = "";

    private string traderAgreementUrl_;
    /// <summary>
    /// URL pointing to the location of help information for this version of agreement.
    /// Specified if user should accept trader's agreement in order to continue logon process.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TraderAgreementUrl {
      get { return traderAgreementUrl_ ?? TraderAgreementUrlDefaultValue; }
      set {
        traderAgreementUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "trader_agreement_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTraderAgreementUrl {
      get { return traderAgreementUrl_ != null; }
    }
    /// <summary>Clears the value of the "trader_agreement_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTraderAgreementUrl() {
      traderAgreementUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LogonRoutineServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LogonRoutineServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LogonResult, other.LogonResult)) return false;
      if(!passwordRequests_.Equals(other.passwordRequests_)) return false;
      if (TraderAgreementUrl != other.TraderAgreementUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (logonResult_ != null) hash ^= LogonResult.GetHashCode();
      hash ^= passwordRequests_.GetHashCode();
      if (HasTraderAgreementUrl) hash ^= TraderAgreementUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (logonResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogonResult);
      }
      passwordRequests_.WriteTo(output, _repeated_passwordRequests_codec);
      if (HasTraderAgreementUrl) {
        output.WriteRawTag(26);
        output.WriteString(TraderAgreementUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (logonResult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogonResult);
      }
      passwordRequests_.WriteTo(ref output, _repeated_passwordRequests_codec);
      if (HasTraderAgreementUrl) {
        output.WriteRawTag(26);
        output.WriteString(TraderAgreementUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (logonResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogonResult);
      }
      size += passwordRequests_.CalculateSize(_repeated_passwordRequests_codec);
      if (HasTraderAgreementUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TraderAgreementUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LogonRoutineServer other) {
      if (other == null) {
        return;
      }
      if (other.logonResult_ != null) {
        if (logonResult_ == null) {
          LogonResult = new global::UserSession2.LogonResult();
        }
        LogonResult.MergeFrom(other.LogonResult);
      }
      passwordRequests_.Add(other.passwordRequests_);
      if (other.HasTraderAgreementUrl) {
        TraderAgreementUrl = other.TraderAgreementUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (logonResult_ == null) {
              LogonResult = new global::UserSession2.LogonResult();
            }
            input.ReadMessage(LogonResult);
            break;
          }
          case 18: {
            passwordRequests_.AddEntriesFrom(input, _repeated_passwordRequests_codec);
            break;
          }
          case 26: {
            TraderAgreementUrl = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (logonResult_ == null) {
              LogonResult = new global::UserSession2.LogonResult();
            }
            input.ReadMessage(LogonResult);
            break;
          }
          case 18: {
            passwordRequests_.AddEntriesFrom(ref input, _repeated_passwordRequests_codec);
            break;
          }
          case 26: {
            TraderAgreementUrl = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message for multi-step password change which user should use in case if it is required to use encoded password.
  /// Multi-step password change sequence has the following steps:
  ///      1) Client initiates password change procedure by sending
  ///         PasswordChangeRoutineClient.init_password_change to the server.
  ///      2) Server sends one or more PasswordChangeRoutineServer.password_request messages
  ///         (this step may repeat after step #3).
  ///      3) Client sends list of PasswordChangeRoutineClient.password_response back to the server.
  ///      4) Server sends PasswordChangeRoutineServer.password_change_result
  ///         as the final message of the negotiation with the results.
  ///         Client may stop the negotiation by sending
  ///         PasswordChangeRoutineClient.abort_password_change message in response to any server
  ///         PasswordChangeRoutineServer.password_request message.
  /// NOTE: only one of fields has to be specified.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PasswordChangeRoutineClient : pb::IMessage<PasswordChangeRoutineClient>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PasswordChangeRoutineClient> _parser = new pb::MessageParser<PasswordChangeRoutineClient>(() => new PasswordChangeRoutineClient());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PasswordChangeRoutineClient> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PasswordChangeRoutineClient() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PasswordChangeRoutineClient(PasswordChangeRoutineClient other) : this() {
      _hasBits0 = other._hasBits0;
      initPasswordChange_ = other.initPasswordChange_;
      passwordResponses_ = other.passwordResponses_.Clone();
      abortPasswordChange_ = other.abortPasswordChange_ != null ? other.abortPasswordChange_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PasswordChangeRoutineClient Clone() {
      return new PasswordChangeRoutineClient(this);
    }

    /// <summary>Field number for the "init_password_change" field.</summary>
    public const int InitPasswordChangeFieldNumber = 1;
    private readonly static bool InitPasswordChangeDefaultValue = false;

    private bool initPasswordChange_;
    /// <summary>
    /// True means user has decided to initiate password changing procedure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InitPasswordChange {
      get { if ((_hasBits0 & 1) != 0) { return initPasswordChange_; } else { return InitPasswordChangeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        initPasswordChange_ = value;
      }
    }
    /// <summary>Gets whether the "init_password_change" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInitPasswordChange {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "init_password_change" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInitPasswordChange() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "password_responses" field.</summary>
    public const int PasswordResponsesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::UserSession2.PasswordResponse> _repeated_passwordResponses_codec
        = pb::FieldCodec.ForMessage(18, global::UserSession2.PasswordResponse.Parser);
    private readonly pbc::RepeatedField<global::UserSession2.PasswordResponse> passwordResponses_ = new pbc::RepeatedField<global::UserSession2.PasswordResponse>();
    /// <summary>
    /// List of passwords in response to request from server.
    /// The number of passwords in response should be equal to the number of passwords in request from server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::UserSession2.PasswordResponse> PasswordResponses {
      get { return passwordResponses_; }
    }

    /// <summary>Field number for the "abort_password_change" field.</summary>
    public const int AbortPasswordChangeFieldNumber = 3;
    private global::UserSession2.AbortRoutine abortPasswordChange_;
    /// <summary>
    /// Aborting of multi-step password change process by client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::UserSession2.AbortRoutine AbortPasswordChange {
      get { return abortPasswordChange_; }
      set {
        abortPasswordChange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PasswordChangeRoutineClient);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PasswordChangeRoutineClient other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InitPasswordChange != other.InitPasswordChange) return false;
      if(!passwordResponses_.Equals(other.passwordResponses_)) return false;
      if (!object.Equals(AbortPasswordChange, other.AbortPasswordChange)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInitPasswordChange) hash ^= InitPasswordChange.GetHashCode();
      hash ^= passwordResponses_.GetHashCode();
      if (abortPasswordChange_ != null) hash ^= AbortPasswordChange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInitPasswordChange) {
        output.WriteRawTag(8);
        output.WriteBool(InitPasswordChange);
      }
      passwordResponses_.WriteTo(output, _repeated_passwordResponses_codec);
      if (abortPasswordChange_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AbortPasswordChange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInitPasswordChange) {
        output.WriteRawTag(8);
        output.WriteBool(InitPasswordChange);
      }
      passwordResponses_.WriteTo(ref output, _repeated_passwordResponses_codec);
      if (abortPasswordChange_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AbortPasswordChange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInitPasswordChange) {
        size += 1 + 1;
      }
      size += passwordResponses_.CalculateSize(_repeated_passwordResponses_codec);
      if (abortPasswordChange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AbortPasswordChange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PasswordChangeRoutineClient other) {
      if (other == null) {
        return;
      }
      if (other.HasInitPasswordChange) {
        InitPasswordChange = other.InitPasswordChange;
      }
      passwordResponses_.Add(other.passwordResponses_);
      if (other.abortPasswordChange_ != null) {
        if (abortPasswordChange_ == null) {
          AbortPasswordChange = new global::UserSession2.AbortRoutine();
        }
        AbortPasswordChange.MergeFrom(other.AbortPasswordChange);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InitPasswordChange = input.ReadBool();
            break;
          }
          case 18: {
            passwordResponses_.AddEntriesFrom(input, _repeated_passwordResponses_codec);
            break;
          }
          case 26: {
            if (abortPasswordChange_ == null) {
              AbortPasswordChange = new global::UserSession2.AbortRoutine();
            }
            input.ReadMessage(AbortPasswordChange);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InitPasswordChange = input.ReadBool();
            break;
          }
          case 18: {
            passwordResponses_.AddEntriesFrom(ref input, _repeated_passwordResponses_codec);
            break;
          }
          case 26: {
            if (abortPasswordChange_ == null) {
              AbortPasswordChange = new global::UserSession2.AbortRoutine();
            }
            input.ReadMessage(AbortPasswordChange);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response to the PasswordChangeRoutineClient message. Only one of fields is specified.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PasswordChangeRoutineServer : pb::IMessage<PasswordChangeRoutineServer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PasswordChangeRoutineServer> _parser = new pb::MessageParser<PasswordChangeRoutineServer>(() => new PasswordChangeRoutineServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PasswordChangeRoutineServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PasswordChangeRoutineServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PasswordChangeRoutineServer(PasswordChangeRoutineServer other) : this() {
      passwordRequests_ = other.passwordRequests_.Clone();
      passwordChangeResult_ = other.passwordChangeResult_ != null ? other.passwordChangeResult_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PasswordChangeRoutineServer Clone() {
      return new PasswordChangeRoutineServer(this);
    }

    /// <summary>Field number for the "password_requests" field.</summary>
    public const int PasswordRequestsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::UserSession2.PasswordRequest> _repeated_passwordRequests_codec
        = pb::FieldCodec.ForMessage(10, global::UserSession2.PasswordRequest.Parser);
    private readonly pbc::RepeatedField<global::UserSession2.PasswordRequest> passwordRequests_ = new pbc::RepeatedField<global::UserSession2.PasswordRequest>();
    /// <summary>
    /// List of requested passwords.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::UserSession2.PasswordRequest> PasswordRequests {
      get { return passwordRequests_; }
    }

    /// <summary>Field number for the "password_change_result" field.</summary>
    public const int PasswordChangeResultFieldNumber = 2;
    private global::UserSession2.PasswordChangeResult passwordChangeResult_;
    /// <summary>
    /// Final message of the negotiation with the results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::UserSession2.PasswordChangeResult PasswordChangeResult {
      get { return passwordChangeResult_; }
      set {
        passwordChangeResult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PasswordChangeRoutineServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PasswordChangeRoutineServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!passwordRequests_.Equals(other.passwordRequests_)) return false;
      if (!object.Equals(PasswordChangeResult, other.PasswordChangeResult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= passwordRequests_.GetHashCode();
      if (passwordChangeResult_ != null) hash ^= PasswordChangeResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      passwordRequests_.WriteTo(output, _repeated_passwordRequests_codec);
      if (passwordChangeResult_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PasswordChangeResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      passwordRequests_.WriteTo(ref output, _repeated_passwordRequests_codec);
      if (passwordChangeResult_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PasswordChangeResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += passwordRequests_.CalculateSize(_repeated_passwordRequests_codec);
      if (passwordChangeResult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PasswordChangeResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PasswordChangeRoutineServer other) {
      if (other == null) {
        return;
      }
      passwordRequests_.Add(other.passwordRequests_);
      if (other.passwordChangeResult_ != null) {
        if (passwordChangeResult_ == null) {
          PasswordChangeResult = new global::UserSession2.PasswordChangeResult();
        }
        PasswordChangeResult.MergeFrom(other.PasswordChangeResult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            passwordRequests_.AddEntriesFrom(input, _repeated_passwordRequests_codec);
            break;
          }
          case 18: {
            if (passwordChangeResult_ == null) {
              PasswordChangeResult = new global::UserSession2.PasswordChangeResult();
            }
            input.ReadMessage(PasswordChangeResult);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            passwordRequests_.AddEntriesFrom(ref input, _repeated_passwordRequests_codec);
            break;
          }
          case 18: {
            if (passwordChangeResult_ == null) {
              PasswordChangeResult = new global::UserSession2.PasswordChangeResult();
            }
            input.ReadMessage(PasswordChangeResult);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This message indicates that user has decided to abort the logon or password change processes.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AbortRoutine : pb::IMessage<AbortRoutine>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AbortRoutine> _parser = new pb::MessageParser<AbortRoutine>(() => new AbortRoutine());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AbortRoutine> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AbortRoutine() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AbortRoutine(AbortRoutine other) : this() {
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AbortRoutine Clone() {
      return new AbortRoutine(this);
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 1;
    private readonly static string CommentDefaultValue = "";

    private string comment_;
    /// <summary>
    /// Reason of logon or password change routine abort.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_ ?? CommentDefaultValue; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "comment" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasComment {
      get { return comment_ != null; }
    }
    /// <summary>Clears the value of the "comment" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearComment() {
      comment_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AbortRoutine);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AbortRoutine other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasComment) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasComment) {
        output.WriteRawTag(10);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasComment) {
        output.WriteRawTag(10);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasComment) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AbortRoutine other) {
      if (other == null) {
        return;
      }
      if (other.HasComment) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Initiating of multi-step logon process by client. See description of fields in Logon message.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LogonInit : pb::IMessage<LogonInit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogonInit> _parser = new pb::MessageParser<LogonInit>(() => new LogonInit());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LogonInit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogonInit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogonInit(LogonInit other) : this() {
      _hasBits0 = other._hasBits0;
      userName_ = other.userName_;
      privateLabel_ = other.privateLabel_;
      clientAppId_ = other.clientAppId_;
      clientVersion_ = other.clientVersion_;
      dropConcurrentSession_ = other.dropConcurrentSession_;
      maxCollapsingLevel_ = other.maxCollapsingLevel_;
      protocolVersionMinor_ = other.protocolVersionMinor_;
      protocolVersionMajor_ = other.protocolVersionMajor_;
      sessionSettings_ = other.sessionSettings_.Clone();
      marketDataBandwidth_ = other.marketDataBandwidth_;
      dialectId_ = other.dialectId_;
      fingerprint_ = other.fingerprint_;
      operatingSystem_ = other.operatingSystem_;
      browser_ = other.browser_;
      deviceModel_ = other.deviceModel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogonInit Clone() {
      return new LogonInit(this);
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 1;
    private readonly static string UserNameDefaultValue = "";

    private string userName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserName {
      get { return userName_ ?? UserNameDefaultValue; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserName {
      get { return userName_ != null; }
    }
    /// <summary>Clears the value of the "user_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserName() {
      userName_ = null;
    }

    /// <summary>Field number for the "private_label" field.</summary>
    public const int PrivateLabelFieldNumber = 2;
    private readonly static string PrivateLabelDefaultValue = "";

    private string privateLabel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PrivateLabel {
      get { return privateLabel_ ?? PrivateLabelDefaultValue; }
      set {
        privateLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "private_label" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrivateLabel {
      get { return privateLabel_ != null; }
    }
    /// <summary>Clears the value of the "private_label" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrivateLabel() {
      privateLabel_ = null;
    }

    /// <summary>Field number for the "client_app_id" field.</summary>
    public const int ClientAppIdFieldNumber = 3;
    private readonly static string ClientAppIdDefaultValue = "";

    private string clientAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientAppId {
      get { return clientAppId_ ?? ClientAppIdDefaultValue; }
      set {
        clientAppId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "client_app_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientAppId {
      get { return clientAppId_ != null; }
    }
    /// <summary>Clears the value of the "client_app_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientAppId() {
      clientAppId_ = null;
    }

    /// <summary>Field number for the "client_version" field.</summary>
    public const int ClientVersionFieldNumber = 4;
    private readonly static string ClientVersionDefaultValue = "";

    private string clientVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientVersion {
      get { return clientVersion_ ?? ClientVersionDefaultValue; }
      set {
        clientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "client_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientVersion {
      get { return clientVersion_ != null; }
    }
    /// <summary>Clears the value of the "client_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientVersion() {
      clientVersion_ = null;
    }

    /// <summary>Field number for the "drop_concurrent_session" field.</summary>
    public const int DropConcurrentSessionFieldNumber = 5;
    private readonly static bool DropConcurrentSessionDefaultValue = false;

    private bool dropConcurrentSession_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DropConcurrentSession {
      get { if ((_hasBits0 & 1) != 0) { return dropConcurrentSession_; } else { return DropConcurrentSessionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        dropConcurrentSession_ = value;
      }
    }
    /// <summary>Gets whether the "drop_concurrent_session" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDropConcurrentSession {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "drop_concurrent_session" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDropConcurrentSession() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "max_collapsing_level" field.</summary>
    public const int MaxCollapsingLevelFieldNumber = 6;
    private readonly static uint MaxCollapsingLevelDefaultValue = 0;

    private uint maxCollapsingLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxCollapsingLevel {
      get { if ((_hasBits0 & 2) != 0) { return maxCollapsingLevel_; } else { return MaxCollapsingLevelDefaultValue; } }
      set {
        _hasBits0 |= 2;
        maxCollapsingLevel_ = value;
      }
    }
    /// <summary>Gets whether the "max_collapsing_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxCollapsingLevel {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "max_collapsing_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxCollapsingLevel() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "protocol_version_minor" field.</summary>
    public const int ProtocolVersionMinorFieldNumber = 7;
    private readonly static uint ProtocolVersionMinorDefaultValue = 0;

    private uint protocolVersionMinor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProtocolVersionMinor {
      get { if ((_hasBits0 & 4) != 0) { return protocolVersionMinor_; } else { return ProtocolVersionMinorDefaultValue; } }
      set {
        _hasBits0 |= 4;
        protocolVersionMinor_ = value;
      }
    }
    /// <summary>Gets whether the "protocol_version_minor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProtocolVersionMinor {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "protocol_version_minor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProtocolVersionMinor() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "protocol_version_major" field.</summary>
    public const int ProtocolVersionMajorFieldNumber = 8;
    private readonly static uint ProtocolVersionMajorDefaultValue = 0;

    private uint protocolVersionMajor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProtocolVersionMajor {
      get { if ((_hasBits0 & 8) != 0) { return protocolVersionMajor_; } else { return ProtocolVersionMajorDefaultValue; } }
      set {
        _hasBits0 |= 8;
        protocolVersionMajor_ = value;
      }
    }
    /// <summary>Gets whether the "protocol_version_major" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProtocolVersionMajor {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "protocol_version_major" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProtocolVersionMajor() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "session_settings" field.</summary>
    public const int SessionSettingsFieldNumber = 9;
    private static readonly pb::FieldCodec<uint> _repeated_sessionSettings_codec
        = pb::FieldCodec.ForUInt32(72);
    private readonly pbc::RepeatedField<uint> sessionSettings_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> SessionSettings {
      get { return sessionSettings_; }
    }

    /// <summary>Field number for the "market_data_bandwidth" field.</summary>
    public const int MarketDataBandwidthFieldNumber = 10;
    private readonly static uint MarketDataBandwidthDefaultValue = 0;

    private uint marketDataBandwidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MarketDataBandwidth {
      get { if ((_hasBits0 & 16) != 0) { return marketDataBandwidth_; } else { return MarketDataBandwidthDefaultValue; } }
      set {
        _hasBits0 |= 16;
        marketDataBandwidth_ = value;
      }
    }
    /// <summary>Gets whether the "market_data_bandwidth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMarketDataBandwidth {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "market_data_bandwidth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMarketDataBandwidth() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "dialect_id" field.</summary>
    public const int DialectIdFieldNumber = 11;
    private readonly static string DialectIdDefaultValue = "";

    private string dialectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DialectId {
      get { return dialectId_ ?? DialectIdDefaultValue; }
      set {
        dialectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dialect_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDialectId {
      get { return dialectId_ != null; }
    }
    /// <summary>Clears the value of the "dialect_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDialectId() {
      dialectId_ = null;
    }

    /// <summary>Field number for the "fingerprint" field.</summary>
    public const int FingerprintFieldNumber = 12;
    private readonly static string FingerprintDefaultValue = "";

    private string fingerprint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Fingerprint {
      get { return fingerprint_ ?? FingerprintDefaultValue; }
      set {
        fingerprint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "fingerprint" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFingerprint {
      get { return fingerprint_ != null; }
    }
    /// <summary>Clears the value of the "fingerprint" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFingerprint() {
      fingerprint_ = null;
    }

    /// <summary>Field number for the "operating_system" field.</summary>
    public const int OperatingSystemFieldNumber = 13;
    private readonly static string OperatingSystemDefaultValue = "";

    private string operatingSystem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OperatingSystem {
      get { return operatingSystem_ ?? OperatingSystemDefaultValue; }
      set {
        operatingSystem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "operating_system" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOperatingSystem {
      get { return operatingSystem_ != null; }
    }
    /// <summary>Clears the value of the "operating_system" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOperatingSystem() {
      operatingSystem_ = null;
    }

    /// <summary>Field number for the "browser" field.</summary>
    public const int BrowserFieldNumber = 14;
    private readonly static string BrowserDefaultValue = "";

    private string browser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Browser {
      get { return browser_ ?? BrowserDefaultValue; }
      set {
        browser_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "browser" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBrowser {
      get { return browser_ != null; }
    }
    /// <summary>Clears the value of the "browser" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBrowser() {
      browser_ = null;
    }

    /// <summary>Field number for the "device_model" field.</summary>
    public const int DeviceModelFieldNumber = 15;
    private readonly static string DeviceModelDefaultValue = "";

    private string deviceModel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceModel {
      get { return deviceModel_ ?? DeviceModelDefaultValue; }
      set {
        deviceModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "device_model" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceModel {
      get { return deviceModel_ != null; }
    }
    /// <summary>Clears the value of the "device_model" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceModel() {
      deviceModel_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LogonInit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LogonInit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (PrivateLabel != other.PrivateLabel) return false;
      if (ClientAppId != other.ClientAppId) return false;
      if (ClientVersion != other.ClientVersion) return false;
      if (DropConcurrentSession != other.DropConcurrentSession) return false;
      if (MaxCollapsingLevel != other.MaxCollapsingLevel) return false;
      if (ProtocolVersionMinor != other.ProtocolVersionMinor) return false;
      if (ProtocolVersionMajor != other.ProtocolVersionMajor) return false;
      if(!sessionSettings_.Equals(other.sessionSettings_)) return false;
      if (MarketDataBandwidth != other.MarketDataBandwidth) return false;
      if (DialectId != other.DialectId) return false;
      if (Fingerprint != other.Fingerprint) return false;
      if (OperatingSystem != other.OperatingSystem) return false;
      if (Browser != other.Browser) return false;
      if (DeviceModel != other.DeviceModel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUserName) hash ^= UserName.GetHashCode();
      if (HasPrivateLabel) hash ^= PrivateLabel.GetHashCode();
      if (HasClientAppId) hash ^= ClientAppId.GetHashCode();
      if (HasClientVersion) hash ^= ClientVersion.GetHashCode();
      if (HasDropConcurrentSession) hash ^= DropConcurrentSession.GetHashCode();
      if (HasMaxCollapsingLevel) hash ^= MaxCollapsingLevel.GetHashCode();
      if (HasProtocolVersionMinor) hash ^= ProtocolVersionMinor.GetHashCode();
      if (HasProtocolVersionMajor) hash ^= ProtocolVersionMajor.GetHashCode();
      hash ^= sessionSettings_.GetHashCode();
      if (HasMarketDataBandwidth) hash ^= MarketDataBandwidth.GetHashCode();
      if (HasDialectId) hash ^= DialectId.GetHashCode();
      if (HasFingerprint) hash ^= Fingerprint.GetHashCode();
      if (HasOperatingSystem) hash ^= OperatingSystem.GetHashCode();
      if (HasBrowser) hash ^= Browser.GetHashCode();
      if (HasDeviceModel) hash ^= DeviceModel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUserName) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (HasPrivateLabel) {
        output.WriteRawTag(18);
        output.WriteString(PrivateLabel);
      }
      if (HasClientAppId) {
        output.WriteRawTag(26);
        output.WriteString(ClientAppId);
      }
      if (HasClientVersion) {
        output.WriteRawTag(34);
        output.WriteString(ClientVersion);
      }
      if (HasDropConcurrentSession) {
        output.WriteRawTag(40);
        output.WriteBool(DropConcurrentSession);
      }
      if (HasMaxCollapsingLevel) {
        output.WriteRawTag(48);
        output.WriteUInt32(MaxCollapsingLevel);
      }
      if (HasProtocolVersionMinor) {
        output.WriteRawTag(56);
        output.WriteUInt32(ProtocolVersionMinor);
      }
      if (HasProtocolVersionMajor) {
        output.WriteRawTag(64);
        output.WriteUInt32(ProtocolVersionMajor);
      }
      sessionSettings_.WriteTo(output, _repeated_sessionSettings_codec);
      if (HasMarketDataBandwidth) {
        output.WriteRawTag(80);
        output.WriteUInt32(MarketDataBandwidth);
      }
      if (HasDialectId) {
        output.WriteRawTag(90);
        output.WriteString(DialectId);
      }
      if (HasFingerprint) {
        output.WriteRawTag(98);
        output.WriteString(Fingerprint);
      }
      if (HasOperatingSystem) {
        output.WriteRawTag(106);
        output.WriteString(OperatingSystem);
      }
      if (HasBrowser) {
        output.WriteRawTag(114);
        output.WriteString(Browser);
      }
      if (HasDeviceModel) {
        output.WriteRawTag(122);
        output.WriteString(DeviceModel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUserName) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (HasPrivateLabel) {
        output.WriteRawTag(18);
        output.WriteString(PrivateLabel);
      }
      if (HasClientAppId) {
        output.WriteRawTag(26);
        output.WriteString(ClientAppId);
      }
      if (HasClientVersion) {
        output.WriteRawTag(34);
        output.WriteString(ClientVersion);
      }
      if (HasDropConcurrentSession) {
        output.WriteRawTag(40);
        output.WriteBool(DropConcurrentSession);
      }
      if (HasMaxCollapsingLevel) {
        output.WriteRawTag(48);
        output.WriteUInt32(MaxCollapsingLevel);
      }
      if (HasProtocolVersionMinor) {
        output.WriteRawTag(56);
        output.WriteUInt32(ProtocolVersionMinor);
      }
      if (HasProtocolVersionMajor) {
        output.WriteRawTag(64);
        output.WriteUInt32(ProtocolVersionMajor);
      }
      sessionSettings_.WriteTo(ref output, _repeated_sessionSettings_codec);
      if (HasMarketDataBandwidth) {
        output.WriteRawTag(80);
        output.WriteUInt32(MarketDataBandwidth);
      }
      if (HasDialectId) {
        output.WriteRawTag(90);
        output.WriteString(DialectId);
      }
      if (HasFingerprint) {
        output.WriteRawTag(98);
        output.WriteString(Fingerprint);
      }
      if (HasOperatingSystem) {
        output.WriteRawTag(106);
        output.WriteString(OperatingSystem);
      }
      if (HasBrowser) {
        output.WriteRawTag(114);
        output.WriteString(Browser);
      }
      if (HasDeviceModel) {
        output.WriteRawTag(122);
        output.WriteString(DeviceModel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUserName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (HasPrivateLabel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrivateLabel);
      }
      if (HasClientAppId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientAppId);
      }
      if (HasClientVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientVersion);
      }
      if (HasDropConcurrentSession) {
        size += 1 + 1;
      }
      if (HasMaxCollapsingLevel) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxCollapsingLevel);
      }
      if (HasProtocolVersionMinor) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersionMinor);
      }
      if (HasProtocolVersionMajor) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersionMajor);
      }
      size += sessionSettings_.CalculateSize(_repeated_sessionSettings_codec);
      if (HasMarketDataBandwidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MarketDataBandwidth);
      }
      if (HasDialectId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DialectId);
      }
      if (HasFingerprint) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fingerprint);
      }
      if (HasOperatingSystem) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperatingSystem);
      }
      if (HasBrowser) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Browser);
      }
      if (HasDeviceModel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceModel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LogonInit other) {
      if (other == null) {
        return;
      }
      if (other.HasUserName) {
        UserName = other.UserName;
      }
      if (other.HasPrivateLabel) {
        PrivateLabel = other.PrivateLabel;
      }
      if (other.HasClientAppId) {
        ClientAppId = other.ClientAppId;
      }
      if (other.HasClientVersion) {
        ClientVersion = other.ClientVersion;
      }
      if (other.HasDropConcurrentSession) {
        DropConcurrentSession = other.DropConcurrentSession;
      }
      if (other.HasMaxCollapsingLevel) {
        MaxCollapsingLevel = other.MaxCollapsingLevel;
      }
      if (other.HasProtocolVersionMinor) {
        ProtocolVersionMinor = other.ProtocolVersionMinor;
      }
      if (other.HasProtocolVersionMajor) {
        ProtocolVersionMajor = other.ProtocolVersionMajor;
      }
      sessionSettings_.Add(other.sessionSettings_);
      if (other.HasMarketDataBandwidth) {
        MarketDataBandwidth = other.MarketDataBandwidth;
      }
      if (other.HasDialectId) {
        DialectId = other.DialectId;
      }
      if (other.HasFingerprint) {
        Fingerprint = other.Fingerprint;
      }
      if (other.HasOperatingSystem) {
        OperatingSystem = other.OperatingSystem;
      }
      if (other.HasBrowser) {
        Browser = other.Browser;
      }
      if (other.HasDeviceModel) {
        DeviceModel = other.DeviceModel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            PrivateLabel = input.ReadString();
            break;
          }
          case 26: {
            ClientAppId = input.ReadString();
            break;
          }
          case 34: {
            ClientVersion = input.ReadString();
            break;
          }
          case 40: {
            DropConcurrentSession = input.ReadBool();
            break;
          }
          case 48: {
            MaxCollapsingLevel = input.ReadUInt32();
            break;
          }
          case 56: {
            ProtocolVersionMinor = input.ReadUInt32();
            break;
          }
          case 64: {
            ProtocolVersionMajor = input.ReadUInt32();
            break;
          }
          case 74:
          case 72: {
            sessionSettings_.AddEntriesFrom(input, _repeated_sessionSettings_codec);
            break;
          }
          case 80: {
            MarketDataBandwidth = input.ReadUInt32();
            break;
          }
          case 90: {
            DialectId = input.ReadString();
            break;
          }
          case 98: {
            Fingerprint = input.ReadString();
            break;
          }
          case 106: {
            OperatingSystem = input.ReadString();
            break;
          }
          case 114: {
            Browser = input.ReadString();
            break;
          }
          case 122: {
            DeviceModel = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            PrivateLabel = input.ReadString();
            break;
          }
          case 26: {
            ClientAppId = input.ReadString();
            break;
          }
          case 34: {
            ClientVersion = input.ReadString();
            break;
          }
          case 40: {
            DropConcurrentSession = input.ReadBool();
            break;
          }
          case 48: {
            MaxCollapsingLevel = input.ReadUInt32();
            break;
          }
          case 56: {
            ProtocolVersionMinor = input.ReadUInt32();
            break;
          }
          case 64: {
            ProtocolVersionMajor = input.ReadUInt32();
            break;
          }
          case 74:
          case 72: {
            sessionSettings_.AddEntriesFrom(ref input, _repeated_sessionSettings_codec);
            break;
          }
          case 80: {
            MarketDataBandwidth = input.ReadUInt32();
            break;
          }
          case 90: {
            DialectId = input.ReadString();
            break;
          }
          case 98: {
            Fingerprint = input.ReadString();
            break;
          }
          case 106: {
            OperatingSystem = input.ReadString();
            break;
          }
          case 114: {
            Browser = input.ReadString();
            break;
          }
          case 122: {
            DeviceModel = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Parameters of requesting password from user.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PasswordRequest : pb::IMessage<PasswordRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PasswordRequest> _parser = new pb::MessageParser<PasswordRequest>(() => new PasswordRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PasswordRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PasswordRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PasswordRequest(PasswordRequest other) : this() {
      _hasBits0 = other._hasBits0;
      requestId_ = other.requestId_;
      passwordType_ = other.passwordType_;
      userPromptType_ = other.userPromptType_;
      userPromptTypeAlt_ = other.userPromptTypeAlt_;
      userPrompt_ = other.userPrompt_;
      encodings_ = other.encodings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PasswordRequest Clone() {
      return new PasswordRequest(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static uint RequestIdDefaultValue = 0;

    private uint requestId_;
    /// <summary>
    /// ID of a request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        requestId_ = value;
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "password_type" field.</summary>
    public const int PasswordTypeFieldNumber = 2;
    private readonly static uint PasswordTypeDefaultValue = 0;

    private uint passwordType_;
    /// <summary>
    /// Type of password which server requests from the user.
    /// This field is associated with PasswordType enum type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PasswordType {
      get { if ((_hasBits0 & 2) != 0) { return passwordType_; } else { return PasswordTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        passwordType_ = value;
      }
    }
    /// <summary>Gets whether the "password_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPasswordType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "password_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPasswordType() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "user_prompt_type" field.</summary>
    public const int UserPromptTypeFieldNumber = 3;
    private readonly static string UserPromptTypeDefaultValue = "";

    private string userPromptType_;
    /// <summary>
    /// Commonly understood code that can be used to show an additional localized prompt for certain password types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserPromptType {
      get { return userPromptType_ ?? UserPromptTypeDefaultValue; }
      set {
        userPromptType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_prompt_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserPromptType {
      get { return userPromptType_ != null; }
    }
    /// <summary>Clears the value of the "user_prompt_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserPromptType() {
      userPromptType_ = null;
    }

    /// <summary>Field number for the "user_prompt_type_alt" field.</summary>
    public const int UserPromptTypeAltFieldNumber = 4;
    private readonly static string UserPromptTypeAltDefaultValue = "";

    private string userPromptTypeAlt_;
    /// <summary>
    /// Alternate English text for clients which do not recognize user_prompt_type.
    /// This text can be displayed as-is to the user.
    /// NOTE: user_prompt_type and user_prompt_type_alt are a pair (so either none or both are provided).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserPromptTypeAlt {
      get { return userPromptTypeAlt_ ?? UserPromptTypeAltDefaultValue; }
      set {
        userPromptTypeAlt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_prompt_type_alt" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserPromptTypeAlt {
      get { return userPromptTypeAlt_ != null; }
    }
    /// <summary>Clears the value of the "user_prompt_type_alt" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserPromptTypeAlt() {
      userPromptTypeAlt_ = null;
    }

    /// <summary>Field number for the "user_prompt" field.</summary>
    public const int UserPromptFieldNumber = 5;
    private readonly static string UserPromptDefaultValue = "";

    private string userPrompt_;
    /// <summary>
    /// Text that should be displayed to the user as-is along with the localized prompt implied by user_prompt_type.
    /// If user_prompt_type_alt is used instead, this text should be displayed after it.
    /// user_prompt will only be provided if user_prompt_type and user_prompt_type_alt are provided,
    /// but it is optional even then.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserPrompt {
      get { return userPrompt_ ?? UserPromptDefaultValue; }
      set {
        userPrompt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_prompt" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserPrompt {
      get { return userPrompt_ != null; }
    }
    /// <summary>Clears the value of the "user_prompt" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserPrompt() {
      userPrompt_ = null;
    }

    /// <summary>Field number for the "encodings" field.</summary>
    public const int EncodingsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::UserSession2.Encoding> _repeated_encodings_codec
        = pb::FieldCodec.ForMessage(50, global::UserSession2.Encoding.Parser);
    private readonly pbc::RepeatedField<global::UserSession2.Encoding> encodings_ = new pbc::RepeatedField<global::UserSession2.Encoding>();
    /// <summary>
    /// Set of supported encodings for this request.
    /// Client should choose the encoding with highest priority from among those it implements.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::UserSession2.Encoding> Encodings {
      get { return encodings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PasswordRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PasswordRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (PasswordType != other.PasswordType) return false;
      if (UserPromptType != other.UserPromptType) return false;
      if (UserPromptTypeAlt != other.UserPromptTypeAlt) return false;
      if (UserPrompt != other.UserPrompt) return false;
      if(!encodings_.Equals(other.encodings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (HasPasswordType) hash ^= PasswordType.GetHashCode();
      if (HasUserPromptType) hash ^= UserPromptType.GetHashCode();
      if (HasUserPromptTypeAlt) hash ^= UserPromptTypeAlt.GetHashCode();
      if (HasUserPrompt) hash ^= UserPrompt.GetHashCode();
      hash ^= encodings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (HasPasswordType) {
        output.WriteRawTag(16);
        output.WriteUInt32(PasswordType);
      }
      if (HasUserPromptType) {
        output.WriteRawTag(26);
        output.WriteString(UserPromptType);
      }
      if (HasUserPromptTypeAlt) {
        output.WriteRawTag(34);
        output.WriteString(UserPromptTypeAlt);
      }
      if (HasUserPrompt) {
        output.WriteRawTag(42);
        output.WriteString(UserPrompt);
      }
      encodings_.WriteTo(output, _repeated_encodings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (HasPasswordType) {
        output.WriteRawTag(16);
        output.WriteUInt32(PasswordType);
      }
      if (HasUserPromptType) {
        output.WriteRawTag(26);
        output.WriteString(UserPromptType);
      }
      if (HasUserPromptTypeAlt) {
        output.WriteRawTag(34);
        output.WriteString(UserPromptTypeAlt);
      }
      if (HasUserPrompt) {
        output.WriteRawTag(42);
        output.WriteString(UserPrompt);
      }
      encodings_.WriteTo(ref output, _repeated_encodings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (HasPasswordType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PasswordType);
      }
      if (HasUserPromptType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserPromptType);
      }
      if (HasUserPromptTypeAlt) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserPromptTypeAlt);
      }
      if (HasUserPrompt) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserPrompt);
      }
      size += encodings_.CalculateSize(_repeated_encodings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PasswordRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.HasPasswordType) {
        PasswordType = other.PasswordType;
      }
      if (other.HasUserPromptType) {
        UserPromptType = other.UserPromptType;
      }
      if (other.HasUserPromptTypeAlt) {
        UserPromptTypeAlt = other.UserPromptTypeAlt;
      }
      if (other.HasUserPrompt) {
        UserPrompt = other.UserPrompt;
      }
      encodings_.Add(other.encodings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            PasswordType = input.ReadUInt32();
            break;
          }
          case 26: {
            UserPromptType = input.ReadString();
            break;
          }
          case 34: {
            UserPromptTypeAlt = input.ReadString();
            break;
          }
          case 42: {
            UserPrompt = input.ReadString();
            break;
          }
          case 50: {
            encodings_.AddEntriesFrom(input, _repeated_encodings_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 16: {
            PasswordType = input.ReadUInt32();
            break;
          }
          case 26: {
            UserPromptType = input.ReadString();
            break;
          }
          case 34: {
            UserPromptTypeAlt = input.ReadString();
            break;
          }
          case 42: {
            UserPrompt = input.ReadString();
            break;
          }
          case 50: {
            encodings_.AddEntriesFrom(ref input, _repeated_encodings_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PasswordRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum PasswordType {
        /// <summary>
        /// Currently used password.
        /// </summary>
        [pbr::OriginalName("PASSWORD_TYPE_STATIC")] Static = 1,
        /// <summary>
        /// One-time password.
        /// </summary>
        [pbr::OriginalName("PASSWORD_TYPE_ONE_TIME")] OneTime = 2,
        /// <summary>
        /// New password that user wants to use. Can be specified only in result of PasswordChangeRoutineClient.
        /// </summary>
        [pbr::OriginalName("PASSWORD_TYPE_NEW_STATIC")] NewStatic = 3,
        /// <summary>
        /// Currently used password and new password that user wants to use.
        /// Can be specified only in result of PasswordChangeRoutineClient.
        /// </summary>
        [pbr::OriginalName("PASSWORD_TYPE_CUR_AND_NEW_STATIC")] CurAndNewStatic = 4,
        /// <summary>
        /// Non-password request with question e.g. "What is your favorite pet?".
        /// </summary>
        [pbr::OriginalName("PASSWORD_TYPE_TEXT")] Text = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// Response to the PasswordRequest message.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PasswordResponse : pb::IMessage<PasswordResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PasswordResponse> _parser = new pb::MessageParser<PasswordResponse>(() => new PasswordResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PasswordResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PasswordResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PasswordResponse(PasswordResponse other) : this() {
      _hasBits0 = other._hasBits0;
      requestId_ = other.requestId_;
      encodingType_ = other.encodingType_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PasswordResponse Clone() {
      return new PasswordResponse(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private readonly static uint RequestIdDefaultValue = 0;

    private uint requestId_;
    /// <summary>
    /// ID of corresponding password request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RequestId {
      get { if ((_hasBits0 & 1) != 0) { return requestId_; } else { return RequestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        requestId_ = value;
      }
    }
    /// <summary>Gets whether the "request_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRequestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "request_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "encoding_type" field.</summary>
    public const int EncodingTypeFieldNumber = 2;
    private readonly static string EncodingTypeDefaultValue = "";

    private string encodingType_;
    /// <summary>
    /// Commonly understood string that identifies the password encoding method.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EncodingType {
      get { return encodingType_ ?? EncodingTypeDefaultValue; }
      set {
        encodingType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "encoding_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEncodingType {
      get { return encodingType_ != null; }
    }
    /// <summary>Clears the value of the "encoding_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEncodingType() {
      encodingType_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private readonly static string PasswordDefaultValue = "";

    private string password_;
    /// <summary>
    /// User's password encoded with specified encoding method.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Password {
      get { return password_ ?? PasswordDefaultValue; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPassword() {
      password_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PasswordResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PasswordResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (EncodingType != other.EncodingType) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasRequestId) hash ^= RequestId.GetHashCode();
      if (HasEncodingType) hash ^= EncodingType.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (HasEncodingType) {
        output.WriteRawTag(18);
        output.WriteString(EncodingType);
      }
      if (HasPassword) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasRequestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(RequestId);
      }
      if (HasEncodingType) {
        output.WriteRawTag(18);
        output.WriteString(EncodingType);
      }
      if (HasPassword) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasRequestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequestId);
      }
      if (HasEncodingType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EncodingType);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PasswordResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasRequestId) {
        RequestId = other.RequestId;
      }
      if (other.HasEncodingType) {
        EncodingType = other.EncodingType;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            EncodingType = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RequestId = input.ReadUInt32();
            break;
          }
          case 18: {
            EncodingType = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Description of the encoding method.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Encoding : pb::IMessage<Encoding>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Encoding> _parser = new pb::MessageParser<Encoding>(() => new Encoding());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Encoding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Encoding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Encoding(Encoding other) : this() {
      _hasBits0 = other._hasBits0;
      encodingType_ = other.encodingType_;
      priorityRank_ = other.priorityRank_;
      encodingParameters_ = other.encodingParameters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Encoding Clone() {
      return new Encoding(this);
    }

    /// <summary>Field number for the "encoding_type" field.</summary>
    public const int EncodingTypeFieldNumber = 1;
    private readonly static string EncodingTypeDefaultValue = "";

    private string encodingType_;
    /// <summary>
    /// Commonly understood string that identifies the encoding method.
    /// The following encodings are available: "none", "ds3_rsa", "isprint_e2ee".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EncodingType {
      get { return encodingType_ ?? EncodingTypeDefaultValue; }
      set {
        encodingType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "encoding_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEncodingType {
      get { return encodingType_ != null; }
    }
    /// <summary>Clears the value of the "encoding_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEncodingType() {
      encodingType_ = null;
    }

    /// <summary>Field number for the "priority_rank" field.</summary>
    public const int PriorityRankFieldNumber = 2;
    private readonly static uint PriorityRankDefaultValue = 0;

    private uint priorityRank_;
    /// <summary>
    /// The priority for this encoding, value 1 is highest priority, 2 is next priority, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PriorityRank {
      get { if ((_hasBits0 & 1) != 0) { return priorityRank_; } else { return PriorityRankDefaultValue; } }
      set {
        _hasBits0 |= 1;
        priorityRank_ = value;
      }
    }
    /// <summary>Gets whether the "priority_rank" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPriorityRank {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "priority_rank" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPriorityRank() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "encoding_parameters" field.</summary>
    public const int EncodingParametersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::UserSession2.EncodingParameter> _repeated_encodingParameters_codec
        = pb::FieldCodec.ForMessage(26, global::UserSession2.EncodingParameter.Parser);
    private readonly pbc::RepeatedField<global::UserSession2.EncodingParameter> encodingParameters_ = new pbc::RepeatedField<global::UserSession2.EncodingParameter>();
    /// <summary>
    /// Encoding parameters for this encoding method.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::UserSession2.EncodingParameter> EncodingParameters {
      get { return encodingParameters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Encoding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Encoding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EncodingType != other.EncodingType) return false;
      if (PriorityRank != other.PriorityRank) return false;
      if(!encodingParameters_.Equals(other.encodingParameters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEncodingType) hash ^= EncodingType.GetHashCode();
      if (HasPriorityRank) hash ^= PriorityRank.GetHashCode();
      hash ^= encodingParameters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEncodingType) {
        output.WriteRawTag(10);
        output.WriteString(EncodingType);
      }
      if (HasPriorityRank) {
        output.WriteRawTag(16);
        output.WriteUInt32(PriorityRank);
      }
      encodingParameters_.WriteTo(output, _repeated_encodingParameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEncodingType) {
        output.WriteRawTag(10);
        output.WriteString(EncodingType);
      }
      if (HasPriorityRank) {
        output.WriteRawTag(16);
        output.WriteUInt32(PriorityRank);
      }
      encodingParameters_.WriteTo(ref output, _repeated_encodingParameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEncodingType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EncodingType);
      }
      if (HasPriorityRank) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PriorityRank);
      }
      size += encodingParameters_.CalculateSize(_repeated_encodingParameters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Encoding other) {
      if (other == null) {
        return;
      }
      if (other.HasEncodingType) {
        EncodingType = other.EncodingType;
      }
      if (other.HasPriorityRank) {
        PriorityRank = other.PriorityRank;
      }
      encodingParameters_.Add(other.encodingParameters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EncodingType = input.ReadString();
            break;
          }
          case 16: {
            PriorityRank = input.ReadUInt32();
            break;
          }
          case 26: {
            encodingParameters_.AddEntriesFrom(input, _repeated_encodingParameters_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EncodingType = input.ReadString();
            break;
          }
          case 16: {
            PriorityRank = input.ReadUInt32();
            break;
          }
          case 26: {
            encodingParameters_.AddEntriesFrom(ref input, _repeated_encodingParameters_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The encoding parameter.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EncodingParameter : pb::IMessage<EncodingParameter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EncodingParameter> _parser = new pb::MessageParser<EncodingParameter>(() => new EncodingParameter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EncodingParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EncodingParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EncodingParameter(EncodingParameter other) : this() {
      name_ = other.name_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EncodingParameter Clone() {
      return new EncodingParameter(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// Encoding parameter's name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static string ValueDefaultValue = "";

    private string value_;
    /// <summary>
    /// Encoding parameter's value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EncodingParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EncodingParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EncodingParameter other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Client request to restore session because of accidental disconnect
  /// or to join additional concurrent connection to existing session.
  /// This message allows to avoid prompting user for [one-time] password.
  /// In case of session restore client application has to [re-]subscribe and [re-]request necessary data.
  /// Permissions to use this functionality is regulated
  /// by ALLOW_SESSION_RESTORE/ALLOW_SESSION_JOIN session settings which are specified in Logon or LogonInit message.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RestoreOrJoinSession : pb::IMessage<RestoreOrJoinSession>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RestoreOrJoinSession> _parser = new pb::MessageParser<RestoreOrJoinSession>(() => new RestoreOrJoinSession());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RestoreOrJoinSession> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RestoreOrJoinSession() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RestoreOrJoinSession(RestoreOrJoinSession other) : this() {
      _hasBits0 = other._hasBits0;
      sessionToken_ = other.sessionToken_;
      privateLabel_ = other.privateLabel_;
      clientAppId_ = other.clientAppId_;
      maxCollapsingLevel_ = other.maxCollapsingLevel_;
      protocolVersionMinor_ = other.protocolVersionMinor_;
      protocolVersionMajor_ = other.protocolVersionMajor_;
      marketDataBandwidth_ = other.marketDataBandwidth_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RestoreOrJoinSession Clone() {
      return new RestoreOrJoinSession(this);
    }

    /// <summary>Field number for the "session_token" field.</summary>
    public const int SessionTokenFieldNumber = 1;
    private readonly static string SessionTokenDefaultValue = "";

    private string sessionToken_;
    /// <summary>
    /// Token of the session to restore/join, it has limited lifetime after disconnect of the last connection.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SessionToken {
      get { return sessionToken_ ?? SessionTokenDefaultValue; }
      set {
        sessionToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "session_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSessionToken {
      get { return sessionToken_ != null; }
    }
    /// <summary>Clears the value of the "session_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSessionToken() {
      sessionToken_ = null;
    }

    /// <summary>Field number for the "private_label" field.</summary>
    public const int PrivateLabelFieldNumber = 2;
    private readonly static string PrivateLabelDefaultValue = "";

    private string privateLabel_;
    /// <summary>
    /// Private label identifies the Firm or Vendor that connects to the server,
    /// client_app_id field value is taken by default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PrivateLabel {
      get { return privateLabel_ ?? PrivateLabelDefaultValue; }
      set {
        privateLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "private_label" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrivateLabel {
      get { return privateLabel_ != null; }
    }
    /// <summary>Clears the value of the "private_label" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrivateLabel() {
      privateLabel_ = null;
    }

    /// <summary>Field number for the "client_app_id" field.</summary>
    public const int ClientAppIdFieldNumber = 3;
    private readonly static string ClientAppIdDefaultValue = "";

    private string clientAppId_;
    /// <summary>
    /// Identifier of the client application as assigned by CQG.
    /// This field is required to be specified and left optional only for backward compatibility.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientAppId {
      get { return clientAppId_ ?? ClientAppIdDefaultValue; }
      set {
        clientAppId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "client_app_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientAppId {
      get { return clientAppId_ != null; }
    }
    /// <summary>Clears the value of the "client_app_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientAppId() {
      clientAppId_ = null;
    }

    /// <summary>Field number for the "max_collapsing_level" field.</summary>
    public const int MaxCollapsingLevelFieldNumber = 4;
    private readonly static uint MaxCollapsingLevelDefaultValue = 0;

    private uint maxCollapsingLevel_;
    /// <summary>
    /// Maximum allowed real-time market data collapsing level.
    /// REAL_TIME_COLLAPSING_LEVEL_DOM_BBA_TRADES is the default allowed collapsing level.
    /// This field is associated with RealTimeCollapsingLevel enum type.
    /// Only one of max_collapsing_level and market_data_bandwidth can be specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxCollapsingLevel {
      get { if ((_hasBits0 & 1) != 0) { return maxCollapsingLevel_; } else { return MaxCollapsingLevelDefaultValue; } }
      set {
        _hasBits0 |= 1;
        maxCollapsingLevel_ = value;
      }
    }
    /// <summary>Gets whether the "max_collapsing_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxCollapsingLevel {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "max_collapsing_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxCollapsingLevel() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "protocol_version_minor" field.</summary>
    public const int ProtocolVersionMinorFieldNumber = 5;
    private readonly static uint ProtocolVersionMinorDefaultValue = 0;

    private uint protocolVersionMinor_;
    /// <summary>
    /// Current protocol version that is used by the client application.
    /// It is strongly recommended for client applications
    /// to put PROTOCOL_VERSION_MAJOR and PROTOCOL_VERSION_MINOR values from a used protocol file.
    /// If version information is not provided
    /// then Server assumes client uses 0.x version of the protocol and may disable some new protocol features.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProtocolVersionMinor {
      get { if ((_hasBits0 & 2) != 0) { return protocolVersionMinor_; } else { return ProtocolVersionMinorDefaultValue; } }
      set {
        _hasBits0 |= 2;
        protocolVersionMinor_ = value;
      }
    }
    /// <summary>Gets whether the "protocol_version_minor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProtocolVersionMinor {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "protocol_version_minor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProtocolVersionMinor() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "protocol_version_major" field.</summary>
    public const int ProtocolVersionMajorFieldNumber = 6;
    private readonly static uint ProtocolVersionMajorDefaultValue = 0;

    private uint protocolVersionMajor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProtocolVersionMajor {
      get { if ((_hasBits0 & 4) != 0) { return protocolVersionMajor_; } else { return ProtocolVersionMajorDefaultValue; } }
      set {
        _hasBits0 |= 4;
        protocolVersionMajor_ = value;
      }
    }
    /// <summary>Gets whether the "protocol_version_major" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasProtocolVersionMajor {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "protocol_version_major" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearProtocolVersionMajor() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "market_data_bandwidth" field.</summary>
    public const int MarketDataBandwidthFieldNumber = 7;
    private readonly static uint MarketDataBandwidthDefaultValue = 0;

    private uint marketDataBandwidth_;
    /// <summary>
    /// Real-time market data bandwidth limit (in KB per second).
    /// Only one of max_collapsing_level and market_data_bandwidth can be specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MarketDataBandwidth {
      get { if ((_hasBits0 & 8) != 0) { return marketDataBandwidth_; } else { return MarketDataBandwidthDefaultValue; } }
      set {
        _hasBits0 |= 8;
        marketDataBandwidth_ = value;
      }
    }
    /// <summary>Gets whether the "market_data_bandwidth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMarketDataBandwidth {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "market_data_bandwidth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMarketDataBandwidth() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RestoreOrJoinSession);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RestoreOrJoinSession other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionToken != other.SessionToken) return false;
      if (PrivateLabel != other.PrivateLabel) return false;
      if (ClientAppId != other.ClientAppId) return false;
      if (MaxCollapsingLevel != other.MaxCollapsingLevel) return false;
      if (ProtocolVersionMinor != other.ProtocolVersionMinor) return false;
      if (ProtocolVersionMajor != other.ProtocolVersionMajor) return false;
      if (MarketDataBandwidth != other.MarketDataBandwidth) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSessionToken) hash ^= SessionToken.GetHashCode();
      if (HasPrivateLabel) hash ^= PrivateLabel.GetHashCode();
      if (HasClientAppId) hash ^= ClientAppId.GetHashCode();
      if (HasMaxCollapsingLevel) hash ^= MaxCollapsingLevel.GetHashCode();
      if (HasProtocolVersionMinor) hash ^= ProtocolVersionMinor.GetHashCode();
      if (HasProtocolVersionMajor) hash ^= ProtocolVersionMajor.GetHashCode();
      if (HasMarketDataBandwidth) hash ^= MarketDataBandwidth.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSessionToken) {
        output.WriteRawTag(10);
        output.WriteString(SessionToken);
      }
      if (HasPrivateLabel) {
        output.WriteRawTag(18);
        output.WriteString(PrivateLabel);
      }
      if (HasClientAppId) {
        output.WriteRawTag(26);
        output.WriteString(ClientAppId);
      }
      if (HasMaxCollapsingLevel) {
        output.WriteRawTag(32);
        output.WriteUInt32(MaxCollapsingLevel);
      }
      if (HasProtocolVersionMinor) {
        output.WriteRawTag(40);
        output.WriteUInt32(ProtocolVersionMinor);
      }
      if (HasProtocolVersionMajor) {
        output.WriteRawTag(48);
        output.WriteUInt32(ProtocolVersionMajor);
      }
      if (HasMarketDataBandwidth) {
        output.WriteRawTag(56);
        output.WriteUInt32(MarketDataBandwidth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSessionToken) {
        output.WriteRawTag(10);
        output.WriteString(SessionToken);
      }
      if (HasPrivateLabel) {
        output.WriteRawTag(18);
        output.WriteString(PrivateLabel);
      }
      if (HasClientAppId) {
        output.WriteRawTag(26);
        output.WriteString(ClientAppId);
      }
      if (HasMaxCollapsingLevel) {
        output.WriteRawTag(32);
        output.WriteUInt32(MaxCollapsingLevel);
      }
      if (HasProtocolVersionMinor) {
        output.WriteRawTag(40);
        output.WriteUInt32(ProtocolVersionMinor);
      }
      if (HasProtocolVersionMajor) {
        output.WriteRawTag(48);
        output.WriteUInt32(ProtocolVersionMajor);
      }
      if (HasMarketDataBandwidth) {
        output.WriteRawTag(56);
        output.WriteUInt32(MarketDataBandwidth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSessionToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionToken);
      }
      if (HasPrivateLabel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrivateLabel);
      }
      if (HasClientAppId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientAppId);
      }
      if (HasMaxCollapsingLevel) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxCollapsingLevel);
      }
      if (HasProtocolVersionMinor) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersionMinor);
      }
      if (HasProtocolVersionMajor) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersionMajor);
      }
      if (HasMarketDataBandwidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MarketDataBandwidth);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RestoreOrJoinSession other) {
      if (other == null) {
        return;
      }
      if (other.HasSessionToken) {
        SessionToken = other.SessionToken;
      }
      if (other.HasPrivateLabel) {
        PrivateLabel = other.PrivateLabel;
      }
      if (other.HasClientAppId) {
        ClientAppId = other.ClientAppId;
      }
      if (other.HasMaxCollapsingLevel) {
        MaxCollapsingLevel = other.MaxCollapsingLevel;
      }
      if (other.HasProtocolVersionMinor) {
        ProtocolVersionMinor = other.ProtocolVersionMinor;
      }
      if (other.HasProtocolVersionMajor) {
        ProtocolVersionMajor = other.ProtocolVersionMajor;
      }
      if (other.HasMarketDataBandwidth) {
        MarketDataBandwidth = other.MarketDataBandwidth;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionToken = input.ReadString();
            break;
          }
          case 18: {
            PrivateLabel = input.ReadString();
            break;
          }
          case 26: {
            ClientAppId = input.ReadString();
            break;
          }
          case 32: {
            MaxCollapsingLevel = input.ReadUInt32();
            break;
          }
          case 40: {
            ProtocolVersionMinor = input.ReadUInt32();
            break;
          }
          case 48: {
            ProtocolVersionMajor = input.ReadUInt32();
            break;
          }
          case 56: {
            MarketDataBandwidth = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SessionToken = input.ReadString();
            break;
          }
          case 18: {
            PrivateLabel = input.ReadString();
            break;
          }
          case 26: {
            ClientAppId = input.ReadString();
            break;
          }
          case 32: {
            MaxCollapsingLevel = input.ReadUInt32();
            break;
          }
          case 40: {
            ProtocolVersionMinor = input.ReadUInt32();
            break;
          }
          case 48: {
            ProtocolVersionMajor = input.ReadUInt32();
            break;
          }
          case 56: {
            MarketDataBandwidth = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Result of session restore or join attempt.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RestoreOrJoinSessionResult : pb::IMessage<RestoreOrJoinSessionResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RestoreOrJoinSessionResult> _parser = new pb::MessageParser<RestoreOrJoinSessionResult>(() => new RestoreOrJoinSessionResult());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RestoreOrJoinSessionResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RestoreOrJoinSessionResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RestoreOrJoinSessionResult(RestoreOrJoinSessionResult other) : this() {
      _hasBits0 = other._hasBits0;
      resultCode_ = other.resultCode_;
      baseTime_ = other.baseTime_;
      textMessage_ = other.textMessage_;
      serverTime_ = other.serverTime_;
      dialectId_ = other.dialectId_;
      inactivityTimeout_ = other.inactivityTimeout_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RestoreOrJoinSessionResult Clone() {
      return new RestoreOrJoinSessionResult(this);
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 1;
    private readonly static uint ResultCodeDefaultValue = 0;

    private uint resultCode_;
    /// <summary>
    /// Session restore/join result.
    /// This field is associated with ResultCode enum type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ResultCode {
      get { if ((_hasBits0 & 1) != 0) { return resultCode_; } else { return ResultCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        resultCode_ = value;
      }
    }
    /// <summary>Gets whether the "result_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResultCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResultCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "base_time" field.</summary>
    public const int BaseTimeFieldNumber = 2;
    private readonly static string BaseTimeDefaultValue = "";

    private string baseTime_;
    /// <summary>
    /// Session base time (see LogonResult.base_time).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BaseTime {
      get { return baseTime_ ?? BaseTimeDefaultValue; }
      set {
        baseTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "base_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBaseTime {
      get { return baseTime_ != null; }
    }
    /// <summary>Clears the value of the "base_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBaseTime() {
      baseTime_ = null;
    }

    /// <summary>Field number for the "text_message" field.</summary>
    public const int TextMessageFieldNumber = 3;
    private readonly static string TextMessageDefaultValue = "";

    private string textMessage_;
    /// <summary>
    /// Optional failure details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TextMessage {
      get { return textMessage_ ?? TextMessageDefaultValue; }
      set {
        textMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextMessage {
      get { return textMessage_ != null; }
    }
    /// <summary>Clears the value of the "text_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextMessage() {
      textMessage_ = null;
    }

    /// <summary>Field number for the "server_time" field.</summary>
    public const int ServerTimeFieldNumber = 4;
    private readonly static long ServerTimeDefaultValue = 0L;

    private long serverTime_;
    /// <summary>
    /// Time when the message was sent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ServerTime {
      get { if ((_hasBits0 & 2) != 0) { return serverTime_; } else { return ServerTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        serverTime_ = value;
      }
    }
    /// <summary>Gets whether the "server_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServerTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "server_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServerTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "dialect_id" field.</summary>
    public const int DialectIdFieldNumber = 5;
    private readonly static string DialectIdDefaultValue = "";

    private string dialectId_;
    /// <summary>
    /// Session default dialect ID for used symbols (see Logon.dialect_id).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DialectId {
      get { return dialectId_ ?? DialectIdDefaultValue; }
      set {
        dialectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dialect_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDialectId {
      get { return dialectId_ != null; }
    }
    /// <summary>Clears the value of the "dialect_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDialectId() {
      dialectId_ = null;
    }

    /// <summary>Field number for the "inactivity_timeout" field.</summary>
    public const int InactivityTimeoutFieldNumber = 6;
    private readonly static uint InactivityTimeoutDefaultValue = 0;

    private uint inactivityTimeout_;
    /// <summary>
    /// Timeout of session inactivity, number of minutes. This is clients'
    /// responsibility to track activity and disable/close the session after
    /// the timeout (see LogonResult.inactivity_timeout).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint InactivityTimeout {
      get { if ((_hasBits0 & 4) != 0) { return inactivityTimeout_; } else { return InactivityTimeoutDefaultValue; } }
      set {
        _hasBits0 |= 4;
        inactivityTimeout_ = value;
      }
    }
    /// <summary>Gets whether the "inactivity_timeout" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInactivityTimeout {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "inactivity_timeout" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInactivityTimeout() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RestoreOrJoinSessionResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RestoreOrJoinSessionResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResultCode != other.ResultCode) return false;
      if (BaseTime != other.BaseTime) return false;
      if (TextMessage != other.TextMessage) return false;
      if (ServerTime != other.ServerTime) return false;
      if (DialectId != other.DialectId) return false;
      if (InactivityTimeout != other.InactivityTimeout) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResultCode) hash ^= ResultCode.GetHashCode();
      if (HasBaseTime) hash ^= BaseTime.GetHashCode();
      if (HasTextMessage) hash ^= TextMessage.GetHashCode();
      if (HasServerTime) hash ^= ServerTime.GetHashCode();
      if (HasDialectId) hash ^= DialectId.GetHashCode();
      if (HasInactivityTimeout) hash ^= InactivityTimeout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResultCode) {
        output.WriteRawTag(8);
        output.WriteUInt32(ResultCode);
      }
      if (HasBaseTime) {
        output.WriteRawTag(18);
        output.WriteString(BaseTime);
      }
      if (HasTextMessage) {
        output.WriteRawTag(26);
        output.WriteString(TextMessage);
      }
      if (HasServerTime) {
        output.WriteRawTag(32);
        output.WriteSInt64(ServerTime);
      }
      if (HasDialectId) {
        output.WriteRawTag(42);
        output.WriteString(DialectId);
      }
      if (HasInactivityTimeout) {
        output.WriteRawTag(48);
        output.WriteUInt32(InactivityTimeout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResultCode) {
        output.WriteRawTag(8);
        output.WriteUInt32(ResultCode);
      }
      if (HasBaseTime) {
        output.WriteRawTag(18);
        output.WriteString(BaseTime);
      }
      if (HasTextMessage) {
        output.WriteRawTag(26);
        output.WriteString(TextMessage);
      }
      if (HasServerTime) {
        output.WriteRawTag(32);
        output.WriteSInt64(ServerTime);
      }
      if (HasDialectId) {
        output.WriteRawTag(42);
        output.WriteString(DialectId);
      }
      if (HasInactivityTimeout) {
        output.WriteRawTag(48);
        output.WriteUInt32(InactivityTimeout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResultCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResultCode);
      }
      if (HasBaseTime) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseTime);
      }
      if (HasTextMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextMessage);
      }
      if (HasServerTime) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(ServerTime);
      }
      if (HasDialectId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DialectId);
      }
      if (HasInactivityTimeout) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InactivityTimeout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RestoreOrJoinSessionResult other) {
      if (other == null) {
        return;
      }
      if (other.HasResultCode) {
        ResultCode = other.ResultCode;
      }
      if (other.HasBaseTime) {
        BaseTime = other.BaseTime;
      }
      if (other.HasTextMessage) {
        TextMessage = other.TextMessage;
      }
      if (other.HasServerTime) {
        ServerTime = other.ServerTime;
      }
      if (other.HasDialectId) {
        DialectId = other.DialectId;
      }
      if (other.HasInactivityTimeout) {
        InactivityTimeout = other.InactivityTimeout;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 18: {
            BaseTime = input.ReadString();
            break;
          }
          case 26: {
            TextMessage = input.ReadString();
            break;
          }
          case 32: {
            ServerTime = input.ReadSInt64();
            break;
          }
          case 42: {
            DialectId = input.ReadString();
            break;
          }
          case 48: {
            InactivityTimeout = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 18: {
            BaseTime = input.ReadString();
            break;
          }
          case 26: {
            TextMessage = input.ReadString();
            break;
          }
          case 32: {
            ServerTime = input.ReadSInt64();
            break;
          }
          case 42: {
            DialectId = input.ReadString();
            break;
          }
          case 48: {
            InactivityTimeout = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RestoreOrJoinSessionResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ResultCode {
        /// <summary>
        ///// success codes
        /// User is logged in to the system.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_SUCCESS")] Success = 0,
        /// <summary>
        ///// failure codes (100+)
        /// General failure.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_FAILURE")] Failure = 104,
        /// <summary>
        /// Session is unknown to a server, client must perform standard logon procedure.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_UNKNOWN_SESSION")] UnknownSession = 101,
        /// <summary>
        /// User is not allowed to perform session restore/join or the maximum connection number has been exceeded.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_ACCESS_DENIED")] AccessDenied = 102,
        /// <summary>
        /// Some RestoreOrJoinSession message fields were not filled.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_INVALID_PARAMS")] InvalidParams = 103,
      }

    }
    #endregion

  }

  /// <summary>
  /// Notifies about joining of a concurrent connection to the session (see RestoreOrJoinSession).
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ConcurrentConnectionJoin : pb::IMessage<ConcurrentConnectionJoin>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConcurrentConnectionJoin> _parser = new pb::MessageParser<ConcurrentConnectionJoin>(() => new ConcurrentConnectionJoin());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConcurrentConnectionJoin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConcurrentConnectionJoin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConcurrentConnectionJoin(ConcurrentConnectionJoin other) : this() {
      _hasBits0 = other._hasBits0;
      isSameAppType_ = other.isSameAppType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConcurrentConnectionJoin Clone() {
      return new ConcurrentConnectionJoin(this);
    }

    /// <summary>Field number for the "is_same_app_type" field.</summary>
    public const int IsSameAppTypeFieldNumber = 1;
    private readonly static bool IsSameAppTypeDefaultValue = false;

    private bool isSameAppType_;
    /// <summary>
    /// Shows if new connection has been initiated by an application of the same type
    /// (with the same private_label and client_app_id fields).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSameAppType {
      get { if ((_hasBits0 & 1) != 0) { return isSameAppType_; } else { return IsSameAppTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isSameAppType_ = value;
      }
    }
    /// <summary>Gets whether the "is_same_app_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsSameAppType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_same_app_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsSameAppType() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConcurrentConnectionJoin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConcurrentConnectionJoin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSameAppType != other.IsSameAppType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIsSameAppType) hash ^= IsSameAppType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIsSameAppType) {
        output.WriteRawTag(8);
        output.WriteBool(IsSameAppType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIsSameAppType) {
        output.WriteRawTag(8);
        output.WriteBool(IsSameAppType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasIsSameAppType) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConcurrentConnectionJoin other) {
      if (other == null) {
        return;
      }
      if (other.HasIsSameAppType) {
        IsSameAppType = other.IsSameAppType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsSameAppType = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsSameAppType = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Client request to logoff from the system and close the session.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Logoff : pb::IMessage<Logoff>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Logoff> _parser = new pb::MessageParser<Logoff>(() => new Logoff());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Logoff> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Logoff() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Logoff(Logoff other) : this() {
      textMessage_ = other.textMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Logoff Clone() {
      return new Logoff(this);
    }

    /// <summary>Field number for the "text_message" field.</summary>
    public const int TextMessageFieldNumber = 1;
    private readonly static string TextMessageDefaultValue = "";

    private string textMessage_;
    /// <summary>
    /// Optional logoff reason.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TextMessage {
      get { return textMessage_ ?? TextMessageDefaultValue; }
      set {
        textMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextMessage {
      get { return textMessage_ != null; }
    }
    /// <summary>Clears the value of the "text_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextMessage() {
      textMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Logoff);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Logoff other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TextMessage != other.TextMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTextMessage) hash ^= TextMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTextMessage) {
        output.WriteRawTag(10);
        output.WriteString(TextMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTextMessage) {
        output.WriteRawTag(10);
        output.WriteString(TextMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTextMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Logoff other) {
      if (other == null) {
        return;
      }
      if (other.HasTextMessage) {
        TextMessage = other.TextMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TextMessage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TextMessage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Server notification about closing user's session,
  /// server closes connection after this message.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LoggedOff : pb::IMessage<LoggedOff>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoggedOff> _parser = new pb::MessageParser<LoggedOff>(() => new LoggedOff());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LoggedOff> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoggedOff() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoggedOff(LoggedOff other) : this() {
      _hasBits0 = other._hasBits0;
      logoffReason_ = other.logoffReason_;
      textMessage_ = other.textMessage_;
      redirectUrl_ = other.redirectUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LoggedOff Clone() {
      return new LoggedOff(this);
    }

    /// <summary>Field number for the "logoff_reason" field.</summary>
    public const int LogoffReasonFieldNumber = 1;
    private readonly static uint LogoffReasonDefaultValue = 0;

    private uint logoffReason_;
    /// <summary>
    /// One of the logoff reasons.
    /// This field is associated with LogoffReason enum type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LogoffReason {
      get { if ((_hasBits0 & 1) != 0) { return logoffReason_; } else { return LogoffReasonDefaultValue; } }
      set {
        _hasBits0 |= 1;
        logoffReason_ = value;
      }
    }
    /// <summary>Gets whether the "logoff_reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLogoffReason {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "logoff_reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLogoffReason() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "text_message" field.</summary>
    public const int TextMessageFieldNumber = 2;
    private readonly static string TextMessageDefaultValue = "";

    private string textMessage_;
    /// <summary>
    /// Optional logoff details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TextMessage {
      get { return textMessage_ ?? TextMessageDefaultValue; }
      set {
        textMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextMessage {
      get { return textMessage_ != null; }
    }
    /// <summary>Clears the value of the "text_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextMessage() {
      textMessage_ = null;
    }

    /// <summary>Field number for the "redirect_url" field.</summary>
    public const int RedirectUrlFieldNumber = 3;
    private readonly static string RedirectUrlDefaultValue = "";

    private string redirectUrl_;
    /// <summary>
    /// URL for redirection.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RedirectUrl {
      get { return redirectUrl_ ?? RedirectUrlDefaultValue; }
      set {
        redirectUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "redirect_url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRedirectUrl {
      get { return redirectUrl_ != null; }
    }
    /// <summary>Clears the value of the "redirect_url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRedirectUrl() {
      redirectUrl_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LoggedOff);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LoggedOff other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LogoffReason != other.LogoffReason) return false;
      if (TextMessage != other.TextMessage) return false;
      if (RedirectUrl != other.RedirectUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLogoffReason) hash ^= LogoffReason.GetHashCode();
      if (HasTextMessage) hash ^= TextMessage.GetHashCode();
      if (HasRedirectUrl) hash ^= RedirectUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLogoffReason) {
        output.WriteRawTag(8);
        output.WriteUInt32(LogoffReason);
      }
      if (HasTextMessage) {
        output.WriteRawTag(18);
        output.WriteString(TextMessage);
      }
      if (HasRedirectUrl) {
        output.WriteRawTag(26);
        output.WriteString(RedirectUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLogoffReason) {
        output.WriteRawTag(8);
        output.WriteUInt32(LogoffReason);
      }
      if (HasTextMessage) {
        output.WriteRawTag(18);
        output.WriteString(TextMessage);
      }
      if (HasRedirectUrl) {
        output.WriteRawTag(26);
        output.WriteString(RedirectUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLogoffReason) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LogoffReason);
      }
      if (HasTextMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextMessage);
      }
      if (HasRedirectUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RedirectUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LoggedOff other) {
      if (other == null) {
        return;
      }
      if (other.HasLogoffReason) {
        LogoffReason = other.LogoffReason;
      }
      if (other.HasTextMessage) {
        TextMessage = other.TextMessage;
      }
      if (other.HasRedirectUrl) {
        RedirectUrl = other.RedirectUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LogoffReason = input.ReadUInt32();
            break;
          }
          case 18: {
            TextMessage = input.ReadString();
            break;
          }
          case 26: {
            RedirectUrl = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LogoffReason = input.ReadUInt32();
            break;
          }
          case 18: {
            TextMessage = input.ReadString();
            break;
          }
          case 26: {
            RedirectUrl = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LoggedOff message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum LogoffReason {
        /// <summary>
        /// User is logged off by client request.
        /// </summary>
        [pbr::OriginalName("LOGOFF_REASON_BY_REQUEST")] ByRequest = 1,
        /// <summary>
        /// User is redirected to another URL.
        /// </summary>
        [pbr::OriginalName("LOGOFF_REASON_REDIRECTED")] Redirected = 2,
        /// <summary>
        /// System logged off the user because of some server side reason.
        /// </summary>
        [pbr::OriginalName("LOGOFF_REASON_FORCED")] Forced = 3,
        /// <summary>
        /// System logged off the user because this session was re-assigned to another connection
        /// that took it over by 'restore session' operation.
        /// </summary>
        [pbr::OriginalName("LOGOFF_REASON_REASSIGNED")] Reassigned = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Message to change user's password.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PasswordChange : pb::IMessage<PasswordChange>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PasswordChange> _parser = new pb::MessageParser<PasswordChange>(() => new PasswordChange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PasswordChange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PasswordChange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PasswordChange(PasswordChange other) : this() {
      oldPassword_ = other.oldPassword_;
      newPassword_ = other.newPassword_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PasswordChange Clone() {
      return new PasswordChange(this);
    }

    /// <summary>Field number for the "old_password" field.</summary>
    public const int OldPasswordFieldNumber = 1;
    private readonly static string OldPasswordDefaultValue = "";

    private string oldPassword_;
    /// <summary>
    /// Currently used password.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OldPassword {
      get { return oldPassword_ ?? OldPasswordDefaultValue; }
      set {
        oldPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "old_password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOldPassword {
      get { return oldPassword_ != null; }
    }
    /// <summary>Clears the value of the "old_password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOldPassword() {
      oldPassword_ = null;
    }

    /// <summary>Field number for the "new_password" field.</summary>
    public const int NewPasswordFieldNumber = 2;
    private readonly static string NewPasswordDefaultValue = "";

    private string newPassword_;
    /// <summary>
    /// New password that user wants to use.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NewPassword {
      get { return newPassword_ ?? NewPasswordDefaultValue; }
      set {
        newPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "new_password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNewPassword {
      get { return newPassword_ != null; }
    }
    /// <summary>Clears the value of the "new_password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNewPassword() {
      newPassword_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PasswordChange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PasswordChange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OldPassword != other.OldPassword) return false;
      if (NewPassword != other.NewPassword) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOldPassword) hash ^= OldPassword.GetHashCode();
      if (HasNewPassword) hash ^= NewPassword.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOldPassword) {
        output.WriteRawTag(10);
        output.WriteString(OldPassword);
      }
      if (HasNewPassword) {
        output.WriteRawTag(18);
        output.WriteString(NewPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOldPassword) {
        output.WriteRawTag(10);
        output.WriteString(OldPassword);
      }
      if (HasNewPassword) {
        output.WriteRawTag(18);
        output.WriteString(NewPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasOldPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OldPassword);
      }
      if (HasNewPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPassword);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PasswordChange other) {
      if (other == null) {
        return;
      }
      if (other.HasOldPassword) {
        OldPassword = other.OldPassword;
      }
      if (other.HasNewPassword) {
        NewPassword = other.NewPassword;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OldPassword = input.ReadString();
            break;
          }
          case 18: {
            NewPassword = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OldPassword = input.ReadString();
            break;
          }
          case 18: {
            NewPassword = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Result of user password change (for PasswordChange and PasswordChangeRoutineClient messages).
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PasswordChangeResult : pb::IMessage<PasswordChangeResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PasswordChangeResult> _parser = new pb::MessageParser<PasswordChangeResult>(() => new PasswordChangeResult());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PasswordChangeResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PasswordChangeResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PasswordChangeResult(PasswordChangeResult other) : this() {
      _hasBits0 = other._hasBits0;
      resultCode_ = other.resultCode_;
      textMessage_ = other.textMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PasswordChangeResult Clone() {
      return new PasswordChangeResult(this);
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 1;
    private readonly static uint ResultCodeDefaultValue = 0;

    private uint resultCode_;
    /// <summary>
    /// This field is associated with ResultCode enum type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ResultCode {
      get { if ((_hasBits0 & 1) != 0) { return resultCode_; } else { return ResultCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        resultCode_ = value;
      }
    }
    /// <summary>Gets whether the "result_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResultCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResultCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "text_message" field.</summary>
    public const int TextMessageFieldNumber = 2;
    private readonly static string TextMessageDefaultValue = "";

    private string textMessage_;
    /// <summary>
    /// Optional failure details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TextMessage {
      get { return textMessage_ ?? TextMessageDefaultValue; }
      set {
        textMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextMessage {
      get { return textMessage_ != null; }
    }
    /// <summary>Clears the value of the "text_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextMessage() {
      textMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PasswordChangeResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PasswordChangeResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResultCode != other.ResultCode) return false;
      if (TextMessage != other.TextMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResultCode) hash ^= ResultCode.GetHashCode();
      if (HasTextMessage) hash ^= TextMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResultCode) {
        output.WriteRawTag(8);
        output.WriteUInt32(ResultCode);
      }
      if (HasTextMessage) {
        output.WriteRawTag(18);
        output.WriteString(TextMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResultCode) {
        output.WriteRawTag(8);
        output.WriteUInt32(ResultCode);
      }
      if (HasTextMessage) {
        output.WriteRawTag(18);
        output.WriteString(TextMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResultCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResultCode);
      }
      if (HasTextMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PasswordChangeResult other) {
      if (other == null) {
        return;
      }
      if (other.HasResultCode) {
        ResultCode = other.ResultCode;
      }
      if (other.HasTextMessage) {
        TextMessage = other.TextMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 18: {
            TextMessage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 18: {
            TextMessage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PasswordChangeResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Password change result.
      /// </summary>
      public enum ResultCode {
        /// <summary>
        //// success codes
        /// User password is changed successfully.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_SUCCESS")] Success = 0,
        /// <summary>
        //// failure codes (100+)
        /// Incorrect user name or password.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_FAILURE")] Failure = 101,
        /// <summary>
        /// The negotiation rules for PasswordChangeRoutineClient have been violated,
        /// e.g. user has specified several fields at once in one message.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_ROUTINE_ERROR")] RoutineError = 102,
      }

    }
    #endregion

  }

  /// <summary>
  /// Request for temporary user name and password for demo.
  /// Clients of ObtainDemoCredentials are responsible to verify provided e-mail
  /// (e.g. by sending passwords by e-mail only) and prevent possible abuse.
  /// ObtainDemoCredentials requests are accepted
  /// only if client IP address is in the list of allowed IP addresses for service requests.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ObtainDemoCredentials : pb::IMessage<ObtainDemoCredentials>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObtainDemoCredentials> _parser = new pb::MessageParser<ObtainDemoCredentials>(() => new ObtainDemoCredentials());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ObtainDemoCredentials> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObtainDemoCredentials() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObtainDemoCredentials(ObtainDemoCredentials other) : this() {
      clientAppId_ = other.clientAppId_;
      firstName_ = other.firstName_;
      secondName_ = other.secondName_;
      eMail_ = other.eMail_;
      privateLabel_ = other.privateLabel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObtainDemoCredentials Clone() {
      return new ObtainDemoCredentials(this);
    }

    /// <summary>Field number for the "client_app_id" field.</summary>
    public const int ClientAppIdFieldNumber = 1;
    private readonly static string ClientAppIdDefaultValue = "";

    private string clientAppId_;
    /// <summary>
    /// Identifier of the client application as assigned by CQG.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientAppId {
      get { return clientAppId_ ?? ClientAppIdDefaultValue; }
      set {
        clientAppId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "client_app_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientAppId {
      get { return clientAppId_ != null; }
    }
    /// <summary>Clears the value of the "client_app_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientAppId() {
      clientAppId_ = null;
    }

    /// <summary>Field number for the "first_name" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private readonly static string FirstNameDefaultValue = "";

    private string firstName_;
    /// <summary>
    /// User first name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FirstName {
      get { return firstName_ ?? FirstNameDefaultValue; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "first_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFirstName {
      get { return firstName_ != null; }
    }
    /// <summary>Clears the value of the "first_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFirstName() {
      firstName_ = null;
    }

    /// <summary>Field number for the "second_name" field.</summary>
    public const int SecondNameFieldNumber = 3;
    private readonly static string SecondNameDefaultValue = "";

    private string secondName_;
    /// <summary>
    /// User second name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SecondName {
      get { return secondName_ ?? SecondNameDefaultValue; }
      set {
        secondName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "second_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSecondName {
      get { return secondName_ != null; }
    }
    /// <summary>Clears the value of the "second_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSecondName() {
      secondName_ = null;
    }

    /// <summary>Field number for the "e_mail" field.</summary>
    public const int EMailFieldNumber = 4;
    private readonly static string EMailDefaultValue = "";

    private string eMail_;
    /// <summary>
    /// E-mail address of a user who requested demo access.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EMail {
      get { return eMail_ ?? EMailDefaultValue; }
      set {
        eMail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "e_mail" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEMail {
      get { return eMail_ != null; }
    }
    /// <summary>Clears the value of the "e_mail" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEMail() {
      eMail_ = null;
    }

    /// <summary>Field number for the "private_label" field.</summary>
    public const int PrivateLabelFieldNumber = 5;
    private readonly static string PrivateLabelDefaultValue = "";

    private string privateLabel_;
    /// <summary>
    /// Private label identifies the Firm or Vendor that connects to the server,
    /// client_app_id field value is taken by default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PrivateLabel {
      get { return privateLabel_ ?? PrivateLabelDefaultValue; }
      set {
        privateLabel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "private_label" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrivateLabel {
      get { return privateLabel_ != null; }
    }
    /// <summary>Clears the value of the "private_label" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrivateLabel() {
      privateLabel_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ObtainDemoCredentials);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ObtainDemoCredentials other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientAppId != other.ClientAppId) return false;
      if (FirstName != other.FirstName) return false;
      if (SecondName != other.SecondName) return false;
      if (EMail != other.EMail) return false;
      if (PrivateLabel != other.PrivateLabel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClientAppId) hash ^= ClientAppId.GetHashCode();
      if (HasFirstName) hash ^= FirstName.GetHashCode();
      if (HasSecondName) hash ^= SecondName.GetHashCode();
      if (HasEMail) hash ^= EMail.GetHashCode();
      if (HasPrivateLabel) hash ^= PrivateLabel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClientAppId) {
        output.WriteRawTag(10);
        output.WriteString(ClientAppId);
      }
      if (HasFirstName) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (HasSecondName) {
        output.WriteRawTag(26);
        output.WriteString(SecondName);
      }
      if (HasEMail) {
        output.WriteRawTag(34);
        output.WriteString(EMail);
      }
      if (HasPrivateLabel) {
        output.WriteRawTag(42);
        output.WriteString(PrivateLabel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClientAppId) {
        output.WriteRawTag(10);
        output.WriteString(ClientAppId);
      }
      if (HasFirstName) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (HasSecondName) {
        output.WriteRawTag(26);
        output.WriteString(SecondName);
      }
      if (HasEMail) {
        output.WriteRawTag(34);
        output.WriteString(EMail);
      }
      if (HasPrivateLabel) {
        output.WriteRawTag(42);
        output.WriteString(PrivateLabel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasClientAppId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientAppId);
      }
      if (HasFirstName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (HasSecondName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecondName);
      }
      if (HasEMail) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EMail);
      }
      if (HasPrivateLabel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrivateLabel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ObtainDemoCredentials other) {
      if (other == null) {
        return;
      }
      if (other.HasClientAppId) {
        ClientAppId = other.ClientAppId;
      }
      if (other.HasFirstName) {
        FirstName = other.FirstName;
      }
      if (other.HasSecondName) {
        SecondName = other.SecondName;
      }
      if (other.HasEMail) {
        EMail = other.EMail;
      }
      if (other.HasPrivateLabel) {
        PrivateLabel = other.PrivateLabel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientAppId = input.ReadString();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            SecondName = input.ReadString();
            break;
          }
          case 34: {
            EMail = input.ReadString();
            break;
          }
          case 42: {
            PrivateLabel = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientAppId = input.ReadString();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            SecondName = input.ReadString();
            break;
          }
          case 34: {
            EMail = input.ReadString();
            break;
          }
          case 42: {
            PrivateLabel = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ObtainDemoCredentialsResult : pb::IMessage<ObtainDemoCredentialsResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObtainDemoCredentialsResult> _parser = new pb::MessageParser<ObtainDemoCredentialsResult>(() => new ObtainDemoCredentialsResult());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ObtainDemoCredentialsResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObtainDemoCredentialsResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObtainDemoCredentialsResult(ObtainDemoCredentialsResult other) : this() {
      _hasBits0 = other._hasBits0;
      resultCode_ = other.resultCode_;
      userName_ = other.userName_;
      password_ = other.password_;
      textMessage_ = other.textMessage_;
      userId_ = other.userId_;
      expirationUtc_ = other.expirationUtc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObtainDemoCredentialsResult Clone() {
      return new ObtainDemoCredentialsResult(this);
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 1;
    private readonly static uint ResultCodeDefaultValue = 0;

    private uint resultCode_;
    /// <summary>
    /// This field is associated with ResultCode enum type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ResultCode {
      get { if ((_hasBits0 & 1) != 0) { return resultCode_; } else { return ResultCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        resultCode_ = value;
      }
    }
    /// <summary>Gets whether the "result_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResultCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResultCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 2;
    private readonly static string UserNameDefaultValue = "";

    private string userName_;
    /// <summary>
    /// demo user name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserName {
      get { return userName_ ?? UserNameDefaultValue; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserName {
      get { return userName_ != null; }
    }
    /// <summary>Clears the value of the "user_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserName() {
      userName_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private readonly static string PasswordDefaultValue = "";

    private string password_;
    /// <summary>
    /// demo password.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Password {
      get { return password_ ?? PasswordDefaultValue; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPassword() {
      password_ = null;
    }

    /// <summary>Field number for the "text_message" field.</summary>
    public const int TextMessageFieldNumber = 4;
    private readonly static string TextMessageDefaultValue = "";

    private string textMessage_;
    /// <summary>
    /// Optional details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TextMessage {
      get { return textMessage_ ?? TextMessageDefaultValue; }
      set {
        textMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextMessage {
      get { return textMessage_ != null; }
    }
    /// <summary>Clears the value of the "text_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextMessage() {
      textMessage_ = null;
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 5;
    private readonly static int UserIdDefaultValue = 0;

    private int userId_;
    /// <summary>
    /// Unique user identification.
    /// Required in case of success.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserId {
      get { if ((_hasBits0 & 2) != 0) { return userId_; } else { return UserIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        userId_ = value;
      }
    }
    /// <summary>Gets whether the "user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "user_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "expiration_utc" field.</summary>
    public const int ExpirationUtcFieldNumber = 6;
    private readonly static string ExpirationUtcDefaultValue = "";

    private string expirationUtc_;
    /// <summary>
    /// Expiration date/time in UTC as ISO 8601 string (e.g. '2013-04-03T14:23:20Z').
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExpirationUtc {
      get { return expirationUtc_ ?? ExpirationUtcDefaultValue; }
      set {
        expirationUtc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "expiration_utc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExpirationUtc {
      get { return expirationUtc_ != null; }
    }
    /// <summary>Clears the value of the "expiration_utc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExpirationUtc() {
      expirationUtc_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ObtainDemoCredentialsResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ObtainDemoCredentialsResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResultCode != other.ResultCode) return false;
      if (UserName != other.UserName) return false;
      if (Password != other.Password) return false;
      if (TextMessage != other.TextMessage) return false;
      if (UserId != other.UserId) return false;
      if (ExpirationUtc != other.ExpirationUtc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResultCode) hash ^= ResultCode.GetHashCode();
      if (HasUserName) hash ^= UserName.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (HasTextMessage) hash ^= TextMessage.GetHashCode();
      if (HasUserId) hash ^= UserId.GetHashCode();
      if (HasExpirationUtc) hash ^= ExpirationUtc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResultCode) {
        output.WriteRawTag(8);
        output.WriteUInt32(ResultCode);
      }
      if (HasUserName) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (HasPassword) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (HasTextMessage) {
        output.WriteRawTag(34);
        output.WriteString(TextMessage);
      }
      if (HasUserId) {
        output.WriteRawTag(40);
        output.WriteSInt32(UserId);
      }
      if (HasExpirationUtc) {
        output.WriteRawTag(50);
        output.WriteString(ExpirationUtc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResultCode) {
        output.WriteRawTag(8);
        output.WriteUInt32(ResultCode);
      }
      if (HasUserName) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
      if (HasPassword) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (HasTextMessage) {
        output.WriteRawTag(34);
        output.WriteString(TextMessage);
      }
      if (HasUserId) {
        output.WriteRawTag(40);
        output.WriteSInt32(UserId);
      }
      if (HasExpirationUtc) {
        output.WriteRawTag(50);
        output.WriteString(ExpirationUtc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResultCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResultCode);
      }
      if (HasUserName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (HasTextMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextMessage);
      }
      if (HasUserId) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UserId);
      }
      if (HasExpirationUtc) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpirationUtc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ObtainDemoCredentialsResult other) {
      if (other == null) {
        return;
      }
      if (other.HasResultCode) {
        ResultCode = other.ResultCode;
      }
      if (other.HasUserName) {
        UserName = other.UserName;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      if (other.HasTextMessage) {
        TextMessage = other.TextMessage;
      }
      if (other.HasUserId) {
        UserId = other.UserId;
      }
      if (other.HasExpirationUtc) {
        ExpirationUtc = other.ExpirationUtc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 34: {
            TextMessage = input.ReadString();
            break;
          }
          case 40: {
            UserId = input.ReadSInt32();
            break;
          }
          case 50: {
            ExpirationUtc = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 34: {
            TextMessage = input.ReadString();
            break;
          }
          case 40: {
            UserId = input.ReadSInt32();
            break;
          }
          case 50: {
            ExpirationUtc = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ObtainDemoCredentialsResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Password change result.
      /// </summary>
      public enum ResultCode {
        /// <summary>
        //// success codes (0 - 100)
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_SUCCESS")] Success = 0,
        /// <summary>
        //// failure codes (100+)
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_FAILURE")] Failure = 101,
      }

    }
    #endregion

  }

  /// <summary>
  /// Text message from server.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UserMessage : pb::IMessage<UserMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserMessage> _parser = new pb::MessageParser<UserMessage>(() => new UserMessage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserMessage(UserMessage other) : this() {
      _hasBits0 = other._hasBits0;
      messageType_ = other.messageType_;
      source_ = other.source_;
      subject_ = other.subject_;
      text_ = other.text_;
      expirationUtcTime_ = other.expirationUtcTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserMessage Clone() {
      return new UserMessage(this);
    }

    /// <summary>Field number for the "message_type" field.</summary>
    public const int MessageTypeFieldNumber = 1;
    private readonly static uint MessageTypeDefaultValue = 0;

    private uint messageType_;
    /// <summary>
    /// This field is associated with MessageType enum type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MessageType {
      get { if ((_hasBits0 & 1) != 0) { return messageType_; } else { return MessageTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        messageType_ = value;
      }
    }
    /// <summary>Gets whether the "message_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMessageType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "message_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessageType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 2;
    private readonly static string SourceDefaultValue = "";

    private string source_;
    /// <summary>
    /// Information about source of the message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Source {
      get { return source_ ?? SourceDefaultValue; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "source" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSource {
      get { return source_ != null; }
    }
    /// <summary>Clears the value of the "source" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSource() {
      source_ = null;
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 3;
    private readonly static string SubjectDefaultValue = "";

    private string subject_;
    /// <summary>
    /// Message subject.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Subject {
      get { return subject_ ?? SubjectDefaultValue; }
      set {
        subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "subject" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSubject {
      get { return subject_ != null; }
    }
    /// <summary>Clears the value of the "subject" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSubject() {
      subject_ = null;
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 4;
    private readonly static string TextDefaultValue = "";

    private string text_;
    /// <summary>
    /// Message text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Text {
      get { return text_ ?? TextDefaultValue; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasText {
      get { return text_ != null; }
    }
    /// <summary>Clears the value of the "text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearText() {
      text_ = null;
    }

    /// <summary>Field number for the "expiration_utc_time" field.</summary>
    public const int ExpirationUtcTimeFieldNumber = 5;
    private readonly static long ExpirationUtcTimeDefaultValue = 0L;

    private long expirationUtcTime_;
    /// <summary>
    /// Optional time when this message is expired, it should be hidden from user after this time (UTC).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ExpirationUtcTime {
      get { if ((_hasBits0 & 2) != 0) { return expirationUtcTime_; } else { return ExpirationUtcTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        expirationUtcTime_ = value;
      }
    }
    /// <summary>Gets whether the "expiration_utc_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExpirationUtcTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "expiration_utc_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExpirationUtcTime() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageType != other.MessageType) return false;
      if (Source != other.Source) return false;
      if (Subject != other.Subject) return false;
      if (Text != other.Text) return false;
      if (ExpirationUtcTime != other.ExpirationUtcTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMessageType) hash ^= MessageType.GetHashCode();
      if (HasSource) hash ^= Source.GetHashCode();
      if (HasSubject) hash ^= Subject.GetHashCode();
      if (HasText) hash ^= Text.GetHashCode();
      if (HasExpirationUtcTime) hash ^= ExpirationUtcTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMessageType) {
        output.WriteRawTag(8);
        output.WriteUInt32(MessageType);
      }
      if (HasSource) {
        output.WriteRawTag(18);
        output.WriteString(Source);
      }
      if (HasSubject) {
        output.WriteRawTag(26);
        output.WriteString(Subject);
      }
      if (HasText) {
        output.WriteRawTag(34);
        output.WriteString(Text);
      }
      if (HasExpirationUtcTime) {
        output.WriteRawTag(40);
        output.WriteSInt64(ExpirationUtcTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMessageType) {
        output.WriteRawTag(8);
        output.WriteUInt32(MessageType);
      }
      if (HasSource) {
        output.WriteRawTag(18);
        output.WriteString(Source);
      }
      if (HasSubject) {
        output.WriteRawTag(26);
        output.WriteString(Subject);
      }
      if (HasText) {
        output.WriteRawTag(34);
        output.WriteString(Text);
      }
      if (HasExpirationUtcTime) {
        output.WriteRawTag(40);
        output.WriteSInt64(ExpirationUtcTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMessageType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MessageType);
      }
      if (HasSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (HasSubject) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
      }
      if (HasText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (HasExpirationUtcTime) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(ExpirationUtcTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasMessageType) {
        MessageType = other.MessageType;
      }
      if (other.HasSource) {
        Source = other.Source;
      }
      if (other.HasSubject) {
        Subject = other.Subject;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      if (other.HasExpirationUtcTime) {
        ExpirationUtcTime = other.ExpirationUtcTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MessageType = input.ReadUInt32();
            break;
          }
          case 18: {
            Source = input.ReadString();
            break;
          }
          case 26: {
            Subject = input.ReadString();
            break;
          }
          case 34: {
            Text = input.ReadString();
            break;
          }
          case 40: {
            ExpirationUtcTime = input.ReadSInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MessageType = input.ReadUInt32();
            break;
          }
          case 18: {
            Source = input.ReadString();
            break;
          }
          case 26: {
            Subject = input.ReadString();
            break;
          }
          case 34: {
            Text = input.ReadString();
            break;
          }
          case 40: {
            ExpirationUtcTime = input.ReadSInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the UserMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Type of the message.
      /// </summary>
      public enum MessageType {
        /// <summary>
        /// Critical error message. Informs the user of a significant problem on an exchange or within CQG infrastructure.
        /// Possible problems: incomplete order or position information; a critical message from CQG Customer support;
        /// technical problems or news from an exchange; a critical message from exchange; do not logoff when this occurs.
        /// a critical problem loading trading or data enablements; protocol violation.
        /// </summary>
        [pbr::OriginalName("MESSAGE_TYPE_CRITICAL_ERROR")] CriticalError = 1,
        /// <summary>
        /// Warning. Informs the user of an unexpected situation that does not affect the correctness of data, or a warning
        /// message from CQG Customer support.
        /// </summary>
        [pbr::OriginalName("MESSAGE_TYPE_WARNING")] Warning = 2,
        /// <summary>
        /// General information. Informs the user of an intermittent problem with the realtime data,
        /// or an informational message from CQG Customer support.
        /// </summary>
        [pbr::OriginalName("MESSAGE_TYPE_INFO")] Info = 3,
        /// <summary>
        /// This message shouldn't be visible for users, only dumped into a log file.
        /// </summary>
        [pbr::OriginalName("MESSAGE_TYPE_LOG")] Log = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Request information about user session.
  /// UserSessionState requests are accepted
  /// only if client ip address is in the list of allowed IP addresses for service requests.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UserSessionStateRequest : pb::IMessage<UserSessionStateRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserSessionStateRequest> _parser = new pb::MessageParser<UserSessionStateRequest>(() => new UserSessionStateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserSessionStateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserSessionStateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserSessionStateRequest(UserSessionStateRequest other) : this() {
      sessionToken_ = other.sessionToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserSessionStateRequest Clone() {
      return new UserSessionStateRequest(this);
    }

    /// <summary>Field number for the "session_token" field.</summary>
    public const int SessionTokenFieldNumber = 1;
    private readonly static string SessionTokenDefaultValue = "";

    private string sessionToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SessionToken {
      get { return sessionToken_ ?? SessionTokenDefaultValue; }
      set {
        sessionToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "session_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSessionToken {
      get { return sessionToken_ != null; }
    }
    /// <summary>Clears the value of the "session_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSessionToken() {
      sessionToken_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserSessionStateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserSessionStateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionToken != other.SessionToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSessionToken) hash ^= SessionToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSessionToken) {
        output.WriteRawTag(10);
        output.WriteString(SessionToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSessionToken) {
        output.WriteRawTag(10);
        output.WriteString(SessionToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSessionToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserSessionStateRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasSessionToken) {
        SessionToken = other.SessionToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SessionToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UserSessionStateResult : pb::IMessage<UserSessionStateResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserSessionStateResult> _parser = new pb::MessageParser<UserSessionStateResult>(() => new UserSessionStateResult());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserSessionStateResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserSessionStateResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserSessionStateResult(UserSessionStateResult other) : this() {
      _hasBits0 = other._hasBits0;
      sessionToken_ = other.sessionToken_;
      resultCode_ = other.resultCode_;
      userId_ = other.userId_;
      username_ = other.username_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserSessionStateResult Clone() {
      return new UserSessionStateResult(this);
    }

    /// <summary>Field number for the "session_token" field.</summary>
    public const int SessionTokenFieldNumber = 1;
    private readonly static string SessionTokenDefaultValue = "";

    private string sessionToken_;
    /// <summary>
    /// Session token from UserSessionStateRequest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SessionToken {
      get { return sessionToken_ ?? SessionTokenDefaultValue; }
      set {
        sessionToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "session_token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSessionToken {
      get { return sessionToken_ != null; }
    }
    /// <summary>Clears the value of the "session_token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSessionToken() {
      sessionToken_ = null;
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 2;
    private readonly static uint ResultCodeDefaultValue = 0;

    private uint resultCode_;
    /// <summary>
    /// This field is associated with ResultCode enum type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ResultCode {
      get { if ((_hasBits0 & 1) != 0) { return resultCode_; } else { return ResultCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        resultCode_ = value;
      }
    }
    /// <summary>Gets whether the "result_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResultCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResultCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private readonly static int UserIdDefaultValue = 0;

    private int userId_;
    /// <summary>
    //// User session information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserId {
      get { if ((_hasBits0 & 2) != 0) { return userId_; } else { return UserIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        userId_ = value;
      }
    }
    /// <summary>Gets whether the "user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "user_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 4;
    private readonly static string UsernameDefaultValue = "";

    private string username_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUsername() {
      username_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserSessionStateResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserSessionStateResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionToken != other.SessionToken) return false;
      if (ResultCode != other.ResultCode) return false;
      if (UserId != other.UserId) return false;
      if (Username != other.Username) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSessionToken) hash ^= SessionToken.GetHashCode();
      if (HasResultCode) hash ^= ResultCode.GetHashCode();
      if (HasUserId) hash ^= UserId.GetHashCode();
      if (HasUsername) hash ^= Username.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSessionToken) {
        output.WriteRawTag(10);
        output.WriteString(SessionToken);
      }
      if (HasResultCode) {
        output.WriteRawTag(16);
        output.WriteUInt32(ResultCode);
      }
      if (HasUserId) {
        output.WriteRawTag(24);
        output.WriteSInt32(UserId);
      }
      if (HasUsername) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSessionToken) {
        output.WriteRawTag(10);
        output.WriteString(SessionToken);
      }
      if (HasResultCode) {
        output.WriteRawTag(16);
        output.WriteUInt32(ResultCode);
      }
      if (HasUserId) {
        output.WriteRawTag(24);
        output.WriteSInt32(UserId);
      }
      if (HasUsername) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSessionToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionToken);
      }
      if (HasResultCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResultCode);
      }
      if (HasUserId) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UserId);
      }
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserSessionStateResult other) {
      if (other == null) {
        return;
      }
      if (other.HasSessionToken) {
        SessionToken = other.SessionToken;
      }
      if (other.HasResultCode) {
        ResultCode = other.ResultCode;
      }
      if (other.HasUserId) {
        UserId = other.UserId;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionToken = input.ReadString();
            break;
          }
          case 16: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 24: {
            UserId = input.ReadSInt32();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SessionToken = input.ReadString();
            break;
          }
          case 16: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 24: {
            UserId = input.ReadSInt32();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the UserSessionStateResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ResultCode {
        /// <summary>
        ///// success codes
        /// Data for requested session is found.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_SUCCESS")] Success = 0,
        /// <summary>
        ///// failure codes (100+)
        /// General failure.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_FAILURE")] Failure = 101,
        /// <summary>
        /// Session is unknown to a server.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_UNKNOWN_SESSION")] UnknownSession = 102,
        /// <summary>
        /// The user is not allowed to access this data.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_ACCESS_DENIED")] AccessDenied = 103,
      }

    }
    #endregion

  }

  /// <summary>
  /// Ping request which can be initiated by any side to ensure connection is alive. Both client and
  /// server sides must respond such request with Pong.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Ping : pb::IMessage<Ping>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Ping> _parser = new pb::MessageParser<Ping>(() => new Ping());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Ping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Ping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Ping(Ping other) : this() {
      _hasBits0 = other._hasBits0;
      token_ = other.token_;
      pingUtcTime_ = other.pingUtcTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Ping Clone() {
      return new Ping(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    /// <summary>
    /// Token routed back in Pong response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "ping_utc_time" field.</summary>
    public const int PingUtcTimeFieldNumber = 2;
    private readonly static long PingUtcTimeDefaultValue = 0L;

    private long pingUtcTime_;
    /// <summary>
    /// UTC time when this request was composed. Used for network latency diagnostics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PingUtcTime {
      get { if ((_hasBits0 & 1) != 0) { return pingUtcTime_; } else { return PingUtcTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        pingUtcTime_ = value;
      }
    }
    /// <summary>Gets whether the "ping_utc_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPingUtcTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ping_utc_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPingUtcTime() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Ping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Ping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (PingUtcTime != other.PingUtcTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasPingUtcTime) hash ^= PingUtcTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (HasPingUtcTime) {
        output.WriteRawTag(16);
        output.WriteSInt64(PingUtcTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (HasPingUtcTime) {
        output.WriteRawTag(16);
        output.WriteSInt64(PingUtcTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (HasPingUtcTime) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(PingUtcTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Ping other) {
      if (other == null) {
        return;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasPingUtcTime) {
        PingUtcTime = other.PingUtcTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 16: {
            PingUtcTime = input.ReadSInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 16: {
            PingUtcTime = input.ReadSInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Pong response which must be sent in response on Ping request.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Pong : pb::IMessage<Pong>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Pong> _parser = new pb::MessageParser<Pong>(() => new Pong());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Pong> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Pong() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Pong(Pong other) : this() {
      _hasBits0 = other._hasBits0;
      token_ = other.token_;
      pingUtcTime_ = other.pingUtcTime_;
      pongUtcTime_ = other.pongUtcTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Pong Clone() {
      return new Pong(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    /// <summary>
    /// Token passed in Ping request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "ping_utc_time" field.</summary>
    public const int PingUtcTimeFieldNumber = 2;
    private readonly static long PingUtcTimeDefaultValue = 0L;

    private long pingUtcTime_;
    /// <summary>
    /// Corresponding value from Ping request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PingUtcTime {
      get { if ((_hasBits0 & 1) != 0) { return pingUtcTime_; } else { return PingUtcTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        pingUtcTime_ = value;
      }
    }
    /// <summary>Gets whether the "ping_utc_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPingUtcTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "ping_utc_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPingUtcTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "pong_utc_time" field.</summary>
    public const int PongUtcTimeFieldNumber = 3;
    private readonly static long PongUtcTimeDefaultValue = 0L;

    private long pongUtcTime_;
    /// <summary>
    /// UTC time when this response was composed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PongUtcTime {
      get { if ((_hasBits0 & 2) != 0) { return pongUtcTime_; } else { return PongUtcTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        pongUtcTime_ = value;
      }
    }
    /// <summary>Gets whether the "pong_utc_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPongUtcTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "pong_utc_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPongUtcTime() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Pong);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Pong other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (PingUtcTime != other.PingUtcTime) return false;
      if (PongUtcTime != other.PongUtcTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasToken) hash ^= Token.GetHashCode();
      if (HasPingUtcTime) hash ^= PingUtcTime.GetHashCode();
      if (HasPongUtcTime) hash ^= PongUtcTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (HasPingUtcTime) {
        output.WriteRawTag(16);
        output.WriteSInt64(PingUtcTime);
      }
      if (HasPongUtcTime) {
        output.WriteRawTag(24);
        output.WriteSInt64(PongUtcTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (HasPingUtcTime) {
        output.WriteRawTag(16);
        output.WriteSInt64(PingUtcTime);
      }
      if (HasPongUtcTime) {
        output.WriteRawTag(24);
        output.WriteSInt64(PongUtcTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (HasPingUtcTime) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(PingUtcTime);
      }
      if (HasPongUtcTime) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(PongUtcTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Pong other) {
      if (other == null) {
        return;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasPingUtcTime) {
        PingUtcTime = other.PingUtcTime;
      }
      if (other.HasPongUtcTime) {
        PongUtcTime = other.PongUtcTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 16: {
            PingUtcTime = input.ReadSInt64();
            break;
          }
          case 24: {
            PongUtcTime = input.ReadSInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 16: {
            PingUtcTime = input.ReadSInt64();
            break;
          }
          case 24: {
            PongUtcTime = input.ReadSInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message to change max collapsing level for real-time market data.
  /// If "market_data_bandwidth" was set for the session in Logon or RestoreOrJoinSession message, the request will fail.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SetCollapsingLevelRequest : pb::IMessage<SetCollapsingLevelRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetCollapsingLevelRequest> _parser = new pb::MessageParser<SetCollapsingLevelRequest>(() => new SetCollapsingLevelRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetCollapsingLevelRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetCollapsingLevelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetCollapsingLevelRequest(SetCollapsingLevelRequest other) : this() {
      _hasBits0 = other._hasBits0;
      maxCollapsingLevel_ = other.maxCollapsingLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetCollapsingLevelRequest Clone() {
      return new SetCollapsingLevelRequest(this);
    }

    /// <summary>Field number for the "max_collapsing_level" field.</summary>
    public const int MaxCollapsingLevelFieldNumber = 1;
    private readonly static uint MaxCollapsingLevelDefaultValue = 0;

    private uint maxCollapsingLevel_;
    /// <summary>
    /// Max collapsing level.
    /// This field is associated with RealTimeCollapsingLevel enum type.
    /// If max_collapsing_level is omitted then REAL_TIME_COLLAPSING_LEVEL_NONE will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxCollapsingLevel {
      get { if ((_hasBits0 & 1) != 0) { return maxCollapsingLevel_; } else { return MaxCollapsingLevelDefaultValue; } }
      set {
        _hasBits0 |= 1;
        maxCollapsingLevel_ = value;
      }
    }
    /// <summary>Gets whether the "max_collapsing_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxCollapsingLevel {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "max_collapsing_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxCollapsingLevel() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetCollapsingLevelRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetCollapsingLevelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxCollapsingLevel != other.MaxCollapsingLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMaxCollapsingLevel) hash ^= MaxCollapsingLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMaxCollapsingLevel) {
        output.WriteRawTag(8);
        output.WriteUInt32(MaxCollapsingLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMaxCollapsingLevel) {
        output.WriteRawTag(8);
        output.WriteUInt32(MaxCollapsingLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMaxCollapsingLevel) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxCollapsingLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetCollapsingLevelRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasMaxCollapsingLevel) {
        MaxCollapsingLevel = other.MaxCollapsingLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxCollapsingLevel = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MaxCollapsingLevel = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response to SetCollapsingLevelRequest
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SetCollapsingLevelResult : pb::IMessage<SetCollapsingLevelResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetCollapsingLevelResult> _parser = new pb::MessageParser<SetCollapsingLevelResult>(() => new SetCollapsingLevelResult());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SetCollapsingLevelResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::UserSession2.UserSession2Reflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetCollapsingLevelResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetCollapsingLevelResult(SetCollapsingLevelResult other) : this() {
      _hasBits0 = other._hasBits0;
      resultCode_ = other.resultCode_;
      textMessage_ = other.textMessage_ != null ? other.textMessage_.Clone() : null;
      maxCollapsingLevel_ = other.maxCollapsingLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SetCollapsingLevelResult Clone() {
      return new SetCollapsingLevelResult(this);
    }

    /// <summary>Field number for the "result_code" field.</summary>
    public const int ResultCodeFieldNumber = 1;
    private readonly static uint ResultCodeDefaultValue = 0;

    private uint resultCode_;
    /// <summary>
    /// This field is associated with ResultCode enum type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ResultCode {
      get { if ((_hasBits0 & 1) != 0) { return resultCode_; } else { return ResultCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        resultCode_ = value;
      }
    }
    /// <summary>Gets whether the "result_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResultCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResultCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "text_message" field.</summary>
    public const int TextMessageFieldNumber = 2;
    private global::Shared1.Text textMessage_;
    /// <summary>
    /// Possible details of status or failure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Shared1.Text TextMessage {
      get { return textMessage_; }
      set {
        textMessage_ = value;
      }
    }

    /// <summary>Field number for the "max_collapsing_level" field.</summary>
    public const int MaxCollapsingLevelFieldNumber = 3;
    private readonly static uint MaxCollapsingLevelDefaultValue = 0;

    private uint maxCollapsingLevel_;
    /// <summary>
    /// Current value of max collapsing level.
    /// Field is set if result_code is RESULT_CODE_SUCCESS.
    /// If result_code is RESULT_CODE_SUCCESS and max_collapsing_level is omitted
    /// it should be treated as a REAL_TIME_COLLAPSING_LEVEL_NONE value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxCollapsingLevel {
      get { if ((_hasBits0 & 2) != 0) { return maxCollapsingLevel_; } else { return MaxCollapsingLevelDefaultValue; } }
      set {
        _hasBits0 |= 2;
        maxCollapsingLevel_ = value;
      }
    }
    /// <summary>Gets whether the "max_collapsing_level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxCollapsingLevel {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "max_collapsing_level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxCollapsingLevel() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SetCollapsingLevelResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SetCollapsingLevelResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResultCode != other.ResultCode) return false;
      if (!object.Equals(TextMessage, other.TextMessage)) return false;
      if (MaxCollapsingLevel != other.MaxCollapsingLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResultCode) hash ^= ResultCode.GetHashCode();
      if (textMessage_ != null) hash ^= TextMessage.GetHashCode();
      if (HasMaxCollapsingLevel) hash ^= MaxCollapsingLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResultCode) {
        output.WriteRawTag(8);
        output.WriteUInt32(ResultCode);
      }
      if (textMessage_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TextMessage);
      }
      if (HasMaxCollapsingLevel) {
        output.WriteRawTag(24);
        output.WriteUInt32(MaxCollapsingLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResultCode) {
        output.WriteRawTag(8);
        output.WriteUInt32(ResultCode);
      }
      if (textMessage_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TextMessage);
      }
      if (HasMaxCollapsingLevel) {
        output.WriteRawTag(24);
        output.WriteUInt32(MaxCollapsingLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasResultCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ResultCode);
      }
      if (textMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextMessage);
      }
      if (HasMaxCollapsingLevel) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxCollapsingLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SetCollapsingLevelResult other) {
      if (other == null) {
        return;
      }
      if (other.HasResultCode) {
        ResultCode = other.ResultCode;
      }
      if (other.textMessage_ != null) {
        if (textMessage_ == null) {
          TextMessage = new global::Shared1.Text();
        }
        TextMessage.MergeFrom(other.TextMessage);
      }
      if (other.HasMaxCollapsingLevel) {
        MaxCollapsingLevel = other.MaxCollapsingLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 18: {
            if (textMessage_ == null) {
              TextMessage = new global::Shared1.Text();
            }
            input.ReadMessage(TextMessage);
            break;
          }
          case 24: {
            MaxCollapsingLevel = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ResultCode = input.ReadUInt32();
            break;
          }
          case 18: {
            if (textMessage_ == null) {
              TextMessage = new global::Shared1.Text();
            }
            input.ReadMessage(TextMessage);
            break;
          }
          case 24: {
            MaxCollapsingLevel = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SetCollapsingLevelResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ResultCode {
        /// <summary>
        ///// success codes
        /// Maximum collapsing level has been successfully changed.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_SUCCESS")] Success = 0,
        /// <summary>
        ///// failure codes (100+)
        /// General failure.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_FAILURE")] Failure = 101,
        /// <summary>
        /// market_data_bandwidth was set for the session in Logon or RestoreOrJoinSession message.
        /// Collapsing level cannot be set when market_data_bandwidth is set in Logon or RestoreOrJoinSession message.
        /// </summary>
        [pbr::OriginalName("RESULT_CODE_BANDWIDTH_IS_SET")] BandwidthIsSet = 102,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
